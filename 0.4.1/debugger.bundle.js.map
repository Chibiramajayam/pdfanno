{"version":3,"sources":["webpack://PDFAnnoCore/webpack/universalModuleDefinition","webpack://PDFAnnoCore/webpack/bootstrap","webpack://PDFAnnoCore/./src/debugger.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,wBAAwB;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4CAA4C,cAAc,EAAE;AAC5D,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uCAAuC;AACzD,iCAAiC,oCAAoC,EAAE;AACvE;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","file":"./dist/debugger.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PDFAnnoCore\"] = factory();\n\telse\n\t\troot[\"PDFAnnoCore\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 140);\n","/*eslint-disable */\r\n/* Copyright 2012 Mozilla Foundation\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* globals PDFJS */\r\n\r\n'use strict';\r\n\r\nvar FontInspector = (function FontInspectorClosure() {\r\n  var fonts;\r\n  var active = false;\r\n  var fontAttribute = 'data-font-name';\r\n  function removeSelection() {\r\n    var divs = document.querySelectorAll('div[' + fontAttribute + ']');\r\n    for (var i = 0, ii = divs.length; i < ii; ++i) {\r\n      var div = divs[i];\r\n      div.className = '';\r\n    }\r\n  }\r\n  function resetSelection() {\r\n    var divs = document.querySelectorAll('div[' + fontAttribute + ']');\r\n    for (var i = 0, ii = divs.length; i < ii; ++i) {\r\n      var div = divs[i];\r\n      div.className = 'debuggerHideText';\r\n    }\r\n  }\r\n  function selectFont(fontName, show) {\r\n    var divs = document.querySelectorAll('div[' + fontAttribute + '=' +\r\n                                         fontName + ']');\r\n    for (var i = 0, ii = divs.length; i < ii; ++i) {\r\n      var div = divs[i];\r\n      div.className = show ? 'debuggerShowText' : 'debuggerHideText';\r\n    }\r\n  }\r\n  function textLayerClick(e) {\r\n    if (!e.target.dataset.fontName ||\r\n        e.target.tagName.toUpperCase() !== 'DIV') {\r\n      return;\r\n    }\r\n    var fontName = e.target.dataset.fontName;\r\n    var selects = document.getElementsByTagName('input');\r\n    for (var i = 0; i < selects.length; ++i) {\r\n      var select = selects[i];\r\n      if (select.dataset.fontName !== fontName) {\r\n        continue;\r\n      }\r\n      select.checked = !select.checked;\r\n      selectFont(fontName, select.checked);\r\n      select.scrollIntoView();\r\n    }\r\n  }\r\n  return {\r\n    // Properties/functions needed by PDFBug.\r\n    id: 'FontInspector',\r\n    name: 'Font Inspector',\r\n    panel: null,\r\n    manager: null,\r\n    init: function init() {\r\n      var panel = this.panel;\r\n      panel.setAttribute('style', 'padding: 5px;');\r\n      var tmp = document.createElement('button');\r\n      tmp.addEventListener('click', resetSelection);\r\n      tmp.textContent = 'Refresh';\r\n      panel.appendChild(tmp);\r\n\r\n      fonts = document.createElement('div');\r\n      panel.appendChild(fonts);\r\n    },\r\n    cleanup: function cleanup() {\r\n      fonts.textContent = '';\r\n    },\r\n    enabled: false,\r\n    get active() {\r\n      return active;\r\n    },\r\n    set active(value) {\r\n      active = value;\r\n      if (active) {\r\n        document.body.addEventListener('click', textLayerClick, true);\r\n        resetSelection();\r\n      } else {\r\n        document.body.removeEventListener('click', textLayerClick, true);\r\n        removeSelection();\r\n      }\r\n    },\r\n    // FontInspector specific functions.\r\n    fontAdded: function fontAdded(fontObj, url) {\r\n      function properties(obj, list) {\r\n        var moreInfo = document.createElement('table');\r\n        for (var i = 0; i < list.length; i++) {\r\n          var tr = document.createElement('tr');\r\n          var td1 = document.createElement('td');\r\n          td1.textContent = list[i];\r\n          tr.appendChild(td1);\r\n          var td2 = document.createElement('td');\r\n          td2.textContent = obj[list[i]].toString();\r\n          tr.appendChild(td2);\r\n          moreInfo.appendChild(tr);\r\n        }\r\n        return moreInfo;\r\n      }\r\n      var moreInfo = properties(fontObj, ['name', 'type']);\r\n      var fontName = fontObj.loadedName;\r\n      var font = document.createElement('div');\r\n      var name = document.createElement('span');\r\n      name.textContent = fontName;\r\n      var download = document.createElement('a');\r\n      if (url) {\r\n        url = /url\\(['\"]?([^\\)\"']+)/.exec(url);\r\n        download.href = url[1];\r\n      } else if (fontObj.data) {\r\n        url = URL.createObjectURL(new Blob([fontObj.data], {\r\n          type: fontObj.mimeType\r\n        }));\r\n        download.href = url;\r\n      }\r\n      download.textContent = 'Download';\r\n      var logIt = document.createElement('a');\r\n      logIt.href = '';\r\n      logIt.textContent = 'Log';\r\n      logIt.addEventListener('click', function(event) {\r\n        event.preventDefault();\r\n        console.log(fontObj);\r\n      });\r\n      var select = document.createElement('input');\r\n      select.setAttribute('type', 'checkbox');\r\n      select.dataset.fontName = fontName;\r\n      select.addEventListener('click', (function(select, fontName) {\r\n        return (function() {\r\n           selectFont(fontName, select.checked);\r\n        });\r\n      })(select, fontName));\r\n      font.appendChild(select);\r\n      font.appendChild(name);\r\n      font.appendChild(document.createTextNode(' '));\r\n      font.appendChild(download);\r\n      font.appendChild(document.createTextNode(' '));\r\n      font.appendChild(logIt);\r\n      font.appendChild(moreInfo);\r\n      fonts.appendChild(font);\r\n      // Somewhat of a hack, should probably add a hook for when the text layer\r\n      // is done rendering.\r\n      setTimeout(function() {\r\n        if (this.active) {\r\n          resetSelection();\r\n        }\r\n      }.bind(this), 2000);\r\n    }\r\n  };\r\n})();\r\n\r\n// Manages all the page steppers.\r\nvar StepperManager = (function StepperManagerClosure() {\r\n  var steppers = [];\r\n  var stepperDiv = null;\r\n  var stepperControls = null;\r\n  var stepperChooser = null;\r\n  var breakPoints = {};\r\n  return {\r\n    // Properties/functions needed by PDFBug.\r\n    id: 'Stepper',\r\n    name: 'Stepper',\r\n    panel: null,\r\n    manager: null,\r\n    init: function init() {\r\n      var self = this;\r\n      this.panel.setAttribute('style', 'padding: 5px;');\r\n      stepperControls = document.createElement('div');\r\n      stepperChooser = document.createElement('select');\r\n      stepperChooser.addEventListener('change', function(event) {\r\n        self.selectStepper(this.value);\r\n      });\r\n      stepperControls.appendChild(stepperChooser);\r\n      stepperDiv = document.createElement('div');\r\n      this.panel.appendChild(stepperControls);\r\n      this.panel.appendChild(stepperDiv);\r\n      if (sessionStorage.getItem('pdfjsBreakPoints')) {\r\n        breakPoints = JSON.parse(sessionStorage.getItem('pdfjsBreakPoints'));\r\n      }\r\n    },\r\n    cleanup: function cleanup() {\r\n      stepperChooser.textContent = '';\r\n      stepperDiv.textContent = '';\r\n      steppers = [];\r\n    },\r\n    enabled: false,\r\n    active: false,\r\n    // Stepper specific functions.\r\n    create: function create(pageIndex) {\r\n      var debug = document.createElement('div');\r\n      debug.id = 'stepper' + pageIndex;\r\n      debug.setAttribute('hidden', true);\r\n      debug.className = 'stepper';\r\n      stepperDiv.appendChild(debug);\r\n      var b = document.createElement('option');\r\n      b.textContent = 'Page ' + (pageIndex + 1);\r\n      b.value = pageIndex;\r\n      stepperChooser.appendChild(b);\r\n      var initBreakPoints = breakPoints[pageIndex] || [];\r\n      var stepper = new Stepper(debug, pageIndex, initBreakPoints);\r\n      steppers.push(stepper);\r\n      if (steppers.length === 1) {\r\n        this.selectStepper(pageIndex, false);\r\n      }\r\n      return stepper;\r\n    },\r\n    selectStepper: function selectStepper(pageIndex, selectPanel) {\r\n      var i;\r\n      pageIndex = pageIndex | 0;\r\n      if (selectPanel) {\r\n        this.manager.selectPanel(this);\r\n      }\r\n      for (i = 0; i < steppers.length; ++i) {\r\n        var stepper = steppers[i];\r\n        if (stepper.pageIndex === pageIndex) {\r\n          stepper.panel.removeAttribute('hidden');\r\n        } else {\r\n          stepper.panel.setAttribute('hidden', true);\r\n        }\r\n      }\r\n      var options = stepperChooser.options;\r\n      for (i = 0; i < options.length; ++i) {\r\n        var option = options[i];\r\n        option.selected = (option.value | 0) === pageIndex;\r\n      }\r\n    },\r\n    saveBreakPoints: function saveBreakPoints(pageIndex, bps) {\r\n      breakPoints[pageIndex] = bps;\r\n      sessionStorage.setItem('pdfjsBreakPoints', JSON.stringify(breakPoints));\r\n    }\r\n  };\r\n})();\r\n\r\n// The stepper for each page's IRQueue.\r\nvar Stepper = (function StepperClosure() {\r\n  // Shorter way to create element and optionally set textContent.\r\n  function c(tag, textContent) {\r\n    var d = document.createElement(tag);\r\n    if (textContent) {\r\n      d.textContent = textContent;\r\n    }\r\n    return d;\r\n  }\r\n\r\n  var opMap = null;\r\n\r\n  function simplifyArgs(args) {\r\n    if (typeof args === 'string') {\r\n      var MAX_STRING_LENGTH = 75;\r\n      return args.length <= MAX_STRING_LENGTH ? args :\r\n        args.substr(0, MAX_STRING_LENGTH) + '...';\r\n    }\r\n    if (typeof args !== 'object' || args === null) {\r\n      return args;\r\n    }\r\n    if ('length' in args) { // array\r\n      var simpleArgs = [], i, ii;\r\n      var MAX_ITEMS = 10;\r\n      for (i = 0, ii = Math.min(MAX_ITEMS, args.length); i < ii; i++) {\r\n        simpleArgs.push(simplifyArgs(args[i]));\r\n      }\r\n      if (i < args.length) {\r\n        simpleArgs.push('...');\r\n      }\r\n      return simpleArgs;\r\n    }\r\n    var simpleObj = {};\r\n    for (var key in args) {\r\n      simpleObj[key] = simplifyArgs(args[key]);\r\n    }\r\n    return simpleObj;\r\n  }\r\n\r\n  function Stepper(panel, pageIndex, initialBreakPoints) {\r\n    this.panel = panel;\r\n    this.breakPoint = 0;\r\n    this.nextBreakPoint = null;\r\n    this.pageIndex = pageIndex;\r\n    this.breakPoints = initialBreakPoints;\r\n    this.currentIdx = -1;\r\n    this.operatorListIdx = 0;\r\n  }\r\n  Stepper.prototype = {\r\n    init: function init() {\r\n      var panel = this.panel;\r\n      var content = c('div', 'c=continue, s=step');\r\n      var table = c('table');\r\n      content.appendChild(table);\r\n      table.cellSpacing = 0;\r\n      var headerRow = c('tr');\r\n      table.appendChild(headerRow);\r\n      headerRow.appendChild(c('th', 'Break'));\r\n      headerRow.appendChild(c('th', 'Idx'));\r\n      headerRow.appendChild(c('th', 'fn'));\r\n      headerRow.appendChild(c('th', 'args'));\r\n      panel.appendChild(content);\r\n      this.table = table;\r\n      if (!opMap) {\r\n        opMap = Object.create(null);\r\n        for (var key in PDFJS.OPS) {\r\n          opMap[PDFJS.OPS[key]] = key;\r\n        }\r\n      }\r\n    },\r\n    updateOperatorList: function updateOperatorList(operatorList) {\r\n      var self = this;\r\n\r\n      function cboxOnClick() {\r\n        var x = +this.dataset.idx;\r\n        if (this.checked) {\r\n          self.breakPoints.push(x);\r\n        } else {\r\n          self.breakPoints.splice(self.breakPoints.indexOf(x), 1);\r\n        }\r\n        StepperManager.saveBreakPoints(self.pageIndex, self.breakPoints);\r\n      }\r\n\r\n      var MAX_OPERATORS_COUNT = 15000;\r\n      if (this.operatorListIdx > MAX_OPERATORS_COUNT) {\r\n        return;\r\n      }\r\n\r\n      var chunk = document.createDocumentFragment();\r\n      var operatorsToDisplay = Math.min(MAX_OPERATORS_COUNT,\r\n                                        operatorList.fnArray.length);\r\n      for (var i = this.operatorListIdx; i < operatorsToDisplay; i++) {\r\n        var line = c('tr');\r\n        line.className = 'line';\r\n        line.dataset.idx = i;\r\n        chunk.appendChild(line);\r\n        var checked = this.breakPoints.indexOf(i) !== -1;\r\n        var args = operatorList.argsArray[i] || [];\r\n\r\n        var breakCell = c('td');\r\n        var cbox = c('input');\r\n        cbox.type = 'checkbox';\r\n        cbox.className = 'points';\r\n        cbox.checked = checked;\r\n        cbox.dataset.idx = i;\r\n        cbox.onclick = cboxOnClick;\r\n\r\n        breakCell.appendChild(cbox);\r\n        line.appendChild(breakCell);\r\n        line.appendChild(c('td', i.toString()));\r\n        var fn = opMap[operatorList.fnArray[i]];\r\n        var decArgs = args;\r\n        if (fn === 'showText') {\r\n          var glyphs = args[0];\r\n          var newArgs = [];\r\n          var str = [];\r\n          for (var j = 0; j < glyphs.length; j++) {\r\n            var glyph = glyphs[j];\r\n            if (typeof glyph === 'object' && glyph !== null) {\r\n              str.push(glyph.fontChar);\r\n            } else {\r\n              if (str.length > 0) {\r\n                newArgs.push(str.join(''));\r\n                str = [];\r\n              }\r\n              newArgs.push(glyph); // null or number\r\n            }\r\n          }\r\n          if (str.length > 0) {\r\n            newArgs.push(str.join(''));\r\n          }\r\n          decArgs = [newArgs];\r\n        }\r\n        line.appendChild(c('td', fn));\r\n        line.appendChild(c('td', JSON.stringify(simplifyArgs(decArgs))));\r\n      }\r\n      if (operatorsToDisplay < operatorList.fnArray.length) {\r\n        line = c('tr');\r\n        var lastCell = c('td', '...');\r\n        lastCell.colspan = 4;\r\n        chunk.appendChild(lastCell);\r\n      }\r\n      this.operatorListIdx = operatorList.fnArray.length;\r\n      this.table.appendChild(chunk);\r\n    },\r\n    getNextBreakPoint: function getNextBreakPoint() {\r\n      this.breakPoints.sort(function(a, b) { return a - b; });\r\n      for (var i = 0; i < this.breakPoints.length; i++) {\r\n        if (this.breakPoints[i] > this.currentIdx) {\r\n          return this.breakPoints[i];\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n    breakIt: function breakIt(idx, callback) {\r\n      StepperManager.selectStepper(this.pageIndex, true);\r\n      var self = this;\r\n      var dom = document;\r\n      self.currentIdx = idx;\r\n      var listener = function(e) {\r\n        switch (e.keyCode) {\r\n          case 83: // step\r\n            dom.removeEventListener('keydown', listener, false);\r\n            self.nextBreakPoint = self.currentIdx + 1;\r\n            self.goTo(-1);\r\n            callback();\r\n            break;\r\n          case 67: // continue\r\n            dom.removeEventListener('keydown', listener, false);\r\n            var breakPoint = self.getNextBreakPoint();\r\n            self.nextBreakPoint = breakPoint;\r\n            self.goTo(-1);\r\n            callback();\r\n            break;\r\n        }\r\n      };\r\n      dom.addEventListener('keydown', listener, false);\r\n      self.goTo(idx);\r\n    },\r\n    goTo: function goTo(idx) {\r\n      var allRows = this.panel.getElementsByClassName('line');\r\n      for (var x = 0, xx = allRows.length; x < xx; ++x) {\r\n        var row = allRows[x];\r\n        if ((row.dataset.idx | 0) === idx) {\r\n          row.style.backgroundColor = 'rgb(251,250,207)';\r\n          row.scrollIntoView();\r\n        } else {\r\n          row.style.backgroundColor = null;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return Stepper;\r\n})();\r\n\r\nvar Stats = (function Stats() {\r\n  var stats = [];\r\n  function clear(node) {\r\n    while (node.hasChildNodes()) {\r\n      node.removeChild(node.lastChild);\r\n    }\r\n  }\r\n  function getStatIndex(pageNumber) {\r\n    for (var i = 0, ii = stats.length; i < ii; ++i) {\r\n      if (stats[i].pageNumber === pageNumber) {\r\n        return i;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  return {\r\n    // Properties/functions needed by PDFBug.\r\n    id: 'Stats',\r\n    name: 'Stats',\r\n    panel: null,\r\n    manager: null,\r\n    init: function init() {\r\n      this.panel.setAttribute('style', 'padding: 5px;');\r\n      PDFJS.enableStats = true;\r\n    },\r\n    enabled: false,\r\n    active: false,\r\n    // Stats specific functions.\r\n    add: function(pageNumber, stat) {\r\n      if (!stat) {\r\n        return;\r\n      }\r\n      var statsIndex = getStatIndex(pageNumber);\r\n      if (statsIndex !== false) {\r\n        var b = stats[statsIndex];\r\n        this.panel.removeChild(b.div);\r\n        stats.splice(statsIndex, 1);\r\n      }\r\n      var wrapper = document.createElement('div');\r\n      wrapper.className = 'stats';\r\n      var title = document.createElement('div');\r\n      title.className = 'title';\r\n      title.textContent = 'Page: ' + pageNumber;\r\n      var statsDiv = document.createElement('div');\r\n      statsDiv.textContent = stat.toString();\r\n      wrapper.appendChild(title);\r\n      wrapper.appendChild(statsDiv);\r\n      stats.push({ pageNumber: pageNumber, div: wrapper });\r\n      stats.sort(function(a, b) { return a.pageNumber - b.pageNumber; });\r\n      clear(this.panel);\r\n      for (var i = 0, ii = stats.length; i < ii; ++i) {\r\n        this.panel.appendChild(stats[i].div);\r\n      }\r\n    },\r\n    cleanup: function () {\r\n      stats = [];\r\n      clear(this.panel);\r\n    }\r\n  };\r\n})();\r\n\r\n// Manages all the debugging tools.\r\nvar PDFBug = (function PDFBugClosure() {\r\n  var panelWidth = 300;\r\n  var buttons = [];\r\n  var activePanel = null;\r\n\r\n  return {\r\n    tools: [\r\n      FontInspector,\r\n      StepperManager,\r\n      Stats\r\n    ],\r\n    enable: function(ids) {\r\n      var all = false, tools = this.tools;\r\n      if (ids.length === 1 && ids[0] === 'all') {\r\n        all = true;\r\n      }\r\n      for (var i = 0; i < tools.length; ++i) {\r\n        var tool = tools[i];\r\n        if (all || ids.indexOf(tool.id) !== -1) {\r\n          tool.enabled = true;\r\n        }\r\n      }\r\n      if (!all) {\r\n        // Sort the tools by the order they are enabled.\r\n        tools.sort(function(a, b) {\r\n          var indexA = ids.indexOf(a.id);\r\n          indexA = indexA < 0 ? tools.length : indexA;\r\n          var indexB = ids.indexOf(b.id);\r\n          indexB = indexB < 0 ? tools.length : indexB;\r\n          return indexA - indexB;\r\n        });\r\n      }\r\n    },\r\n    init: function init() {\r\n      /*\r\n       * Basic Layout:\r\n       * PDFBug\r\n       *  Controls\r\n       *  Panels\r\n       *    Panel\r\n       *    Panel\r\n       *    ...\r\n       */\r\n      var ui = document.createElement('div');\r\n      ui.id = 'PDFBug';\r\n\r\n      var controls = document.createElement('div');\r\n      controls.setAttribute('class', 'controls');\r\n      ui.appendChild(controls);\r\n\r\n      var panels = document.createElement('div');\r\n      panels.setAttribute('class', 'panels');\r\n      ui.appendChild(panels);\r\n\r\n      var container = document.getElementById('viewerContainer');\r\n      container.appendChild(ui);\r\n      container.style.right = panelWidth + 'px';\r\n\r\n      // Initialize all the debugging tools.\r\n      var tools = this.tools;\r\n      var self = this;\r\n      for (var i = 0; i < tools.length; ++i) {\r\n        var tool = tools[i];\r\n        var panel = document.createElement('div');\r\n        var panelButton = document.createElement('button');\r\n        panelButton.textContent = tool.name;\r\n        panelButton.addEventListener('click', (function(selected) {\r\n          return function(event) {\r\n            event.preventDefault();\r\n            self.selectPanel(selected);\r\n          };\r\n        })(i));\r\n        controls.appendChild(panelButton);\r\n        panels.appendChild(panel);\r\n        tool.panel = panel;\r\n        tool.manager = this;\r\n        if (tool.enabled) {\r\n          tool.init();\r\n        } else {\r\n          panel.textContent = tool.name + ' is disabled. To enable add ' +\r\n                              ' \"' + tool.id + '\" to the pdfBug parameter ' +\r\n                              'and refresh (seperate multiple by commas).';\r\n        }\r\n        buttons.push(panelButton);\r\n      }\r\n      this.selectPanel(0);\r\n    },\r\n    cleanup: function cleanup() {\r\n      for (var i = 0, ii = this.tools.length; i < ii; i++) {\r\n        if (this.tools[i].enabled) {\r\n          this.tools[i].cleanup();\r\n        }\r\n      }\r\n    },\r\n    selectPanel: function selectPanel(index) {\r\n      if (typeof index !== 'number') {\r\n        index = this.tools.indexOf(index);\r\n      }\r\n      if (index === activePanel) {\r\n        return;\r\n      }\r\n      activePanel = index;\r\n      var tools = this.tools;\r\n      for (var j = 0; j < tools.length; ++j) {\r\n        if (j === index) {\r\n          buttons[j].setAttribute('class', 'active');\r\n          tools[j].active = true;\r\n          tools[j].panel.removeAttribute('hidden');\r\n        } else {\r\n          buttons[j].setAttribute('class', '');\r\n          tools[j].active = false;\r\n          tools[j].panel.setAttribute('hidden', 'true');\r\n        }\r\n      }\r\n    }\r\n  };\r\n})();\r\n"],"sourceRoot":""}