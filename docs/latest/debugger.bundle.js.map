{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6****","webpack:///webpack/bootstrap b20dcc761d0c0c7f1dfa?4bc9****","webpack:///./src/debugger.js"],"names":[],"mappings":"AAAA,cACA,2BACA,uCACA,sCACA,WACA,MACA,6CAEA,kBACA,GAAC,mBACD,kBCTA,cAMA,IACA,iBAGA,mBACA,CACA,IACA,aAIA,mCAGA,aAGA,OACA,OAIA,OAzBA,YA4BA,MAGA,uBACA,GACA,kCACA,CACA,gBACA,cAGA,OAGA,iBACA,YACA,qBAA2B,UAA0B,UACrD,YAAiC,CAAe,QAChD,EAEA,aADA,QAIA,mBAAsD,wCAA+D,SAGrH,MAGA,6BC5CA,aAEA,gBACA,aAIA,gDACA,aAAqC,OAAQ,IAC7C,MACA,iBAEA,EACA,aACA,gDACA,aAAqC,OAAQ,IAC7C,MACA,iBAEA,kBACA,gBACA,gDACA,MACA,aAAqC,OAAQ,IAC7C,MACA,sCAEA,kBACA,cACA,qBACA,UAGA,oEACA,yCACA,WAAmB,MAAoB,OACvC,OACA,eAGA,6BACA,cACA,WAEA,iBACA,IAzCA,GACA,OACA,uBAyCA,IACA,qBACA,uBACA,aACA,oBACA,YACA,6BACA,8CACA,6BACA,yBACA,YAEA,wCACA,SACA,cACA,oBACA,eACA,EACA,EACA,uBACA,CACA,QACA,eACA,CAEA,sCACA,cAEA,wCACA,cAEA,IAEA,yBACA,oBACA,kCACA,WAAuB,MAAiB,WACxC,8BACA,+BACA,oBACA,OACA,4CACA,4BACA,aACA,iBACA,cACA,CACA,QACA,YACA,aACA,oCACA,gCACA,UACA,2CAEA,iCACA,iBACO,MACP,+CACA,QAEA,cAEA,sBACA,wCACA,YACA,iBACA,4CACA,GACA,yBACA,MACA,gCACA,+BACA,sBACA,mDACA,kBACA,OACA,QACA,CACA,UACA,iBACA,qDACA,QACA,qDACA,QACA,iBACA,iBAGA,oCACA,MACA,QAEA,GAAO,aACP,IAEA,EAGA,gBACA,OACA,KACA,OACA,OACA,OACA,SAEA,IACA,eACA,gBACA,aACA,oBACA,OACA,qCACA,0CACA,gCACA,gDACA,sBACA,MACA,KACA,wCACA,kBACA,0BACA,sCACA,0DAEA,qBACA,oBACA,eACA,iBACA,KACA,EACA,EACA,WAEA,4BACA,8BACA,YACA,2BACA,yBACA,YACA,4CACA,mCACA,KACA,UACA,2BACA,KACA,aAKA,SAJA,QACA,mBAEA,qBAEA,6BACA,IACA,UAEA,8BAEA,QAAiB,MAAqB,WACtC,OACA,OACA,sCAEA,+BAEA,YACA,SACA,cAAiB,MAAoB,WACrC,OACA,iBACA,cACA,CACA,+BACA,CACA,sDACA,aAEA,EAGA,gBAEA,gBACA,gBAEA,iBAGA,aADA,gBAGA,cAGA,uBACA,OACA,YACA,0BACA,KACA,wBACA,SAEA,yBACA,OACA,mBACA,KAAwD,QAAQ,IAChE,aAEA,OAIA,WAHA,eAEA,QAEA,OACA,UACA,eAEA,MACA,QAEA,kBACA,MACA,wBACA,sBACA,UACA,iBACA,+BACA,uBACA,CACA,kBApCA,KAqLA,mBAhJA,gBACA,YACA,gBACA,0BACA,WACA,6BACA,UACA,WACA,oCACA,+BACA,6BACA,4BACA,WACA,oBACA,QACA,gCACA,YACA,YAGA,SACA,gCACA,aAGA,qBACA,SACA,sBAEA,sDAEA,mCACA,YAEA,OAVA,OAWA,eAIA,yCACA,2BACA,cACA,eAAwC,gBAAwB,QAChE,KACA,kBACA,iBACA,QACA,sBACA,kDAEA,OACA,UACA,gBACA,uBACA,WACA,oBACA,QAEA,YACA,iBACA,sCACA,uBACA,YACA,sBACA,eACA,KACA,KACA,KAAyB,MAAmB,OAC5C,MACA,yBACA,kBAEA,WACA,2BACA,OAEA,MAGA,SACA,0BAEA,OACA,GACA,iBACA,6CACA,OACA,uBACA,KACA,mBACA,iBACA,IACA,cACA,gCACA,kBACA,eACA,8BACA,oCAA4C,OAAc,IAC1D,aAAqB,qBAA6B,OAClD,gCACA,uBAGA,qBACA,KACA,uBACA,sBACA,oBACA,OACA,WACA,8BACA,UACA,aACA,0BACA,8CACA,UACA,GACA,IACA,UACA,0BACA,wBACA,sBACA,yBACA,GAGA,KACA,qBACA,kBACA,OACA,kBACA,+CACA,gBAA0C,OAAQ,IAClD,MACA,MACA,8CACA,qBAEA,0CAGA,IAEA,IAGA,gBACA,cAEA,QACA,iCAEA,UACA,cACA,iBAAsC,OAAQ,IAC9C,YACA,eAGA,SACA,QACA,OAbA,SAeA,IACA,aACA,cACA,aACA,oBACA,iCACA,uBACA,cACA,EACA,WAEA,2BACA,CAGA,YACA,eACA,OACA,8BACA,gBACA,EACA,8BACA,mBACA,qCACA,mBACA,sBACA,wCACA,uBACA,aACA,iBACA,sBAAkB,cAClB,4BAAiC,uBAAoC,UACrE,UACA,uBAAwC,OAAQ,IAChD,gCAEA,KACA,oBACA,GACA,UACA,MAEA,EAGA,gBACA,OAEA,KAEA,WACA,OAKA,0BACA,iBACA,oBACA,eAEA,kBAAqB,MAAkB,OACvC,MACA,UACA,yBAKA,mCACA,mBACA,YACA,2BACA,mBACA,SACA,GAEA,EACA,iBAUA,8BACA,YAEA,sCACA,8BACA,cAEA,4CACA,8BACA,YAEA,6CACA,qBACA,6BAtDA,IAyDA,oBACA,QACA,OAAqB,MAAkB,WACvC,OACA,8BACA,gCACA,0BACA,2CACA,mBACA,GACA,mBACA,cACA,CACA,QACA,iBACA,iBACA,kBACA,OACA,UAEA,uBACA,wCAGA,4EACA,OACA,kBACA,EACA,oBACA,0BAA6C,OAAQ,IACrD,kBACA,uBAGA,SACA,yBACA,IACA,kCAEA,YAGA,OACA,mBACA,QAAqB,MAAkB,OACvC,IACA,iCACA,eACA,qCAEA,sCACA,SACA,2CAGA,SAEA,EAAC","file":"./dist/debugger.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PDFAnnoCore\"] = factory();\n\telse\n\t\troot[\"PDFAnnoCore\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 92);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b20dcc761d0c0c7f1dfa","/*eslint-disable */\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals PDFJS */\n\n'use strict';\n\nvar FontInspector = (function FontInspectorClosure() {\n  var fonts;\n  var active = false;\n  var fontAttribute = 'data-font-name';\n  function removeSelection() {\n    var divs = document.querySelectorAll('div[' + fontAttribute + ']');\n    for (var i = 0, ii = divs.length; i < ii; ++i) {\n      var div = divs[i];\n      div.className = '';\n    }\n  }\n  function resetSelection() {\n    var divs = document.querySelectorAll('div[' + fontAttribute + ']');\n    for (var i = 0, ii = divs.length; i < ii; ++i) {\n      var div = divs[i];\n      div.className = 'debuggerHideText';\n    }\n  }\n  function selectFont(fontName, show) {\n    var divs = document.querySelectorAll('div[' + fontAttribute + '=' +\n                                         fontName + ']');\n    for (var i = 0, ii = divs.length; i < ii; ++i) {\n      var div = divs[i];\n      div.className = show ? 'debuggerShowText' : 'debuggerHideText';\n    }\n  }\n  function textLayerClick(e) {\n    if (!e.target.dataset.fontName ||\n        e.target.tagName.toUpperCase() !== 'DIV') {\n      return;\n    }\n    var fontName = e.target.dataset.fontName;\n    var selects = document.getElementsByTagName('input');\n    for (var i = 0; i < selects.length; ++i) {\n      var select = selects[i];\n      if (select.dataset.fontName !== fontName) {\n        continue;\n      }\n      select.checked = !select.checked;\n      selectFont(fontName, select.checked);\n      select.scrollIntoView();\n    }\n  }\n  return {\n    // Properties/functions needed by PDFBug.\n    id: 'FontInspector',\n    name: 'Font Inspector',\n    panel: null,\n    manager: null,\n    init: function init() {\n      var panel = this.panel;\n      panel.setAttribute('style', 'padding: 5px;');\n      var tmp = document.createElement('button');\n      tmp.addEventListener('click', resetSelection);\n      tmp.textContent = 'Refresh';\n      panel.appendChild(tmp);\n\n      fonts = document.createElement('div');\n      panel.appendChild(fonts);\n    },\n    cleanup: function cleanup() {\n      fonts.textContent = '';\n    },\n    enabled: false,\n    get active() {\n      return active;\n    },\n    set active(value) {\n      active = value;\n      if (active) {\n        document.body.addEventListener('click', textLayerClick, true);\n        resetSelection();\n      } else {\n        document.body.removeEventListener('click', textLayerClick, true);\n        removeSelection();\n      }\n    },\n    // FontInspector specific functions.\n    fontAdded: function fontAdded(fontObj, url) {\n      function properties(obj, list) {\n        var moreInfo = document.createElement('table');\n        for (var i = 0; i < list.length; i++) {\n          var tr = document.createElement('tr');\n          var td1 = document.createElement('td');\n          td1.textContent = list[i];\n          tr.appendChild(td1);\n          var td2 = document.createElement('td');\n          td2.textContent = obj[list[i]].toString();\n          tr.appendChild(td2);\n          moreInfo.appendChild(tr);\n        }\n        return moreInfo;\n      }\n      var moreInfo = properties(fontObj, ['name', 'type']);\n      var fontName = fontObj.loadedName;\n      var font = document.createElement('div');\n      var name = document.createElement('span');\n      name.textContent = fontName;\n      var download = document.createElement('a');\n      if (url) {\n        url = /url\\(['\"]?([^\\)\"']+)/.exec(url);\n        download.href = url[1];\n      } else if (fontObj.data) {\n        url = URL.createObjectURL(new Blob([fontObj.data], {\n          type: fontObj.mimeType\n        }));\n        download.href = url;\n      }\n      download.textContent = 'Download';\n      var logIt = document.createElement('a');\n      logIt.href = '';\n      logIt.textContent = 'Log';\n      logIt.addEventListener('click', function(event) {\n        event.preventDefault();\n        console.log(fontObj);\n      });\n      var select = document.createElement('input');\n      select.setAttribute('type', 'checkbox');\n      select.dataset.fontName = fontName;\n      select.addEventListener('click', (function(select, fontName) {\n        return (function() {\n           selectFont(fontName, select.checked);\n        });\n      })(select, fontName));\n      font.appendChild(select);\n      font.appendChild(name);\n      font.appendChild(document.createTextNode(' '));\n      font.appendChild(download);\n      font.appendChild(document.createTextNode(' '));\n      font.appendChild(logIt);\n      font.appendChild(moreInfo);\n      fonts.appendChild(font);\n      // Somewhat of a hack, should probably add a hook for when the text layer\n      // is done rendering.\n      setTimeout(function() {\n        if (this.active) {\n          resetSelection();\n        }\n      }.bind(this), 2000);\n    }\n  };\n})();\n\n// Manages all the page steppers.\nvar StepperManager = (function StepperManagerClosure() {\n  var steppers = [];\n  var stepperDiv = null;\n  var stepperControls = null;\n  var stepperChooser = null;\n  var breakPoints = {};\n  return {\n    // Properties/functions needed by PDFBug.\n    id: 'Stepper',\n    name: 'Stepper',\n    panel: null,\n    manager: null,\n    init: function init() {\n      var self = this;\n      this.panel.setAttribute('style', 'padding: 5px;');\n      stepperControls = document.createElement('div');\n      stepperChooser = document.createElement('select');\n      stepperChooser.addEventListener('change', function(event) {\n        self.selectStepper(this.value);\n      });\n      stepperControls.appendChild(stepperChooser);\n      stepperDiv = document.createElement('div');\n      this.panel.appendChild(stepperControls);\n      this.panel.appendChild(stepperDiv);\n      if (sessionStorage.getItem('pdfjsBreakPoints')) {\n        breakPoints = JSON.parse(sessionStorage.getItem('pdfjsBreakPoints'));\n      }\n    },\n    cleanup: function cleanup() {\n      stepperChooser.textContent = '';\n      stepperDiv.textContent = '';\n      steppers = [];\n    },\n    enabled: false,\n    active: false,\n    // Stepper specific functions.\n    create: function create(pageIndex) {\n      var debug = document.createElement('div');\n      debug.id = 'stepper' + pageIndex;\n      debug.setAttribute('hidden', true);\n      debug.className = 'stepper';\n      stepperDiv.appendChild(debug);\n      var b = document.createElement('option');\n      b.textContent = 'Page ' + (pageIndex + 1);\n      b.value = pageIndex;\n      stepperChooser.appendChild(b);\n      var initBreakPoints = breakPoints[pageIndex] || [];\n      var stepper = new Stepper(debug, pageIndex, initBreakPoints);\n      steppers.push(stepper);\n      if (steppers.length === 1) {\n        this.selectStepper(pageIndex, false);\n      }\n      return stepper;\n    },\n    selectStepper: function selectStepper(pageIndex, selectPanel) {\n      var i;\n      pageIndex = pageIndex | 0;\n      if (selectPanel) {\n        this.manager.selectPanel(this);\n      }\n      for (i = 0; i < steppers.length; ++i) {\n        var stepper = steppers[i];\n        if (stepper.pageIndex === pageIndex) {\n          stepper.panel.removeAttribute('hidden');\n        } else {\n          stepper.panel.setAttribute('hidden', true);\n        }\n      }\n      var options = stepperChooser.options;\n      for (i = 0; i < options.length; ++i) {\n        var option = options[i];\n        option.selected = (option.value | 0) === pageIndex;\n      }\n    },\n    saveBreakPoints: function saveBreakPoints(pageIndex, bps) {\n      breakPoints[pageIndex] = bps;\n      sessionStorage.setItem('pdfjsBreakPoints', JSON.stringify(breakPoints));\n    }\n  };\n})();\n\n// The stepper for each page's IRQueue.\nvar Stepper = (function StepperClosure() {\n  // Shorter way to create element and optionally set textContent.\n  function c(tag, textContent) {\n    var d = document.createElement(tag);\n    if (textContent) {\n      d.textContent = textContent;\n    }\n    return d;\n  }\n\n  var opMap = null;\n\n  function simplifyArgs(args) {\n    if (typeof args === 'string') {\n      var MAX_STRING_LENGTH = 75;\n      return args.length <= MAX_STRING_LENGTH ? args :\n        args.substr(0, MAX_STRING_LENGTH) + '...';\n    }\n    if (typeof args !== 'object' || args === null) {\n      return args;\n    }\n    if ('length' in args) { // array\n      var simpleArgs = [], i, ii;\n      var MAX_ITEMS = 10;\n      for (i = 0, ii = Math.min(MAX_ITEMS, args.length); i < ii; i++) {\n        simpleArgs.push(simplifyArgs(args[i]));\n      }\n      if (i < args.length) {\n        simpleArgs.push('...');\n      }\n      return simpleArgs;\n    }\n    var simpleObj = {};\n    for (var key in args) {\n      simpleObj[key] = simplifyArgs(args[key]);\n    }\n    return simpleObj;\n  }\n\n  function Stepper(panel, pageIndex, initialBreakPoints) {\n    this.panel = panel;\n    this.breakPoint = 0;\n    this.nextBreakPoint = null;\n    this.pageIndex = pageIndex;\n    this.breakPoints = initialBreakPoints;\n    this.currentIdx = -1;\n    this.operatorListIdx = 0;\n  }\n  Stepper.prototype = {\n    init: function init() {\n      var panel = this.panel;\n      var content = c('div', 'c=continue, s=step');\n      var table = c('table');\n      content.appendChild(table);\n      table.cellSpacing = 0;\n      var headerRow = c('tr');\n      table.appendChild(headerRow);\n      headerRow.appendChild(c('th', 'Break'));\n      headerRow.appendChild(c('th', 'Idx'));\n      headerRow.appendChild(c('th', 'fn'));\n      headerRow.appendChild(c('th', 'args'));\n      panel.appendChild(content);\n      this.table = table;\n      if (!opMap) {\n        opMap = Object.create(null);\n        for (var key in PDFJS.OPS) {\n          opMap[PDFJS.OPS[key]] = key;\n        }\n      }\n    },\n    updateOperatorList: function updateOperatorList(operatorList) {\n      var self = this;\n\n      function cboxOnClick() {\n        var x = +this.dataset.idx;\n        if (this.checked) {\n          self.breakPoints.push(x);\n        } else {\n          self.breakPoints.splice(self.breakPoints.indexOf(x), 1);\n        }\n        StepperManager.saveBreakPoints(self.pageIndex, self.breakPoints);\n      }\n\n      var MAX_OPERATORS_COUNT = 15000;\n      if (this.operatorListIdx > MAX_OPERATORS_COUNT) {\n        return;\n      }\n\n      var chunk = document.createDocumentFragment();\n      var operatorsToDisplay = Math.min(MAX_OPERATORS_COUNT,\n                                        operatorList.fnArray.length);\n      for (var i = this.operatorListIdx; i < operatorsToDisplay; i++) {\n        var line = c('tr');\n        line.className = 'line';\n        line.dataset.idx = i;\n        chunk.appendChild(line);\n        var checked = this.breakPoints.indexOf(i) !== -1;\n        var args = operatorList.argsArray[i] || [];\n\n        var breakCell = c('td');\n        var cbox = c('input');\n        cbox.type = 'checkbox';\n        cbox.className = 'points';\n        cbox.checked = checked;\n        cbox.dataset.idx = i;\n        cbox.onclick = cboxOnClick;\n\n        breakCell.appendChild(cbox);\n        line.appendChild(breakCell);\n        line.appendChild(c('td', i.toString()));\n        var fn = opMap[operatorList.fnArray[i]];\n        var decArgs = args;\n        if (fn === 'showText') {\n          var glyphs = args[0];\n          var newArgs = [];\n          var str = [];\n          for (var j = 0; j < glyphs.length; j++) {\n            var glyph = glyphs[j];\n            if (typeof glyph === 'object' && glyph !== null) {\n              str.push(glyph.fontChar);\n            } else {\n              if (str.length > 0) {\n                newArgs.push(str.join(''));\n                str = [];\n              }\n              newArgs.push(glyph); // null or number\n            }\n          }\n          if (str.length > 0) {\n            newArgs.push(str.join(''));\n          }\n          decArgs = [newArgs];\n        }\n        line.appendChild(c('td', fn));\n        line.appendChild(c('td', JSON.stringify(simplifyArgs(decArgs))));\n      }\n      if (operatorsToDisplay < operatorList.fnArray.length) {\n        line = c('tr');\n        var lastCell = c('td', '...');\n        lastCell.colspan = 4;\n        chunk.appendChild(lastCell);\n      }\n      this.operatorListIdx = operatorList.fnArray.length;\n      this.table.appendChild(chunk);\n    },\n    getNextBreakPoint: function getNextBreakPoint() {\n      this.breakPoints.sort(function(a, b) { return a - b; });\n      for (var i = 0; i < this.breakPoints.length; i++) {\n        if (this.breakPoints[i] > this.currentIdx) {\n          return this.breakPoints[i];\n        }\n      }\n      return null;\n    },\n    breakIt: function breakIt(idx, callback) {\n      StepperManager.selectStepper(this.pageIndex, true);\n      var self = this;\n      var dom = document;\n      self.currentIdx = idx;\n      var listener = function(e) {\n        switch (e.keyCode) {\n          case 83: // step\n            dom.removeEventListener('keydown', listener, false);\n            self.nextBreakPoint = self.currentIdx + 1;\n            self.goTo(-1);\n            callback();\n            break;\n          case 67: // continue\n            dom.removeEventListener('keydown', listener, false);\n            var breakPoint = self.getNextBreakPoint();\n            self.nextBreakPoint = breakPoint;\n            self.goTo(-1);\n            callback();\n            break;\n        }\n      };\n      dom.addEventListener('keydown', listener, false);\n      self.goTo(idx);\n    },\n    goTo: function goTo(idx) {\n      var allRows = this.panel.getElementsByClassName('line');\n      for (var x = 0, xx = allRows.length; x < xx; ++x) {\n        var row = allRows[x];\n        if ((row.dataset.idx | 0) === idx) {\n          row.style.backgroundColor = 'rgb(251,250,207)';\n          row.scrollIntoView();\n        } else {\n          row.style.backgroundColor = null;\n        }\n      }\n    }\n  };\n  return Stepper;\n})();\n\nvar Stats = (function Stats() {\n  var stats = [];\n  function clear(node) {\n    while (node.hasChildNodes()) {\n      node.removeChild(node.lastChild);\n    }\n  }\n  function getStatIndex(pageNumber) {\n    for (var i = 0, ii = stats.length; i < ii; ++i) {\n      if (stats[i].pageNumber === pageNumber) {\n        return i;\n      }\n    }\n    return false;\n  }\n  return {\n    // Properties/functions needed by PDFBug.\n    id: 'Stats',\n    name: 'Stats',\n    panel: null,\n    manager: null,\n    init: function init() {\n      this.panel.setAttribute('style', 'padding: 5px;');\n      PDFJS.enableStats = true;\n    },\n    enabled: false,\n    active: false,\n    // Stats specific functions.\n    add: function(pageNumber, stat) {\n      if (!stat) {\n        return;\n      }\n      var statsIndex = getStatIndex(pageNumber);\n      if (statsIndex !== false) {\n        var b = stats[statsIndex];\n        this.panel.removeChild(b.div);\n        stats.splice(statsIndex, 1);\n      }\n      var wrapper = document.createElement('div');\n      wrapper.className = 'stats';\n      var title = document.createElement('div');\n      title.className = 'title';\n      title.textContent = 'Page: ' + pageNumber;\n      var statsDiv = document.createElement('div');\n      statsDiv.textContent = stat.toString();\n      wrapper.appendChild(title);\n      wrapper.appendChild(statsDiv);\n      stats.push({ pageNumber: pageNumber, div: wrapper });\n      stats.sort(function(a, b) { return a.pageNumber - b.pageNumber; });\n      clear(this.panel);\n      for (var i = 0, ii = stats.length; i < ii; ++i) {\n        this.panel.appendChild(stats[i].div);\n      }\n    },\n    cleanup: function () {\n      stats = [];\n      clear(this.panel);\n    }\n  };\n})();\n\n// Manages all the debugging tools.\nvar PDFBug = (function PDFBugClosure() {\n  var panelWidth = 300;\n  var buttons = [];\n  var activePanel = null;\n\n  return {\n    tools: [\n      FontInspector,\n      StepperManager,\n      Stats\n    ],\n    enable: function(ids) {\n      var all = false, tools = this.tools;\n      if (ids.length === 1 && ids[0] === 'all') {\n        all = true;\n      }\n      for (var i = 0; i < tools.length; ++i) {\n        var tool = tools[i];\n        if (all || ids.indexOf(tool.id) !== -1) {\n          tool.enabled = true;\n        }\n      }\n      if (!all) {\n        // Sort the tools by the order they are enabled.\n        tools.sort(function(a, b) {\n          var indexA = ids.indexOf(a.id);\n          indexA = indexA < 0 ? tools.length : indexA;\n          var indexB = ids.indexOf(b.id);\n          indexB = indexB < 0 ? tools.length : indexB;\n          return indexA - indexB;\n        });\n      }\n    },\n    init: function init() {\n      /*\n       * Basic Layout:\n       * PDFBug\n       *  Controls\n       *  Panels\n       *    Panel\n       *    Panel\n       *    ...\n       */\n      var ui = document.createElement('div');\n      ui.id = 'PDFBug';\n\n      var controls = document.createElement('div');\n      controls.setAttribute('class', 'controls');\n      ui.appendChild(controls);\n\n      var panels = document.createElement('div');\n      panels.setAttribute('class', 'panels');\n      ui.appendChild(panels);\n\n      var container = document.getElementById('viewerContainer');\n      container.appendChild(ui);\n      container.style.right = panelWidth + 'px';\n\n      // Initialize all the debugging tools.\n      var tools = this.tools;\n      var self = this;\n      for (var i = 0; i < tools.length; ++i) {\n        var tool = tools[i];\n        var panel = document.createElement('div');\n        var panelButton = document.createElement('button');\n        panelButton.textContent = tool.name;\n        panelButton.addEventListener('click', (function(selected) {\n          return function(event) {\n            event.preventDefault();\n            self.selectPanel(selected);\n          };\n        })(i));\n        controls.appendChild(panelButton);\n        panels.appendChild(panel);\n        tool.panel = panel;\n        tool.manager = this;\n        if (tool.enabled) {\n          tool.init();\n        } else {\n          panel.textContent = tool.name + ' is disabled. To enable add ' +\n                              ' \"' + tool.id + '\" to the pdfBug parameter ' +\n                              'and refresh (seperate multiple by commas).';\n        }\n        buttons.push(panelButton);\n      }\n      this.selectPanel(0);\n    },\n    cleanup: function cleanup() {\n      for (var i = 0, ii = this.tools.length; i < ii; i++) {\n        if (this.tools[i].enabled) {\n          this.tools[i].cleanup();\n        }\n      }\n    },\n    selectPanel: function selectPanel(index) {\n      if (typeof index !== 'number') {\n        index = this.tools.indexOf(index);\n      }\n      if (index === activePanel) {\n        return;\n      }\n      activePanel = index;\n      var tools = this.tools;\n      for (var j = 0; j < tools.length; ++j) {\n        if (j === index) {\n          buttons[j].setAttribute('class', 'active');\n          tools[j].active = true;\n          tools[j].panel.removeAttribute('hidden');\n        } else {\n          buttons[j].setAttribute('class', '');\n          tools[j].active = false;\n          tools[j].panel.setAttribute('hidden', 'true');\n        }\n      }\n    }\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/debugger.js\n// module id = 92\n// module chunks = 5"],"sourceRoot":""}