{"version":3,"sources":["webpack://PDFAnnoCore/webpack/universalModuleDefinition","webpack://PDFAnnoCore/webpack/bootstrap","webpack://PDFAnnoCore/./src/shared/util.js","webpack://PDFAnnoCore/./src/shared/coords.js","webpack://PDFAnnoCore/./node_modules/anno-ui/src/utils/index.js","webpack://PDFAnnoCore/./node_modules/toml/index.js","webpack://PDFAnnoCore/./src/core/src/version.js","webpack://PDFAnnoCore/./node_modules/style-loader/addStyles.js","webpack://PDFAnnoCore/./node_modules/css-loader/lib/css-base.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/compile/util.js","webpack://PDFAnnoCore/./node_modules/process/browser.js","webpack://PDFAnnoCore/./node_modules/toml/lib/compiler.js","webpack://PDFAnnoCore/./node_modules/toml/lib/parser.js","webpack://PDFAnnoCore/./node_modules/events/events.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/compile/error_classes.js","webpack://PDFAnnoCore/./node_modules/fast-deep-equal/index.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/compile/resolve.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/_limitProperties.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/_limitLength.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/_limitItems.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/_limit.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/validate.js","webpack://PDFAnnoCore/./node_modules/fast-json-stable-stringify/index.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/compile/schema_obj.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/ajv.js","webpack://PDFAnnoCore/./node_modules/semver/semver.js","webpack://PDFAnnoCore/./src/core/src/UI/utils.js","webpack://PDFAnnoCore/./src/core/src/render/renderKnob.js","webpack://PDFAnnoCore/./src/core/src/utils/color.js","webpack://PDFAnnoCore/./src/core/src/render/renderSpan.js","webpack://PDFAnnoCore/./src/core/src/utils/setAttributes.js","webpack://PDFAnnoCore/./src/core/src/render/renderText.js","webpack://PDFAnnoCore/./src/core/src/utils/relation.js","webpack://PDFAnnoCore/./src/core/src/render/renderRelation.js","webpack://PDFAnnoCore/./src/core/src/render/appendChild.js","webpack://PDFAnnoCore/./src/core/src/render/renderRect.js","webpack://PDFAnnoCore/./src/core/src/utils/event.js","webpack://PDFAnnoCore/./src/core/src/annotation/abstract.js","webpack://PDFAnnoCore/./src/core/src/annotation/span.js","webpack://PDFAnnoCore/./src/core/src/utils/textInput.js","webpack://PDFAnnoCore/./src/core/src/UI/span.js","webpack://PDFAnnoCore/./src/core/src/annotation/relation.js","webpack://PDFAnnoCore/./src/core/src/UI/view.js","webpack://PDFAnnoCore/./src/core/src/UI/index.js","webpack://PDFAnnoCore/./src/core/src/UI/relation.js","webpack://PDFAnnoCore/./src/core/src/annotation/rect.js","webpack://PDFAnnoCore/./src/core/src/PDFAnnoCore.js","webpack://PDFAnnoCore/./src/core/src/utils/tomlString.js","webpack://PDFAnnoCore/./src/core/index.js","webpack://PDFAnnoCore/./src/core/src/annotation/container.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/custom.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/keyword.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/compile/async.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/data.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/uniqueItems.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/required.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/propertyNames.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/properties.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/pattern.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/oneOf.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/not.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/multipleOf.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/items.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/if.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/format.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/enum.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/dependencies.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/contains.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/const.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/comment.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/anyOf.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/allOf.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/ref.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/dotjs/index.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/compile/rules.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/compile/formats.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/cache.js","webpack://PDFAnnoCore/./node_modules/json-schema-traverse/index.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/compile/ucs2length.js","webpack://PDFAnnoCore/./node_modules/uri-js/dist/es5/uri.all.js","webpack://PDFAnnoCore/./node_modules/ajv/lib/compile/index.js","webpack://PDFAnnoCore/./src/core/index.css","webpack://PDFAnnoCore/./src/core/index.css?9be6"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","anyOf","target","candidates","filter","length","dispatchWindowEvent","eventName","data","event","document","createEvent","initCustomEvent","dispatchEvent","parseUrlQuery","location","search","replace","split","reduce","map","keyValue","__webpack_exports__","convertToExportY","y","meta","getPageSize","paddingTop","pageHeight","height","paddingBetweenPages","pageNumber","Math","floor","convertFromExportY","yInPage","pagePadding","nextZIndex","viewBox","PDFView","iframeWindow","pdfViewer","getPageView","viewport","width","w","uuid","len","ID_LENGTH","BASE","BASE_LEN","id","random","parser","compiler","parse","input","nodes","toString","compile","PDFEXTRACT_VERSION","packageJson","ANNO_VERSION","version","pdfextract","stylesInDom","memoize","fn","memo","apply","this","arguments","isOldIE","test","self","navigator","userAgent","toLowerCase","getHeadElement","head","getElementsByTagName","singletonElement","singletonCounter","styleElementsInsertedAtTop","addStylesToDom","styles","options","item","domStyle","refs","j","parts","push","addStyle","listToStyles","list","newStyles","part","css","media","sourceMap","insertStyleElement","styleElement","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","type","obj","update","remove","singleton","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","linkElement","rel","createLinkElement","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","href","setAttribute","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","Boolean","join","cssNode","childNodes","result","mediaQuery","alreadyImportedModules","checkDataType","dataType","negate","EQUAL","AND","OK","NOT","copy","to","checkDataTypes","dataTypes","code","types","toHash","array","null","number","integer","coerceToTypes","optionCoerceTypes","Array","isArray","COERCE_TO_TYPES","getProperty","escapeQuotes","equal","ucs2length","varOccurences","str","dataVar","matches","match","RegExp","varReplace","expr","cleanUpCode","out","EMPTY_ELSE","EMPTY_IF_NO_ELSE","EMPTY_IF_WITH_ELSE","finalCleanUpCode","async","ERRORS_REGEXP","REMOVE_ERRORS_ASYNC","RETURN_ASYNC","RETURN_DATA_ASYNC","REMOVE_ERRORS","RETURN_VALID","RETURN_TRUE","ROOTDATA_REGEXP","REMOVE_ROOTDATA","schemaHasRules","schema","rules","schemaHasRulesExcept","exceptKeyword","toQuotedString","getPathExpr","currentPath","jsonPointers","isNumber","joinPaths","getPath","prop","path","escapeJsonPointer","getData","$data","lvl","paths","up","jsonPointer","JSON_POINTER","RELATIVE_JSON_POINTER","segments","segment","unescapeJsonPointer","unescapeFragment","decodeURIComponent","escapeFragment","arr","hash","IDENTIFIER","SINGLE_QUOTE","a","b","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","args","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","assignedPaths","valueAssignments","context","node","assign","setPath","addTableArray","genError","err","line","col","ex","column","fullPath","reduceValueNode","pathAssigned","firstType","reduceArrayWithTypeChecking","reduceInlineTableNode","values","val","quotedPath","quoteDottedString","deepRef","start","keys","traversed","traversedPath","ctx","keysLen","String","SyntaxError","message","expected","found","offset","child","parent","ctor","constructor","peg$subclass","peg$result","peg$FAILED","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c1","peg$c2","peg$c3","peg$c4","description","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","addNode","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","chars","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","char","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","left","right","parseFloat","peg$c43","text","peg$c44","peg$c45","peg$c46","digits","peg$c47","peg$c48","peg$c49","peg$c50","parseInt","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","date","peg$c72","peg$c73","peg$c74","time","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","Date","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","peg$c103","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c109","peg$c110","peg$c111","peg$c112","peg$c113","peg$c114","peg$c115","peg$c116","peg$c117","peg$c118","peg$c119","peg$c120","num","isFinite","highSurrogate","lowSurrogate","codeUnits","codePoint","Number","fromCharCode","fromCodePoint","convertCodePoint","peg$c121","peg$c122","peg$currPos","peg$reportedPos","peg$cachedPos","peg$cachedPosDetails","seenCR","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$cache","startRule","peg$computePosDetails","pos","details","startPos","endPos","ch","charAt","advance","peg$fail","peg$buildException","posDetails","sort","cleanupExpected","expectedDescs","slice","hex","charCodeAt","toUpperCase","stringEscape","buildMessage","s0","s1","s2","cached","nextPos","peg$parseline","s3","s4","s5","s6","peg$parseS","peg$parsecomment","peg$parsetable_key","peg$parsepath","s7","peg$parsetablearray","peg$parsekey","peg$parsevalue","peg$parsequoted_key","peg$parseassignment","peg$parseexpression","peg$parseNL","peg$parseEOF","peg$parsedot_ended_table_key_part","peg$parsetable_key_part","peg$parseASCII_BASIC","peg$parsedouble_quoted_single_line_string","peg$parsesingle_quoted_single_line_string","substr","peg$parsemultiline_string_char","peg$parsedouble_quoted_multiline_string","peg$parsemultiline_literal_char","peg$parsesingle_quoted_multiline_string","peg$parsestring","peg$parsedate","s8","s9","s10","peg$parseDIGIT_OR_UNDER","peg$parsesecfragment","peg$parsetime","s11","s12","s13","s14","s15","s16","peg$parsetime_with_offset","peg$parsedatetime","peg$parsefloat_text","peg$parseinteger_text","peg$parsefloat","peg$parseinteger","peg$parseboolean","peg$parsearray_sep","peg$parsearray_value","peg$parsearray_value_list","peg$parsearray","peg$parseinline_table_assignment","peg$parseinline_table","peg$parsestring_char","peg$parseliteral_char","peg$parseESCAPED","peg$parseNLS","peg$parsemultiline_string_delim","peg$parseDIGITS","peg$parseHEX","peg$parseESCAPED_UNICODE","EventEmitter","_events","_maxListeners","undefined","isFunction","arg","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNaN","TypeError","er","handler","error","listener","newListener","warned","console","trace","fired","g","position","listenerCount","evlistener","emitter","resolve","MissingRefError","baseId","ref","missingRef","url","missingSchema","normalizeId","errorSubclass","Subclass","Validation","errors","ajv","validation","MissingRef","keyList","hasProp","arrA","arrB","dateA","dateB","getTime","regexpA","regexpB","URI","util","SchemaObject","traverse","refVal","_refs","_schemas","inlineRef","_opts","inlineRefs","validate","_compile","v","res","resolveSchema","refPath","_getFullPath","getFullPath","_getId","parsedRef","resolveUrl","getJsonPointer","ids","schemaId","baseIds","","fullPaths","localRefs","allKeys","sch","jsonPtr","rootSchema","parentJsonPtr","parentKeyword","parentSchema","keyIndex","PREVENT_SCOPE_CHANGE","fragment","$ref","SIMPLE_INLINED","limit","checkNoRef","countKeys","count","Infinity","normalize","serialize","TRAILING_SLASH_HASH","it","$keyword","$ruleType","$schemaValue","$lvl","level","$dataLvl","dataLevel","$schema","$schemaPath","schemaPath","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$isData","dataPathArr","$errorKeyword","$$outStack","createErrors","messages","verbose","__err","pop","compositeRule","$op","unicode","$isMax","$exclusiveKeyword","$schemaExcl","$isDataExcl","$notOp","$schemaValueExcl","$exclusive","$exclType","$exclIsNumber","$opStr","$opExpr","$async","$refKeywords","RULES","all","$id","isTop","sourceCode","processCode","$valid","$top","rootId","$closingBraces1","$closingBraces2","$typeSchema","$typeIsArray","extendRefs","logger","warn","$comment","coerceTypes","$coerceToTypes","$rulesGroup","$shouldUseGroup","$method","$dataType","$coerced","$bracesCoercion","arr1","$type","$i","l1","$parentData","$parentDataProperty","arr2","i2","l2","useDefaults","properties","arr3","$propertyKey","i3","l3","$sch","default","$passData","useDefault","items","arr4","l4","arr5","$rule","i5","l5","$shouldUseRule","$code","keyword","implements","impl","$ruleImplementsSomeKeyword","cmp","cycles","f","aobj","bobj","seen","toJSON","seenIndex","compileSchema","Cache","stableStringify","formats","$dataMetaSchema","Ajv","schemaKeyRef","getSchema","schemaObj","_addSchema","valid","_meta","addSchema","_skipValidation","checkUnique","addMetaSchema","skipValidation","validateSchema","throwOrLogError","defaultMeta","META_SCHEMA_ID","currentUriFormat","_formats","uri","_schemaUriFormatFunc","_schemaUriFormat","errorsText","keyRef","_getSchemaObj","_fragments","_getSchemaFragment","removeSchema","_removeAllSchemas","_cache","clear","del","cacheKey","addFormat","format","separator","dataPath","shouldAddSchema","addUsedSchema","recursiveMeta","willValidate","put","compiling","callValidate","currentOpts","_metaOpts","_validate","compileAsync","customKeyword","addKeyword","add","getKeyword","removeKeyword","errorClasses","ValidationError","META_IGNORE_OPTIONS","META_SUPPORT_DATA","log","setLogger","schemaUriFormat","cache","_loadingSchemas","_compilations","_get$IdOrId","_get$Id","chooseGetId","loopRequired","errorDataPath","_errorDataPathProperty","metaOpts","getMetaSchemaOptions","addInitialFormats","$dataSchema","metaSchema","addDraft6MetaSchema","optsSchemas","schemas","addInitialSchemas","regex","debug","SemVer","NODE_DEBUG","unshift","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","LONETILDE","TILDETRIM","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","loose","trim","raw","major","minor","patch","prerelease","build","clean","compare","other","compareMain","comparePre","compareIdentifiers","inc","release","identifier","diff","version1","version2","eq","v1","v2","numeric","anum","bnum","gt","lt","neq","gte","lte","op","ret","Comparator","comp","semver","ANY","operator","rcompareIdentifiers","compareLoose","rcompare","rsort","Range","range","set","parseRange","isX","hyphenReplace","$0","from","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","tb","testSet","allowed","satisfies","outside","hilo","gtfn","ltefn","ltfn","ecomp","high","low","forEach","comparator","intersects","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","hr","compRe","_","M","pr","replaceCaret","replaceCarets","replaceTilde","replaceTildes","gtlt","xM","xm","xp","anyX","replaceXRange","replaceXRanges","replaceStars","parseComparator","some","thisComparators","every","thisComparator","rangeComparators","rangeComparator","toComparators","maxSatisfying","max","maxSV","rangeObj","minSatisfying","min","minSV","validRange","ltr","gtr","parsed","r1","r2","coerce","scaleDown","rect","scale","DEFAULT_RADIUS","renderKnob","x","readOnly","radius","$circles","$","good","each","$this","x1","y1","distance1","pow","distance2","adjustPoint","cssClass","top","hex2rgba","alpha","renderSpan","color","$base","zIndex","page","rectangles","pageTopY","bottom","append","className","border","backgroundColor","borderColor","createRect","knob","UPPER_REGEX","BLACKLIST","keyCase","setAttributes","attributes","DEFAULT_FONT_SIZE","findBezierControlPoint","x2","y2","center","gradient","theta","atan","deltaX","cos","deltaY","sin","abs","renderRelation","sign","$svg","margin","visibility","z-index","attr","createSVGElement","group","createElementNS","fill","stroke","style","markerId","querySelector","orient","polygon","points","control","outline","class","relation","strokeWidth","direction","addClass","svg","annotation","renderRect","fontSize","innerHTML","content","box","getBoundingClientRect","getRect","classList","parentId","renderText","elm","transform","abstract_AbstractAnnotation","events_default","[object Object]","super","autoBind","deleted","selected","selectedTime","createdAt","getOwnPropertyNames","method","$element","base","hoverEventDisable","setHoverEvent","disabled","disable","annotationContainer","promise","Promise","toggleSelect","highlight","dehighlight","removeClass","now","deselect","select","isSelected","destroy","then","hasClass","$circle","find","render","anotherAnnotation","span_SpanAnnotation","selectedText","textRange","createDummyElement","globalEvent","deleteSelectedAnnotation","enableViewMode","utils","rects","findTexts","mergeRects","tomlObject","label","textrange","newInstance","hover","handleHoverInEvent","handleHoverOutEvent","readyOnly","newText","save","handleClickEvent","disableViewMode","enable","autoFocus","blurListener","h","tmp","convertToObject","newRects","withinMargin","saveSpan","focusToLabel","spanAnnotation","addEventListener","makeSelections","canvasElement","currentTarget","pageElement","getAttribute","currentPage","clientX","clientY","findText","startPosition","endPosition","initPosition","setPositions","span_spanAnnotation","targets","mergedRect","$viewer","otherAnnotationTreating","mouseDown","relation_RelationAnnotation","rel1Annotation","rel2Annotation","handleRelMoveEnd","isAnnotation","rel1","findById","rel2","_rel1Annotation","handleRelHoverIn","handleRelHoverOut","handleRelMove","handleRelDelete","_rel2Annotation","setStartEndPosition","addY","cp","ok","aX1","aX2","aY1","aY2","getRelationTextPosition","highlightRelAnnotations","dehighlightRelAnnotations","rectAnnotation","exportId","tail","getBoundingCirclePosition","anno","disablePagebackAction","tagName","keyCode","preventDefault","handlePageClick","getSelectedAnnotations","UI","createSpan","getRectangles","createRelation","anno1","anno2","removeEventListener","rect_globalEvent","rect_RectAnnotation","coords","originalX","originalY","handleMouseMoveOnDocument","handleMouseUpOnDocument","_dragging","startX","startY","endX","endY","currentType","handleMouseDownOnRect","enableDragAction","disableDragAction","PDFAnnoCore","RectAnnotation","SpanAnnotation","RelationAnnotation","adjustPageGaps","borderWidth","marginBottom","marginTop","border-top-width","border-bottom-width","renderAnno","leftMargin","$annoLayer","$annoLayer2","annotations","getAllAnnotations","renderAnnotations","Set","ajv_default","delete","annoType","colorMap","changeColor","exportType","reject","dataExport","pdfanno","annos","a1","a2","export","toTomlString","lines","spans","isPrimary","getColor","tomlString","toml_default","fromTomlString","pdfannoVersion","semver_default","importAnnotations041","importAnnotations040","tomlIndex","span","newInstanceFromTomlObject","objs","span1","_findSpan","span2","ev","detail","$errs","$compile","$inline","$macro","$ruleValidate","$validateCode","$definition","$rDef","definition","$closingBraces","$validateSchema","useCustomRule","inline","macro","$ruleErrs","$ruleErr","$asyncKeyword","statements","$it","$nextValid","$wasComposite","passContext","errorPath","def_callRuleValidate","modifying","def_customError","customRuleCode","keywords","_addRule","ruleGroup","rg","rule","custom","callback","loadSchema","loadMetaSchemaOf","_compileAsync","loadMissingSchema","added","schemaPromise","removePromise","KEYWORDS","keywordsJsonPointers","uniqueItems","$itemType","$vSchema","$required","$property","i1","$propertySch","$currentErrorPath","$loopRequired","$ownProperties","ownProperties","$missingProperty","$propertyPath","$useData","$prop","$key","$idx","$invalidName","$nextData","$dataProperties","$currentBaseId","$dataNxt","$schemaKeys","$pProperties","patternProperties","$pPropertyKeys","$aProperties","additionalProperties","$someProperties","$noAdditional","$additionalIsSchema","$removeAdditional","removeAdditional","$checkAdditional","required","$requiredHash","$pProperty","usePattern","$additionalProperty","$currErrSchemaPath","$useDefaults","$hasDefault","i4","$regexp","$prevValid","$passingSchemas","$allErrorsOption","multipleOfPrecision","$additionalItems","additionalItems","$thenSch","$elseSch","$thenPresent","$elsePresent","$ifClause","$unknownFormats","unknownFormats","$allowUnknown","$format","$isObject","$formatType","$formatRef","$schemaDeps","$propertyDeps","$deps","$nonEmptySchema","$allSchemasEmpty","$refCode","isRoot","$refVal","resolveRef","$message","missingRefs","__callValidate","allOf","const","contains","dependencies","enum","if","maximum","minimum","maxItems","minItems","maxLength","minLength","maxProperties","minProperties","multipleOf","not","oneOf","pattern","propertyNames","ruleModules","ALL","implKeywords","k","DATE","DAYS","TIME","HOSTNAME","URITEMPLATE","UUID","JSON_POINTER_URI_FRAGMENT","year","month","day","isLeapYear","full","hour","minute","second","timeZone","fast","date-time","uri-reference","uri-template","email","hostname","ipv4","ipv6","json-pointer","json-pointer-uri-fragment","relative-json-pointer","dateTime","DATE_TIME_SEPARATOR","NOT_URI_FRAGMENT","Z_ANCHOR","cb","_traverse","pre","post","arrayKeywords","propsKeywords","escapeJsonPtr","skipKeywords","definitions","exclusiveMaximum","exclusiveMinimum","merge","_len","sets","_key","xl","subexp","typeOf","shift","buildExps","isIRI","HEXDIG$$","PCT_ENCODED$","SUB_DELIMS$$","RESERVED$$","UCSCHAR$$","IPRIVATE$$","UNRESERVED$$","SCHEME$","USERINFO$","DEC_OCTET_RELAXED$","IPV4ADDRESS$","H16$","LS32$","IPV6ADDRESS1$","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","IPV6ADDRESS$","ZONEID$","IPV6ADDRZ_RELAXED$","IPVFUTURE$","IP_LITERAL$","REG_NAME$","HOST$","PORT$","DIGIT$$","AUTHORITY$","PCHAR$","SEGMENT$","SEGMENT_NZ$","SEGMENT_NZ_NC$","PATH_ABEMPTY$","PATH_ABSOLUTE$","PATH_NOSCHEME$","PATH_ROOTLESS$","PATH_EMPTY$","QUERY$","FRAGMENT$","HIER_PART$","URI$","RELATIVE_PART$","RELATIVE$","NOT_SCHEME","NOT_USERINFO","NOT_HOST","NOT_PATH","NOT_PATH_NOSCHEME","NOT_QUERY","NOT_FRAGMENT","ESCAPE","UNRESERVED","OTHER_CHARS","PCT_ENCODED","IPV4ADDRESS","IPV6ADDRESS","URI_PROTOCOL","IRI_PROTOCOL","slicedToArray","iterator","_arr","_n","_d","_e","_s","_i","next","done","sliceIterator","maxInt","regexPunycode","regexNonASCII","regexSeparators","overflow","not-basic","invalid-input","stringFromCharCode","error$1","RangeError","mapDomain","string","labels","encoded","ucs2decode","output","counter","extra","basicToDigit","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","decode","inputLength","bias","basic","lastIndexOf","oldi","baseMinusT","encode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_currentValue2","return","basicLength","handledCPCount","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","currentValue","handledCPCountPlusOne","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_currentValue","q","qMinusT","punycode","ucs2","toConsumableArray","toASCII","toUnicode","SCHEMES","pctEncChar","chr","pctDecChars","newStr","il","c2","_c","c3","_normalizeComponentEncoding","components","protocol","decodeUnreserved","decStr","scheme","userinfo","host","query","_stripLeadingZeros","_normalizeIPv4","_matches","address","_normalizeIPv6","_matches2","zone","_address$toLowerCase$","reverse","_address$toLowerCase$2","last","first","firstFields","lastFields","isLastFieldIPv4Address","fieldCount","lastFieldsStart","fields","allZeroFields","acc","field","lastLongest","longestZeroFields","newHost","newFirst","newLast","URI_PARSE","NO_MATCH_IS_UNDEFINED","uriString","iri","reference","port","schemeHandler","unicodeSupport","domainHost","RDS1","RDS2","RDS3","RDS5","removeDotSegments","im","uriTokens","authority","$1","$2","_recomposeAuthority","absolutePath","resolveComponents","relative","skipNormalization","tolerant","unescapeComponent","handler$1","O","VCHAR$$","NOT_LOCAL_PART","NOT_HFNAME","NOT_HFVALUE","handler$2","mailtoComponents","unknownHeaders","headers","hfields","hfield","toAddrs","_x","_xl","subject","body","_x2","_xl2","addr","setInterval","toArray","toAddr","atIdx","localPart","domain","URN_PARSE","handler$3","urnComponents","nid","nss","urnScheme","uriComponents","handler$4","uuidComponents","baseURI","relativeURI","schemelessOptions","source","uriA","uriB","escapeComponent","validateGenerator","compIndex","patternCode","patterns","defaultCode","refValCode","vars","statement","patternsHash","defaults","defaultsHash","customRules","compilation","localCompile","cv","_schema","_root","makeValidate","Function","_refVal","refCode","refIndex","resolvedRef","rootRefId","addLocalRef","localSchema","refId","replaceLocalRef","removeLocalRef","regexStr","valueStr","locals"],"mappings":"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","file":"./pdfanno.core.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PDFAnnoCore\"] = factory();\n\telse\n\t\troot[\"PDFAnnoCore\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 60);\n","/**\r\n * Utility.\r\n */\r\n\r\nexport function anyOf (target, candidates) {\r\n  return candidates.filter(c => c === target).length > 0\r\n}\r\n\r\n/**\r\n * Dispatch a custom event to `window` object.\r\n */\r\nexport function dispatchWindowEvent (eventName, data) {\r\n  var event = document.createEvent('CustomEvent')\r\n  event.initCustomEvent(eventName, true, true, data)\r\n  window.dispatchEvent(event)\r\n}\r\n\r\n/**\r\n * Parse URL queries, and return it as a Map.\r\n * @returns {{}}\r\n */\r\n// TODO make as common?\r\nexport function parseUrlQuery () {\r\n  return window.location.search\r\n    .replace('?', '')\r\n    .split('&')\r\n    .reduce((map, keyValue) => {\r\n      const [ key, value ] = keyValue.split('=')\r\n      map[key] = value\r\n      return map\r\n    }, {})\r\n}\r\n","/**\r\n * Convert the `y` position from the local coords to exported json.\r\n */\r\nexport function convertToExportY (y) {\r\n\r\n  let meta = getPageSize()\r\n\r\n  y -= paddingTop\r\n\r\n  let pageHeight = meta.height + paddingBetweenPages\r\n\r\n  let pageNumber = Math.floor(y / pageHeight) + 1\r\n  let yInPage = y - (pageNumber - 1) * pageHeight\r\n\r\n  return { pageNumber, y : yInPage }\r\n}\r\n\r\n/**\r\n * Convert the `y` position from exported json to local coords.\r\n */\r\nexport function convertFromExportY (pageNumber, yInPage) {\r\n\r\n  let meta = getPageSize()\r\n\r\n  let y = yInPage + paddingTop\r\n\r\n  let pagePadding = paddingBetweenPages\r\n\r\n  y += (pageNumber - 1) * (meta.height + pagePadding)\r\n\r\n  return y\r\n}\r\n\r\n/**\r\n * The padding of page top.\r\n */\r\nconst paddingTop = 9\r\n\r\n/**\r\n * The padding between pages.\r\n */\r\nexport const paddingBetweenPages = 9\r\n\r\n/**\r\n * Get a page size of a single PDF page.\r\n */\r\nexport function getPageSize () {\r\n\r\n  let pdfView = window.PDFView || window.iframeWindow.PDFView\r\n\r\n  let viewBox = pdfView.pdfViewer.getPageView(0).viewport.viewBox\r\n  let size = { width : viewBox[2], height : viewBox[3] }\r\n  return size\r\n}\r\n\r\n/**\r\n * Get the next z-index.\r\n */\r\nexport function nextZIndex () {\r\n\r\n  let w = (window.iframeWindow ? window.iframeWindow : window)\r\n\r\n  if (!w.nextZIndex) {\r\n    w.nextZIndex = 10\r\n  }\r\n\r\n  return w.nextZIndex++\r\n}\r\n","import toml from 'toml'\r\n\r\n/**\r\n * Make the UI resizable.\r\n */\r\nexport function setupResizableColumns () {\r\n    // Make resizable.\r\n    $('#tools').resizable({\r\n        handles           : 'e',\r\n        alsoResizeReverse : '#viewerWrapper',\r\n        start             : () => {\r\n            $('#viewer iframe').css({\r\n                'pointer-events' : 'none'\r\n            })\r\n        },\r\n        stop : () => {\r\n            $('#viewer iframe').css({\r\n                'pointer-events' : 'auto'\r\n            })\r\n        }\r\n    })\r\n\r\n    // Customize.\r\n    $.ui.plugin.add('resizable', 'alsoResizeReverse', {\r\n\r\n        start : function () {\r\n            let that = $(this).resizable('instance')\r\n            let o = that.options\r\n\r\n            $(o.alsoResizeReverse).each(function () {\r\n                var el = $(this)\r\n                el.data('ui-resizable-alsoresizeReverse', {\r\n                    width  : parseInt(el.width(), 10),\r\n                    height : parseInt(el.height(), 10),\r\n                    left   : parseInt(el.css('left'), 10),\r\n                    top    : parseInt(el.css('top'), 10)\r\n                })\r\n            })\r\n        },\r\n\r\n        resize : function (event, ui) {\r\n            let that = $(this).resizable('instance')\r\n            let o = that.options\r\n            let os = that.originalSize\r\n            let op = that.originalPosition\r\n            let delta = {\r\n                height : (that.size.height - os.height) || 0,\r\n                width  : (that.size.width - os.width) || 0,\r\n                top    : (that.position.top - op.top) || 0,\r\n                left   : (that.position.left - op.left) || 0\r\n            }\r\n\r\n            $(o.alsoResizeReverse).each(function () {\r\n                let el = $(this)\r\n                let start = $(this).data('ui-resizable-alsoresize-reverse')\r\n                let style = {}\r\n                let css = el.parents(ui.originalElement[0]).length\r\n                        ? [ 'width', 'height' ]\r\n                        : [ 'width', 'height', 'top', 'left' ]\r\n\r\n                $.each(css, function (i, prop) {\r\n                    let sum = (start[prop] || 0) - (delta[prop] || 0)\r\n                    if (sum && sum >= 0) {\r\n                        style[prop] = sum || null\r\n                    }\r\n                })\r\n\r\n                el.css(style)\r\n            })\r\n        },\r\n\r\n        stop : function () {\r\n            $(this).removeData('resizable-alsoresize-reverse')\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * Convert label object to TOML String.\r\n */\r\nexport function tomlString (obj, type = null) {\r\n    let lines = []\r\n\r\n    Object.keys(obj).forEach(prop => {\r\n        let val = obj[prop]\r\n        if (prop === 'span' || prop === 'relation') {\r\n            lines.push(tomlString(val, prop))\r\n        } else if (prop === 'labels') {\r\n            if (isArray(val)) {\r\n                val.forEach(v => {\r\n                    if (type !== null) {\r\n                        lines.push(`[[${type}]]`)\r\n                    }\r\n                    lines.push(`label = \"${escapeDoubleQuote(v[0])}\"`)\r\n                    lines.push(`color = \"${escapeDoubleQuote(v[1])}\"`)\r\n                    lines.push('')\r\n                })\r\n            }\r\n        }\r\n    })\r\n\r\n    return lines.join('\\n')\r\n}\r\n\r\n/**\r\n * Convert TOML String to label object.\r\n *\r\n * @export\r\n * @param {String} tomlData\r\n */\r\nexport function toml2object (tomlData) {\r\n    const data = toml.parse(tomlData)\r\n    const object = {}\r\n    ;['span', 'relation'].forEach(type => {\r\n        object[type] = {}\r\n        object[type].labels = []\r\n        if (isArray(data[type])) {\r\n            data[type].forEach(item => {\r\n                object[type].labels.push([unescapeDoubleQuote(item.label), unescapeDoubleQuote(item.color)])\r\n            })\r\n        }\r\n    })\r\n\r\n    return object\r\n}\r\n\r\nfunction escapeDoubleQuote (str) {\r\n    return str.replace(/\"/g, '\\\\\"')\r\n}\r\n\r\nfunction unescapeDoubleQuote (str) {\r\n    return str.replace(/\\\\\"/g, '\"')\r\n}\r\n\r\n/**\r\n * Check the value is array.\r\n */\r\nfunction isArray (val) {\r\n    return val && 'length' in val\r\n}\r\n\r\n/**\r\n * Generate a universally unique identifier\r\n *\r\n * @return {String}\r\n */\r\nexport function uuid (len = 8) {\r\n\r\n    // Length of ID characters.\r\n    const ID_LENGTH = len\r\n\r\n    // Candidates.\r\n    const BASE = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\r\n\r\n    // The number of candidates.\r\n    const BASE_LEN = BASE.length\r\n\r\n    let id = ''\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        id += BASE[ Math.floor(Math.random() * BASE_LEN) ]\r\n    }\r\n    return id\r\n}\r\n\r\n/**\r\n * Download a content with the fileName.\r\n */\r\nexport function download (fileName, content) {\r\n    let blob = new Blob([content])\r\n    let blobURL = window.URL.createObjectURL(blob)\r\n    let a = document.createElement('a')\r\n    document.body.appendChild(a) // for Firefox working correctly.\r\n    a.download = fileName\r\n    a.href = blobURL\r\n    a.click()\r\n    a.parentNode.removeChild(a)\r\n}\r\n\r\n/**\r\n * Load a file as a text.\r\n */\r\nexport function loadFileAsText (file) {\r\n    return new Promise((resolve, reject) => {\r\n        let fileReader = new FileReader()\r\n        fileReader.onload = event => {\r\n            const text = event.target.result\r\n            resolve(text)\r\n        }\r\n        fileReader.onerror = err => {\r\n            reject(err)\r\n        }\r\n        fileReader.readAsText(file)\r\n    })\r\n}\r\n","var parser = require('./lib/parser');\r\nvar compiler = require('./lib/compiler');\r\n\r\nmodule.exports = {\r\n  parse: function(input) {\r\n    var nodes = parser.parse(input.toString());\r\n    return compiler.compile(nodes);\r\n  }\r\n};\r\n","// let packageJson = require('json-loader!../../../package.json')\r\nconst packageJson = require('../../../package.json')\r\n/**\r\n * Paper Anno Version.\r\n * This is overwritten at build.\r\n */\r\nexport let ANNO_VERSION = packageJson.version\r\nexport let PDFEXTRACT_VERSION = packageJson.pdfextract.version\r\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(self.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement(\"link\");\n\tlinkElement.rel = \"stylesheet\";\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute(\"media\", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n","'use strict';\n\n\nmodule.exports = {\n  copy: copy,\n  checkDataType: checkDataType,\n  checkDataTypes: checkDataTypes,\n  coerceToTypes: coerceToTypes,\n  toHash: toHash,\n  getProperty: getProperty,\n  escapeQuotes: escapeQuotes,\n  equal: require('fast-deep-equal'),\n  ucs2length: require('./ucs2length'),\n  varOccurences: varOccurences,\n  varReplace: varReplace,\n  cleanUpCode: cleanUpCode,\n  finalCleanUpCode: finalCleanUpCode,\n  schemaHasRules: schemaHasRules,\n  schemaHasRulesExcept: schemaHasRulesExcept,\n  toQuotedString: toQuotedString,\n  getPathExpr: getPathExpr,\n  getPath: getPath,\n  getData: getData,\n  unescapeFragment: unescapeFragment,\n  unescapeJsonPointer: unescapeJsonPointer,\n  escapeFragment: escapeFragment,\n  escapeJsonPointer: escapeJsonPointer\n};\n\n\nfunction copy(o, to) {\n  to = to || {};\n  for (var key in o) to[key] = o[key];\n  return to;\n}\n\n\nfunction checkDataType(dataType, data, negate) {\n  var EQUAL = negate ? ' !== ' : ' === '\n    , AND = negate ? ' || ' : ' && '\n    , OK = negate ? '!' : ''\n    , NOT = negate ? '' : '!';\n  switch (dataType) {\n    case 'null': return data + EQUAL + 'null';\n    case 'array': return OK + 'Array.isArray(' + data + ')';\n    case 'object': return '(' + OK + data + AND +\n                          'typeof ' + data + EQUAL + '\"object\"' + AND +\n                          NOT + 'Array.isArray(' + data + '))';\n    case 'integer': return '(typeof ' + data + EQUAL + '\"number\"' + AND +\n                           NOT + '(' + data + ' % 1)' +\n                           AND + data + EQUAL + data + ')';\n    default: return 'typeof ' + data + EQUAL + '\"' + dataType + '\"';\n  }\n}\n\n\nfunction checkDataTypes(dataTypes, data) {\n  switch (dataTypes.length) {\n    case 1: return checkDataType(dataTypes[0], data, true);\n    default:\n      var code = '';\n      var types = toHash(dataTypes);\n      if (types.array && types.object) {\n        code = types.null ? '(': '(!' + data + ' || ';\n        code += 'typeof ' + data + ' !== \"object\")';\n        delete types.null;\n        delete types.array;\n        delete types.object;\n      }\n      if (types.number) delete types.integer;\n      for (var t in types)\n        code += (code ? ' && ' : '' ) + checkDataType(t, data, true);\n\n      return code;\n  }\n}\n\n\nvar COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);\nfunction coerceToTypes(optionCoerceTypes, dataTypes) {\n  if (Array.isArray(dataTypes)) {\n    var types = [];\n    for (var i=0; i<dataTypes.length; i++) {\n      var t = dataTypes[i];\n      if (COERCE_TO_TYPES[t]) types[types.length] = t;\n      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;\n    }\n    if (types.length) return types;\n  } else if (COERCE_TO_TYPES[dataTypes]) {\n    return [dataTypes];\n  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {\n    return ['array'];\n  }\n}\n\n\nfunction toHash(arr) {\n  var hash = {};\n  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;\n  return hash;\n}\n\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar SINGLE_QUOTE = /'|\\\\/g;\nfunction getProperty(key) {\n  return typeof key == 'number'\n          ? '[' + key + ']'\n          : IDENTIFIER.test(key)\n            ? '.' + key\n            : \"['\" + escapeQuotes(key) + \"']\";\n}\n\n\nfunction escapeQuotes(str) {\n  return str.replace(SINGLE_QUOTE, '\\\\$&')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\t/g, '\\\\t');\n}\n\n\nfunction varOccurences(str, dataVar) {\n  dataVar += '[^0-9]';\n  var matches = str.match(new RegExp(dataVar, 'g'));\n  return matches ? matches.length : 0;\n}\n\n\nfunction varReplace(str, dataVar, expr) {\n  dataVar += '([^0-9])';\n  expr = expr.replace(/\\$/g, '$$$$');\n  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');\n}\n\n\nvar EMPTY_ELSE = /else\\s*{\\s*}/g\n  , EMPTY_IF_NO_ELSE = /if\\s*\\([^)]+\\)\\s*\\{\\s*\\}(?!\\s*else)/g\n  , EMPTY_IF_WITH_ELSE = /if\\s*\\(([^)]+)\\)\\s*\\{\\s*\\}\\s*else(?!\\s*if)/g;\nfunction cleanUpCode(out) {\n  return out.replace(EMPTY_ELSE, '')\n            .replace(EMPTY_IF_NO_ELSE, '')\n            .replace(EMPTY_IF_WITH_ELSE, 'if (!($1))');\n}\n\n\nvar ERRORS_REGEXP = /[^v.]errors/g\n  , REMOVE_ERRORS = /var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g\n  , REMOVE_ERRORS_ASYNC = /var errors = 0;|var vErrors = null;/g\n  , RETURN_VALID = 'return errors === 0;'\n  , RETURN_TRUE = 'validate.errors = null; return true;'\n  , RETURN_ASYNC = /if \\(errors === 0\\) return data;\\s*else throw new ValidationError\\(vErrors\\);/\n  , RETURN_DATA_ASYNC = 'return data;'\n  , ROOTDATA_REGEXP = /[^A-Za-z_$]rootData[^A-Za-z0-9_$]/g\n  , REMOVE_ROOTDATA = /if \\(rootData === undefined\\) rootData = data;/;\n\nfunction finalCleanUpCode(out, async) {\n  var matches = out.match(ERRORS_REGEXP);\n  if (matches && matches.length == 2) {\n    out = async\n          ? out.replace(REMOVE_ERRORS_ASYNC, '')\n               .replace(RETURN_ASYNC, RETURN_DATA_ASYNC)\n          : out.replace(REMOVE_ERRORS, '')\n               .replace(RETURN_VALID, RETURN_TRUE);\n  }\n\n  matches = out.match(ROOTDATA_REGEXP);\n  if (!matches || matches.length !== 3) return out;\n  return out.replace(REMOVE_ROOTDATA, '');\n}\n\n\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == 'boolean') return !schema;\n  for (var key in schema) if (rules[key]) return true;\n}\n\n\nfunction schemaHasRulesExcept(schema, rules, exceptKeyword) {\n  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';\n  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;\n}\n\n\nfunction toQuotedString(str) {\n  return '\\'' + escapeQuotes(str) + '\\'';\n}\n\n\nfunction getPathExpr(currentPath, expr, jsonPointers, isNumber) {\n  var path = jsonPointers // false by default\n              ? '\\'/\\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\')')\n              : (isNumber ? '\\'[\\' + ' + expr + ' + \\']\\'' : '\\'[\\\\\\'\\' + ' + expr + ' + \\'\\\\\\']\\'');\n  return joinPaths(currentPath, path);\n}\n\n\nfunction getPath(currentPath, prop, jsonPointers) {\n  var path = jsonPointers // false by default\n              ? toQuotedString('/' + escapeJsonPointer(prop))\n              : toQuotedString(getProperty(prop));\n  return joinPaths(currentPath, path);\n}\n\n\nvar JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nvar RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, lvl, paths) {\n  var up, jsonPointer, data, matches;\n  if ($data === '') return 'rootData';\n  if ($data[0] == '/') {\n    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);\n    jsonPointer = $data;\n    data = 'rootData';\n  } else {\n    matches = $data.match(RELATIVE_JSON_POINTER);\n    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);\n    up = +matches[1];\n    jsonPointer = matches[2];\n    if (jsonPointer == '#') {\n      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);\n      return paths[lvl - up];\n    }\n\n    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);\n    data = 'data' + ((lvl - up) || '');\n    if (!jsonPointer) return data;\n  }\n\n  var expr = data;\n  var segments = jsonPointer.split('/');\n  for (var i=0; i<segments.length; i++) {\n    var segment = segments[i];\n    if (segment) {\n      data += getProperty(unescapeJsonPointer(segment));\n      expr += ' && ' + data;\n    }\n  }\n  return expr;\n}\n\n\nfunction joinPaths (a, b) {\n  if (a == '\"\"') return b;\n  return (a + ' + ' + b).replace(/' \\+ '/g, '');\n}\n\n\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\n\n\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\n\n\nfunction escapeJsonPointer(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\r\nfunction compile(nodes) {\r\n  var assignedPaths = [];\r\n  var valueAssignments = [];\r\n  var currentPath = \"\";\r\n  var data = {};\r\n  var context = data;\r\n  var arrayMode = false;\r\n\r\n  return reduce(nodes);\r\n\r\n  function reduce(nodes) {\r\n    var node;\r\n    for (var i in nodes) {\r\n      node = nodes[i];\r\n      switch (node.type) {\r\n      case \"Assign\":\r\n        assign(node);\r\n        break;\r\n      case \"ObjectPath\":\r\n        setPath(node);\r\n        break;\r\n      case \"ArrayPath\":\r\n        addTableArray(node);\r\n        break;\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  function genError(err, line, col) {\r\n    var ex = new Error(err);\r\n    ex.line = line;\r\n    ex.column = col;\r\n    throw ex;\r\n  }\r\n\r\n  function assign(node) {\r\n    var key = node.key;\r\n    var value = node.value;\r\n    var line = node.line;\r\n    var column = node.column;\r\n\r\n    var fullPath;\r\n    if (currentPath) {\r\n      fullPath = currentPath + \".\" + key;\r\n    } else {\r\n      fullPath = key;\r\n    }\r\n    if (typeof context[key] !== \"undefined\") {\r\n      genError(\"Cannot redefine existing key '\" + fullPath + \"'.\", line, column);\r\n    }\r\n\r\n    context[key] = reduceValueNode(value);\r\n\r\n    if (!pathAssigned(fullPath)) {\r\n      assignedPaths.push(fullPath);\r\n      valueAssignments.push(fullPath);\r\n    }\r\n  }\r\n\r\n\r\n  function pathAssigned(path) {\r\n    return assignedPaths.indexOf(path) !== -1;\r\n  }\r\n\r\n  function reduceValueNode(node) {\r\n    if (node.type === \"Array\") {\r\n      return reduceArrayWithTypeChecking(node.value);\r\n    } else if (node.type === \"InlineTable\") {\r\n      return reduceInlineTableNode(node.value);\r\n    } else {\r\n      return node.value;\r\n    }\r\n  }\r\n\r\n  function reduceInlineTableNode(values) {\r\n    var obj = {};\r\n    for (var i = 0; i < values.length; i++) {\r\n      var val = values[i];\r\n      if (val.value.type === \"InlineTable\") {\r\n        obj[val.key] = reduceInlineTableNode(val.value.value);\r\n      } else if (val.type === \"InlineTableValue\") {\r\n        obj[val.key] = reduceValueNode(val.value);\r\n      }\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  function setPath(node) {\r\n    var path = node.value;\r\n    var quotedPath = path.map(quoteDottedString).join(\".\");\r\n    var line = node.line;\r\n    var column = node.column;\r\n\r\n    if (pathAssigned(quotedPath)) {\r\n      genError(\"Cannot redefine existing key '\" + path + \"'.\", line, column);\r\n    }\r\n    assignedPaths.push(quotedPath);\r\n    context = deepRef(data, path, {}, line, column);\r\n    currentPath = path;\r\n  }\r\n\r\n  function addTableArray(node) {\r\n    var path = node.value;\r\n    var quotedPath = path.map(quoteDottedString).join(\".\");\r\n    var line = node.line;\r\n    var column = node.column;\r\n\r\n    if (!pathAssigned(quotedPath)) {\r\n      assignedPaths.push(quotedPath);\r\n    }\r\n    assignedPaths = assignedPaths.filter(function(p) {\r\n      return p.indexOf(quotedPath) !== 0;\r\n    });\r\n    assignedPaths.push(quotedPath);\r\n    context = deepRef(data, path, [], line, column);\r\n    currentPath = quotedPath;\r\n\r\n    if (context instanceof Array) {\r\n      var newObj = {};\r\n      context.push(newObj);\r\n      context = newObj;\r\n    } else {\r\n      genError(\"Cannot redefine existing key '\" + path + \"'.\", line, column);\r\n    }\r\n  }\r\n\r\n  // Given a path 'a.b.c', create (as necessary) `start.a`,\r\n  // `start.a.b`, and `start.a.b.c`, assigning `value` to `start.a.b.c`.\r\n  // If `a` or `b` are arrays and have items in them, the last item in the\r\n  // array is used as the context for the next sub-path.\r\n  function deepRef(start, keys, value, line, column) {\r\n    var key;\r\n    var traversed = [];\r\n    var traversedPath = \"\";\r\n    var path = keys.join(\".\");\r\n    var ctx = start;\r\n    var keysLen = keys.length;\r\n\r\n    for (var i in keys) {\r\n      key = keys[i];\r\n      traversed.push(key);\r\n      traversedPath = traversed.join(\".\");\r\n      if (typeof ctx[key] === \"undefined\") {\r\n        if (i === String(keysLen - 1)) {\r\n          ctx[key] = value;\r\n        } else {\r\n          ctx[key] = {};\r\n        }\r\n      } else if (i !== keysLen - 1 && valueAssignments.indexOf(traversedPath) > -1) {\r\n        // already a non-object value at key, can't be used as part of a new path\r\n        genError(\"Cannot redefine existing key '\" + traversedPath + \"'.\", line, column);\r\n      }\r\n\r\n      ctx = ctx[key];\r\n      if (ctx instanceof Array && ctx.length && i < keys.length - 1) {\r\n        ctx = ctx[ctx.length - 1];\r\n      }\r\n    }\r\n\r\n    return ctx;\r\n  }\r\n\r\n  function reduceArrayWithTypeChecking(array) {\r\n    // Ensure that all items in the array are of the same type\r\n    var firstType = null;\r\n    for(var i in array) {\r\n      var node = array[i];\r\n      if (firstType === null) {\r\n        firstType = node.type;\r\n      } else if ((node.type === \"Integer\" || node.type === \"Float\") && (firstType === \"Integer\" || firstType === \"Float\")) {\r\n        // OK.\r\n      } else if (node.type !== firstType) {\r\n        genError(\"Cannot add value of type \" + node.type + \" to array of type \" +\r\n          firstType + \".\", node.line, node.column);\r\n      }\r\n    }\r\n\r\n    // Recursively reduce array of nodes into array of the nodes' values\r\n    return array.map(reduceValueNode);\r\n  }\r\n\r\n  function quoteDottedString(str) {\r\n    if (str.indexOf(\".\") > -1) {\r\n      return \"\\\"\" + str + \"\\\"\";\r\n    } else {\r\n      return str;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  compile: compile\r\n};\r\n","module.exports = (function() {\r\n  /*\r\n   * Generated by PEG.js 0.8.0.\r\n   *\r\n   * http://pegjs.majda.cz/\r\n   */\r\n\r\n  function peg$subclass(child, parent) {\r\n    function ctor() { this.constructor = child; }\r\n    ctor.prototype = parent.prototype;\r\n    child.prototype = new ctor();\r\n  }\r\n\r\n  function SyntaxError(message, expected, found, offset, line, column) {\r\n    this.message  = message;\r\n    this.expected = expected;\r\n    this.found    = found;\r\n    this.offset   = offset;\r\n    this.line     = line;\r\n    this.column   = column;\r\n\r\n    this.name     = \"SyntaxError\";\r\n  }\r\n\r\n  peg$subclass(SyntaxError, Error);\r\n\r\n  function parse(input) {\r\n    var options = arguments.length > 1 ? arguments[1] : {},\r\n\r\n        peg$FAILED = {},\r\n\r\n        peg$startRuleFunctions = { start: peg$parsestart },\r\n        peg$startRuleFunction  = peg$parsestart,\r\n\r\n        peg$c0 = [],\r\n        peg$c1 = function() { return nodes },\r\n        peg$c2 = peg$FAILED,\r\n        peg$c3 = \"#\",\r\n        peg$c4 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\r\n        peg$c5 = void 0,\r\n        peg$c6 = { type: \"any\", description: \"any character\" },\r\n        peg$c7 = \"[\",\r\n        peg$c8 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\r\n        peg$c9 = \"]\",\r\n        peg$c10 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\r\n        peg$c11 = function(name) { addNode(node('ObjectPath', name, line, column)) },\r\n        peg$c12 = function(name) { addNode(node('ArrayPath', name, line, column)) },\r\n        peg$c13 = function(parts, name) { return parts.concat(name) },\r\n        peg$c14 = function(name) { return [name] },\r\n        peg$c15 = function(name) { return name },\r\n        peg$c16 = \".\",\r\n        peg$c17 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\r\n        peg$c18 = \"=\",\r\n        peg$c19 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\r\n        peg$c20 = function(key, value) { addNode(node('Assign', value, line, column, key)) },\r\n        peg$c21 = function(chars) { return chars.join('') },\r\n        peg$c22 = function(node) { return node.value },\r\n        peg$c23 = \"\\\"\\\"\\\"\",\r\n        peg$c24 = { type: \"literal\", value: \"\\\"\\\"\\\"\", description: \"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\" },\r\n        peg$c25 = null,\r\n        peg$c26 = function(chars) { return node('String', chars.join(''), line, column) },\r\n        peg$c27 = \"\\\"\",\r\n        peg$c28 = { type: \"literal\", value: \"\\\"\", description: \"\\\"\\\\\\\"\\\"\" },\r\n        peg$c29 = \"'''\",\r\n        peg$c30 = { type: \"literal\", value: \"'''\", description: \"\\\"'''\\\"\" },\r\n        peg$c31 = \"'\",\r\n        peg$c32 = { type: \"literal\", value: \"'\", description: \"\\\"'\\\"\" },\r\n        peg$c33 = function(char) { return char },\r\n        peg$c34 = function(char) { return char},\r\n        peg$c35 = \"\\\\\",\r\n        peg$c36 = { type: \"literal\", value: \"\\\\\", description: \"\\\"\\\\\\\\\\\"\" },\r\n        peg$c37 = function() { return '' },\r\n        peg$c38 = \"e\",\r\n        peg$c39 = { type: \"literal\", value: \"e\", description: \"\\\"e\\\"\" },\r\n        peg$c40 = \"E\",\r\n        peg$c41 = { type: \"literal\", value: \"E\", description: \"\\\"E\\\"\" },\r\n        peg$c42 = function(left, right) { return node('Float', parseFloat(left + 'e' + right), line, column) },\r\n        peg$c43 = function(text) { return node('Float', parseFloat(text), line, column) },\r\n        peg$c44 = \"+\",\r\n        peg$c45 = { type: \"literal\", value: \"+\", description: \"\\\"+\\\"\" },\r\n        peg$c46 = function(digits) { return digits.join('') },\r\n        peg$c47 = \"-\",\r\n        peg$c48 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\r\n        peg$c49 = function(digits) { return '-' + digits.join('') },\r\n        peg$c50 = function(text) { return node('Integer', parseInt(text, 10), line, column) },\r\n        peg$c51 = \"true\",\r\n        peg$c52 = { type: \"literal\", value: \"true\", description: \"\\\"true\\\"\" },\r\n        peg$c53 = function() { return node('Boolean', true, line, column) },\r\n        peg$c54 = \"false\",\r\n        peg$c55 = { type: \"literal\", value: \"false\", description: \"\\\"false\\\"\" },\r\n        peg$c56 = function() { return node('Boolean', false, line, column) },\r\n        peg$c57 = function() { return node('Array', [], line, column) },\r\n        peg$c58 = function(value) { return node('Array', value ? [value] : [], line, column) },\r\n        peg$c59 = function(values) { return node('Array', values, line, column) },\r\n        peg$c60 = function(values, value) { return node('Array', values.concat(value), line, column) },\r\n        peg$c61 = function(value) { return value },\r\n        peg$c62 = \",\",\r\n        peg$c63 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\r\n        peg$c64 = \"{\",\r\n        peg$c65 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\r\n        peg$c66 = \"}\",\r\n        peg$c67 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\r\n        peg$c68 = function(values) { return node('InlineTable', values, line, column) },\r\n        peg$c69 = function(key, value) { return node('InlineTableValue', value, line, column, key) },\r\n        peg$c70 = function(digits) { return \".\" + digits },\r\n        peg$c71 = function(date) { return  date.join('') },\r\n        peg$c72 = \":\",\r\n        peg$c73 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\r\n        peg$c74 = function(time) { return time.join('') },\r\n        peg$c75 = \"T\",\r\n        peg$c76 = { type: \"literal\", value: \"T\", description: \"\\\"T\\\"\" },\r\n        peg$c77 = \"Z\",\r\n        peg$c78 = { type: \"literal\", value: \"Z\", description: \"\\\"Z\\\"\" },\r\n        peg$c79 = function(date, time) { return node('Date', new Date(date + \"T\" + time + \"Z\"), line, column) },\r\n        peg$c80 = function(date, time) { return node('Date', new Date(date + \"T\" + time), line, column) },\r\n        peg$c81 = /^[ \\t]/,\r\n        peg$c82 = { type: \"class\", value: \"[ \\\\t]\", description: \"[ \\\\t]\" },\r\n        peg$c83 = \"\\n\",\r\n        peg$c84 = { type: \"literal\", value: \"\\n\", description: \"\\\"\\\\n\\\"\" },\r\n        peg$c85 = \"\\r\",\r\n        peg$c86 = { type: \"literal\", value: \"\\r\", description: \"\\\"\\\\r\\\"\" },\r\n        peg$c87 = /^[0-9a-f]/i,\r\n        peg$c88 = { type: \"class\", value: \"[0-9a-f]i\", description: \"[0-9a-f]i\" },\r\n        peg$c89 = /^[0-9]/,\r\n        peg$c90 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\r\n        peg$c91 = \"_\",\r\n        peg$c92 = { type: \"literal\", value: \"_\", description: \"\\\"_\\\"\" },\r\n        peg$c93 = function() { return \"\" },\r\n        peg$c94 = /^[A-Za-z0-9_\\-]/,\r\n        peg$c95 = { type: \"class\", value: \"[A-Za-z0-9_\\\\-]\", description: \"[A-Za-z0-9_\\\\-]\" },\r\n        peg$c96 = function(d) { return d.join('') },\r\n        peg$c97 = \"\\\\\\\"\",\r\n        peg$c98 = { type: \"literal\", value: \"\\\\\\\"\", description: \"\\\"\\\\\\\\\\\\\\\"\\\"\" },\r\n        peg$c99 = function() { return '\"'  },\r\n        peg$c100 = \"\\\\\\\\\",\r\n        peg$c101 = { type: \"literal\", value: \"\\\\\\\\\", description: \"\\\"\\\\\\\\\\\\\\\\\\\"\" },\r\n        peg$c102 = function() { return '\\\\' },\r\n        peg$c103 = \"\\\\b\",\r\n        peg$c104 = { type: \"literal\", value: \"\\\\b\", description: \"\\\"\\\\\\\\b\\\"\" },\r\n        peg$c105 = function() { return '\\b' },\r\n        peg$c106 = \"\\\\t\",\r\n        peg$c107 = { type: \"literal\", value: \"\\\\t\", description: \"\\\"\\\\\\\\t\\\"\" },\r\n        peg$c108 = function() { return '\\t' },\r\n        peg$c109 = \"\\\\n\",\r\n        peg$c110 = { type: \"literal\", value: \"\\\\n\", description: \"\\\"\\\\\\\\n\\\"\" },\r\n        peg$c111 = function() { return '\\n' },\r\n        peg$c112 = \"\\\\f\",\r\n        peg$c113 = { type: \"literal\", value: \"\\\\f\", description: \"\\\"\\\\\\\\f\\\"\" },\r\n        peg$c114 = function() { return '\\f' },\r\n        peg$c115 = \"\\\\r\",\r\n        peg$c116 = { type: \"literal\", value: \"\\\\r\", description: \"\\\"\\\\\\\\r\\\"\" },\r\n        peg$c117 = function() { return '\\r' },\r\n        peg$c118 = \"\\\\U\",\r\n        peg$c119 = { type: \"literal\", value: \"\\\\U\", description: \"\\\"\\\\\\\\U\\\"\" },\r\n        peg$c120 = function(digits) { return convertCodePoint(digits.join('')) },\r\n        peg$c121 = \"\\\\u\",\r\n        peg$c122 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\r\n\r\n        peg$currPos          = 0,\r\n        peg$reportedPos      = 0,\r\n        peg$cachedPos        = 0,\r\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\r\n        peg$maxFailPos       = 0,\r\n        peg$maxFailExpected  = [],\r\n        peg$silentFails      = 0,\r\n\r\n        peg$cache = {},\r\n        peg$result;\r\n\r\n    if (\"startRule\" in options) {\r\n      if (!(options.startRule in peg$startRuleFunctions)) {\r\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\r\n      }\r\n\r\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\r\n    }\r\n\r\n    function text() {\r\n      return input.substring(peg$reportedPos, peg$currPos);\r\n    }\r\n\r\n    function offset() {\r\n      return peg$reportedPos;\r\n    }\r\n\r\n    function line() {\r\n      return peg$computePosDetails(peg$reportedPos).line;\r\n    }\r\n\r\n    function column() {\r\n      return peg$computePosDetails(peg$reportedPos).column;\r\n    }\r\n\r\n    function expected(description) {\r\n      throw peg$buildException(\r\n        null,\r\n        [{ type: \"other\", description: description }],\r\n        peg$reportedPos\r\n      );\r\n    }\r\n\r\n    function error(message) {\r\n      throw peg$buildException(message, null, peg$reportedPos);\r\n    }\r\n\r\n    function peg$computePosDetails(pos) {\r\n      function advance(details, startPos, endPos) {\r\n        var p, ch;\r\n\r\n        for (p = startPos; p < endPos; p++) {\r\n          ch = input.charAt(p);\r\n          if (ch === \"\\n\") {\r\n            if (!details.seenCR) { details.line++; }\r\n            details.column = 1;\r\n            details.seenCR = false;\r\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\r\n            details.line++;\r\n            details.column = 1;\r\n            details.seenCR = true;\r\n          } else {\r\n            details.column++;\r\n            details.seenCR = false;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (peg$cachedPos !== pos) {\r\n        if (peg$cachedPos > pos) {\r\n          peg$cachedPos = 0;\r\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\r\n        }\r\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\r\n        peg$cachedPos = pos;\r\n      }\r\n\r\n      return peg$cachedPosDetails;\r\n    }\r\n\r\n    function peg$fail(expected) {\r\n      if (peg$currPos < peg$maxFailPos) { return; }\r\n\r\n      if (peg$currPos > peg$maxFailPos) {\r\n        peg$maxFailPos = peg$currPos;\r\n        peg$maxFailExpected = [];\r\n      }\r\n\r\n      peg$maxFailExpected.push(expected);\r\n    }\r\n\r\n    function peg$buildException(message, expected, pos) {\r\n      function cleanupExpected(expected) {\r\n        var i = 1;\r\n\r\n        expected.sort(function(a, b) {\r\n          if (a.description < b.description) {\r\n            return -1;\r\n          } else if (a.description > b.description) {\r\n            return 1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        });\r\n\r\n        while (i < expected.length) {\r\n          if (expected[i - 1] === expected[i]) {\r\n            expected.splice(i, 1);\r\n          } else {\r\n            i++;\r\n          }\r\n        }\r\n      }\r\n\r\n      function buildMessage(expected, found) {\r\n        function stringEscape(s) {\r\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\r\n\r\n          return s\r\n            .replace(/\\\\/g,   '\\\\\\\\')\r\n            .replace(/\"/g,    '\\\\\"')\r\n            .replace(/\\x08/g, '\\\\b')\r\n            .replace(/\\t/g,   '\\\\t')\r\n            .replace(/\\n/g,   '\\\\n')\r\n            .replace(/\\f/g,   '\\\\f')\r\n            .replace(/\\r/g,   '\\\\r')\r\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\r\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\r\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\r\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\r\n        }\r\n\r\n        var expectedDescs = new Array(expected.length),\r\n            expectedDesc, foundDesc, i;\r\n\r\n        for (i = 0; i < expected.length; i++) {\r\n          expectedDescs[i] = expected[i].description;\r\n        }\r\n\r\n        expectedDesc = expected.length > 1\r\n          ? expectedDescs.slice(0, -1).join(\", \")\r\n              + \" or \"\r\n              + expectedDescs[expected.length - 1]\r\n          : expectedDescs[0];\r\n\r\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\r\n\r\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\r\n      }\r\n\r\n      var posDetails = peg$computePosDetails(pos),\r\n          found      = pos < input.length ? input.charAt(pos) : null;\r\n\r\n      if (expected !== null) {\r\n        cleanupExpected(expected);\r\n      }\r\n\r\n      return new SyntaxError(\r\n        message !== null ? message : buildMessage(expected, found),\r\n        expected,\r\n        found,\r\n        pos,\r\n        posDetails.line,\r\n        posDetails.column\r\n      );\r\n    }\r\n\r\n    function peg$parsestart() {\r\n      var s0, s1, s2;\r\n\r\n      var key    = peg$currPos * 49 + 0,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$parseline();\r\n      while (s2 !== peg$FAILED) {\r\n        s1.push(s2);\r\n        s2 = peg$parseline();\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$reportedPos = s0;\r\n        s1 = peg$c1();\r\n      }\r\n      s0 = s1;\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseline() {\r\n      var s0, s1, s2, s3, s4, s5, s6;\r\n\r\n      var key    = peg$currPos * 49 + 1,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$parseS();\r\n      while (s2 !== peg$FAILED) {\r\n        s1.push(s2);\r\n        s2 = peg$parseS();\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parseexpression();\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = [];\r\n          s4 = peg$parseS();\r\n          while (s4 !== peg$FAILED) {\r\n            s3.push(s4);\r\n            s4 = peg$parseS();\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = [];\r\n            s5 = peg$parsecomment();\r\n            while (s5 !== peg$FAILED) {\r\n              s4.push(s5);\r\n              s5 = peg$parsecomment();\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = [];\r\n              s6 = peg$parseNL();\r\n              if (s6 !== peg$FAILED) {\r\n                while (s6 !== peg$FAILED) {\r\n                  s5.push(s6);\r\n                  s6 = peg$parseNL();\r\n                }\r\n              } else {\r\n                s5 = peg$c2;\r\n              }\r\n              if (s5 === peg$FAILED) {\r\n                s5 = peg$parseEOF();\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                s1 = [s1, s2, s3, s4, s5];\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = [];\r\n        s2 = peg$parseS();\r\n        if (s2 !== peg$FAILED) {\r\n          while (s2 !== peg$FAILED) {\r\n            s1.push(s2);\r\n            s2 = peg$parseS();\r\n          }\r\n        } else {\r\n          s1 = peg$c2;\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = [];\r\n          s3 = peg$parseNL();\r\n          if (s3 !== peg$FAILED) {\r\n            while (s3 !== peg$FAILED) {\r\n              s2.push(s3);\r\n              s3 = peg$parseNL();\r\n            }\r\n          } else {\r\n            s2 = peg$c2;\r\n          }\r\n          if (s2 === peg$FAILED) {\r\n            s2 = peg$parseEOF();\r\n          }\r\n          if (s2 !== peg$FAILED) {\r\n            s1 = [s1, s2];\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$parseNL();\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseexpression() {\r\n      var s0;\r\n\r\n      var key    = peg$currPos * 49 + 2,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$parsecomment();\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$parsepath();\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$parsetablearray();\r\n          if (s0 === peg$FAILED) {\r\n            s0 = peg$parseassignment();\r\n          }\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsecomment() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      var key    = peg$currPos * 49 + 3,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 35) {\r\n        s1 = peg$c3;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c4); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$currPos;\r\n        s4 = peg$currPos;\r\n        peg$silentFails++;\r\n        s5 = peg$parseNL();\r\n        if (s5 === peg$FAILED) {\r\n          s5 = peg$parseEOF();\r\n        }\r\n        peg$silentFails--;\r\n        if (s5 === peg$FAILED) {\r\n          s4 = peg$c5;\r\n        } else {\r\n          peg$currPos = s4;\r\n          s4 = peg$c2;\r\n        }\r\n        if (s4 !== peg$FAILED) {\r\n          if (input.length > peg$currPos) {\r\n            s5 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n          } else {\r\n            s5 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\r\n          }\r\n          if (s5 !== peg$FAILED) {\r\n            s4 = [s4, s5];\r\n            s3 = s4;\r\n          } else {\r\n            peg$currPos = s3;\r\n            s3 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s3;\r\n          s3 = peg$c2;\r\n        }\r\n        while (s3 !== peg$FAILED) {\r\n          s2.push(s3);\r\n          s3 = peg$currPos;\r\n          s4 = peg$currPos;\r\n          peg$silentFails++;\r\n          s5 = peg$parseNL();\r\n          if (s5 === peg$FAILED) {\r\n            s5 = peg$parseEOF();\r\n          }\r\n          peg$silentFails--;\r\n          if (s5 === peg$FAILED) {\r\n            s4 = peg$c5;\r\n          } else {\r\n            peg$currPos = s4;\r\n            s4 = peg$c2;\r\n          }\r\n          if (s4 !== peg$FAILED) {\r\n            if (input.length > peg$currPos) {\r\n              s5 = input.charAt(peg$currPos);\r\n              peg$currPos++;\r\n            } else {\r\n              s5 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\r\n            }\r\n            if (s5 !== peg$FAILED) {\r\n              s4 = [s4, s5];\r\n              s3 = s4;\r\n            } else {\r\n              peg$currPos = s3;\r\n              s3 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s3;\r\n            s3 = peg$c2;\r\n          }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s1 = [s1, s2];\r\n          s0 = s1;\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsepath() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      var key    = peg$currPos * 49 + 4,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 91) {\r\n        s1 = peg$c7;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$parseS();\r\n        while (s3 !== peg$FAILED) {\r\n          s2.push(s3);\r\n          s3 = peg$parseS();\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = peg$parsetable_key();\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = [];\r\n            s5 = peg$parseS();\r\n            while (s5 !== peg$FAILED) {\r\n              s4.push(s5);\r\n              s5 = peg$parseS();\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              if (input.charCodeAt(peg$currPos) === 93) {\r\n                s5 = peg$c9;\r\n                peg$currPos++;\r\n              } else {\r\n                s5 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c10); }\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                peg$reportedPos = s0;\r\n                s1 = peg$c11(s3);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsetablearray() {\r\n      var s0, s1, s2, s3, s4, s5, s6, s7;\r\n\r\n      var key    = peg$currPos * 49 + 5,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 91) {\r\n        s1 = peg$c7;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        if (input.charCodeAt(peg$currPos) === 91) {\r\n          s2 = peg$c7;\r\n          peg$currPos++;\r\n        } else {\r\n          s2 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = [];\r\n          s4 = peg$parseS();\r\n          while (s4 !== peg$FAILED) {\r\n            s3.push(s4);\r\n            s4 = peg$parseS();\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parsetable_key();\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = [];\r\n              s6 = peg$parseS();\r\n              while (s6 !== peg$FAILED) {\r\n                s5.push(s6);\r\n                s6 = peg$parseS();\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                if (input.charCodeAt(peg$currPos) === 93) {\r\n                  s6 = peg$c9;\r\n                  peg$currPos++;\r\n                } else {\r\n                  s6 = peg$FAILED;\r\n                  if (peg$silentFails === 0) { peg$fail(peg$c10); }\r\n                }\r\n                if (s6 !== peg$FAILED) {\r\n                  if (input.charCodeAt(peg$currPos) === 93) {\r\n                    s7 = peg$c9;\r\n                    peg$currPos++;\r\n                  } else {\r\n                    s7 = peg$FAILED;\r\n                    if (peg$silentFails === 0) { peg$fail(peg$c10); }\r\n                  }\r\n                  if (s7 !== peg$FAILED) {\r\n                    peg$reportedPos = s0;\r\n                    s1 = peg$c12(s4);\r\n                    s0 = s1;\r\n                  } else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$c2;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$c2;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsetable_key() {\r\n      var s0, s1, s2;\r\n\r\n      var key    = peg$currPos * 49 + 6,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$parsedot_ended_table_key_part();\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          s2 = peg$parsedot_ended_table_key_part();\r\n        }\r\n      } else {\r\n        s1 = peg$c2;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parsetable_key_part();\r\n        if (s2 !== peg$FAILED) {\r\n          peg$reportedPos = s0;\r\n          s1 = peg$c13(s1, s2);\r\n          s0 = s1;\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = peg$parsetable_key_part();\r\n        if (s1 !== peg$FAILED) {\r\n          peg$reportedPos = s0;\r\n          s1 = peg$c14(s1);\r\n        }\r\n        s0 = s1;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsetable_key_part() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      var key    = peg$currPos * 49 + 7,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$parseS();\r\n      while (s2 !== peg$FAILED) {\r\n        s1.push(s2);\r\n        s2 = peg$parseS();\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parsekey();\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = [];\r\n          s4 = peg$parseS();\r\n          while (s4 !== peg$FAILED) {\r\n            s3.push(s4);\r\n            s4 = peg$parseS();\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$reportedPos = s0;\r\n            s1 = peg$c15(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = [];\r\n        s2 = peg$parseS();\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          s2 = peg$parseS();\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = peg$parsequoted_key();\r\n          if (s2 !== peg$FAILED) {\r\n            s3 = [];\r\n            s4 = peg$parseS();\r\n            while (s4 !== peg$FAILED) {\r\n              s3.push(s4);\r\n              s4 = peg$parseS();\r\n            }\r\n            if (s3 !== peg$FAILED) {\r\n              peg$reportedPos = s0;\r\n              s1 = peg$c15(s2);\r\n              s0 = s1;\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsedot_ended_table_key_part() {\r\n      var s0, s1, s2, s3, s4, s5, s6;\r\n\r\n      var key    = peg$currPos * 49 + 8,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$parseS();\r\n      while (s2 !== peg$FAILED) {\r\n        s1.push(s2);\r\n        s2 = peg$parseS();\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parsekey();\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = [];\r\n          s4 = peg$parseS();\r\n          while (s4 !== peg$FAILED) {\r\n            s3.push(s4);\r\n            s4 = peg$parseS();\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            if (input.charCodeAt(peg$currPos) === 46) {\r\n              s4 = peg$c16;\r\n              peg$currPos++;\r\n            } else {\r\n              s4 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = [];\r\n              s6 = peg$parseS();\r\n              while (s6 !== peg$FAILED) {\r\n                s5.push(s6);\r\n                s6 = peg$parseS();\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                peg$reportedPos = s0;\r\n                s1 = peg$c15(s2);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = [];\r\n        s2 = peg$parseS();\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          s2 = peg$parseS();\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = peg$parsequoted_key();\r\n          if (s2 !== peg$FAILED) {\r\n            s3 = [];\r\n            s4 = peg$parseS();\r\n            while (s4 !== peg$FAILED) {\r\n              s3.push(s4);\r\n              s4 = peg$parseS();\r\n            }\r\n            if (s3 !== peg$FAILED) {\r\n              if (input.charCodeAt(peg$currPos) === 46) {\r\n                s4 = peg$c16;\r\n                peg$currPos++;\r\n              } else {\r\n                s4 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n              }\r\n              if (s4 !== peg$FAILED) {\r\n                s5 = [];\r\n                s6 = peg$parseS();\r\n                while (s6 !== peg$FAILED) {\r\n                  s5.push(s6);\r\n                  s6 = peg$parseS();\r\n                }\r\n                if (s5 !== peg$FAILED) {\r\n                  peg$reportedPos = s0;\r\n                  s1 = peg$c15(s2);\r\n                  s0 = s1;\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$c2;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseassignment() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      var key    = peg$currPos * 49 + 9,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parsekey();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$parseS();\r\n        while (s3 !== peg$FAILED) {\r\n          s2.push(s3);\r\n          s3 = peg$parseS();\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 61) {\r\n            s3 = peg$c18;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c19); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = [];\r\n            s5 = peg$parseS();\r\n            while (s5 !== peg$FAILED) {\r\n              s4.push(s5);\r\n              s5 = peg$parseS();\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parsevalue();\r\n              if (s5 !== peg$FAILED) {\r\n                peg$reportedPos = s0;\r\n                s1 = peg$c20(s1, s5);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = peg$parsequoted_key();\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = [];\r\n          s3 = peg$parseS();\r\n          while (s3 !== peg$FAILED) {\r\n            s2.push(s3);\r\n            s3 = peg$parseS();\r\n          }\r\n          if (s2 !== peg$FAILED) {\r\n            if (input.charCodeAt(peg$currPos) === 61) {\r\n              s3 = peg$c18;\r\n              peg$currPos++;\r\n            } else {\r\n              s3 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c19); }\r\n            }\r\n            if (s3 !== peg$FAILED) {\r\n              s4 = [];\r\n              s5 = peg$parseS();\r\n              while (s5 !== peg$FAILED) {\r\n                s4.push(s5);\r\n                s5 = peg$parseS();\r\n              }\r\n              if (s4 !== peg$FAILED) {\r\n                s5 = peg$parsevalue();\r\n                if (s5 !== peg$FAILED) {\r\n                  peg$reportedPos = s0;\r\n                  s1 = peg$c20(s1, s5);\r\n                  s0 = s1;\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$c2;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsekey() {\r\n      var s0, s1, s2;\r\n\r\n      var key    = peg$currPos * 49 + 10,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$parseASCII_BASIC();\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          s2 = peg$parseASCII_BASIC();\r\n        }\r\n      } else {\r\n        s1 = peg$c2;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$reportedPos = s0;\r\n        s1 = peg$c21(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsequoted_key() {\r\n      var s0, s1;\r\n\r\n      var key    = peg$currPos * 49 + 11,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parsedouble_quoted_single_line_string();\r\n      if (s1 !== peg$FAILED) {\r\n        peg$reportedPos = s0;\r\n        s1 = peg$c22(s1);\r\n      }\r\n      s0 = s1;\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = peg$parsesingle_quoted_single_line_string();\r\n        if (s1 !== peg$FAILED) {\r\n          peg$reportedPos = s0;\r\n          s1 = peg$c22(s1);\r\n        }\r\n        s0 = s1;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsevalue() {\r\n      var s0;\r\n\r\n      var key    = peg$currPos * 49 + 12,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$parsestring();\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$parsedatetime();\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$parsefloat();\r\n          if (s0 === peg$FAILED) {\r\n            s0 = peg$parseinteger();\r\n            if (s0 === peg$FAILED) {\r\n              s0 = peg$parseboolean();\r\n              if (s0 === peg$FAILED) {\r\n                s0 = peg$parsearray();\r\n                if (s0 === peg$FAILED) {\r\n                  s0 = peg$parseinline_table();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsestring() {\r\n      var s0;\r\n\r\n      var key    = peg$currPos * 49 + 13,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$parsedouble_quoted_multiline_string();\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$parsedouble_quoted_single_line_string();\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$parsesingle_quoted_multiline_string();\r\n          if (s0 === peg$FAILED) {\r\n            s0 = peg$parsesingle_quoted_single_line_string();\r\n          }\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsedouble_quoted_multiline_string() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      var key    = peg$currPos * 49 + 14,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.substr(peg$currPos, 3) === peg$c23) {\r\n        s1 = peg$c23;\r\n        peg$currPos += 3;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c24); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parseNL();\r\n        if (s2 === peg$FAILED) {\r\n          s2 = peg$c25;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = [];\r\n          s4 = peg$parsemultiline_string_char();\r\n          while (s4 !== peg$FAILED) {\r\n            s3.push(s4);\r\n            s4 = peg$parsemultiline_string_char();\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            if (input.substr(peg$currPos, 3) === peg$c23) {\r\n              s4 = peg$c23;\r\n              peg$currPos += 3;\r\n            } else {\r\n              s4 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c24); }\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              peg$reportedPos = s0;\r\n              s1 = peg$c26(s3);\r\n              s0 = s1;\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsedouble_quoted_single_line_string() {\r\n      var s0, s1, s2, s3;\r\n\r\n      var key    = peg$currPos * 49 + 15,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 34) {\r\n        s1 = peg$c27;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$parsestring_char();\r\n        while (s3 !== peg$FAILED) {\r\n          s2.push(s3);\r\n          s3 = peg$parsestring_char();\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 34) {\r\n            s3 = peg$c27;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$reportedPos = s0;\r\n            s1 = peg$c26(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsesingle_quoted_multiline_string() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      var key    = peg$currPos * 49 + 16,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.substr(peg$currPos, 3) === peg$c29) {\r\n        s1 = peg$c29;\r\n        peg$currPos += 3;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c30); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parseNL();\r\n        if (s2 === peg$FAILED) {\r\n          s2 = peg$c25;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = [];\r\n          s4 = peg$parsemultiline_literal_char();\r\n          while (s4 !== peg$FAILED) {\r\n            s3.push(s4);\r\n            s4 = peg$parsemultiline_literal_char();\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            if (input.substr(peg$currPos, 3) === peg$c29) {\r\n              s4 = peg$c29;\r\n              peg$currPos += 3;\r\n            } else {\r\n              s4 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              peg$reportedPos = s0;\r\n              s1 = peg$c26(s3);\r\n              s0 = s1;\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsesingle_quoted_single_line_string() {\r\n      var s0, s1, s2, s3;\r\n\r\n      var key    = peg$currPos * 49 + 17,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 39) {\r\n        s1 = peg$c31;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$parseliteral_char();\r\n        while (s3 !== peg$FAILED) {\r\n          s2.push(s3);\r\n          s3 = peg$parseliteral_char();\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 39) {\r\n            s3 = peg$c31;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c32); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$reportedPos = s0;\r\n            s1 = peg$c26(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsestring_char() {\r\n      var s0, s1, s2;\r\n\r\n      var key    = peg$currPos * 49 + 18,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$parseESCAPED();\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = peg$currPos;\r\n        peg$silentFails++;\r\n        if (input.charCodeAt(peg$currPos) === 34) {\r\n          s2 = peg$c27;\r\n          peg$currPos++;\r\n        } else {\r\n          s2 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\r\n        }\r\n        peg$silentFails--;\r\n        if (s2 === peg$FAILED) {\r\n          s1 = peg$c5;\r\n        } else {\r\n          peg$currPos = s1;\r\n          s1 = peg$c2;\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          if (input.length > peg$currPos) {\r\n            s2 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n          } else {\r\n            s2 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\r\n          }\r\n          if (s2 !== peg$FAILED) {\r\n            peg$reportedPos = s0;\r\n            s1 = peg$c33(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseliteral_char() {\r\n      var s0, s1, s2;\r\n\r\n      var key    = peg$currPos * 49 + 19,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$currPos;\r\n      peg$silentFails++;\r\n      if (input.charCodeAt(peg$currPos) === 39) {\r\n        s2 = peg$c31;\r\n        peg$currPos++;\r\n      } else {\r\n        s2 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\r\n      }\r\n      peg$silentFails--;\r\n      if (s2 === peg$FAILED) {\r\n        s1 = peg$c5;\r\n      } else {\r\n        peg$currPos = s1;\r\n        s1 = peg$c2;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        if (input.length > peg$currPos) {\r\n          s2 = input.charAt(peg$currPos);\r\n          peg$currPos++;\r\n        } else {\r\n          s2 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          peg$reportedPos = s0;\r\n          s1 = peg$c33(s2);\r\n          s0 = s1;\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsemultiline_string_char() {\r\n      var s0, s1, s2;\r\n\r\n      var key    = peg$currPos * 49 + 20,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$parseESCAPED();\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$parsemultiline_string_delim();\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$currPos;\r\n          s1 = peg$currPos;\r\n          peg$silentFails++;\r\n          if (input.substr(peg$currPos, 3) === peg$c23) {\r\n            s2 = peg$c23;\r\n            peg$currPos += 3;\r\n          } else {\r\n            s2 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c24); }\r\n          }\r\n          peg$silentFails--;\r\n          if (s2 === peg$FAILED) {\r\n            s1 = peg$c5;\r\n          } else {\r\n            peg$currPos = s1;\r\n            s1 = peg$c2;\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            if (input.length > peg$currPos) {\r\n              s2 = input.charAt(peg$currPos);\r\n              peg$currPos++;\r\n            } else {\r\n              s2 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\r\n            }\r\n            if (s2 !== peg$FAILED) {\r\n              peg$reportedPos = s0;\r\n              s1 = peg$c34(s2);\r\n              s0 = s1;\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsemultiline_string_delim() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      var key    = peg$currPos * 49 + 21,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 92) {\r\n        s1 = peg$c35;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parseNL();\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = [];\r\n          s4 = peg$parseNLS();\r\n          while (s4 !== peg$FAILED) {\r\n            s3.push(s4);\r\n            s4 = peg$parseNLS();\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$reportedPos = s0;\r\n            s1 = peg$c37();\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsemultiline_literal_char() {\r\n      var s0, s1, s2;\r\n\r\n      var key    = peg$currPos * 49 + 22,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$currPos;\r\n      peg$silentFails++;\r\n      if (input.substr(peg$currPos, 3) === peg$c29) {\r\n        s2 = peg$c29;\r\n        peg$currPos += 3;\r\n      } else {\r\n        s2 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c30); }\r\n      }\r\n      peg$silentFails--;\r\n      if (s2 === peg$FAILED) {\r\n        s1 = peg$c5;\r\n      } else {\r\n        peg$currPos = s1;\r\n        s1 = peg$c2;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        if (input.length > peg$currPos) {\r\n          s2 = input.charAt(peg$currPos);\r\n          peg$currPos++;\r\n        } else {\r\n          s2 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          peg$reportedPos = s0;\r\n          s1 = peg$c33(s2);\r\n          s0 = s1;\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsefloat() {\r\n      var s0, s1, s2, s3;\r\n\r\n      var key    = peg$currPos * 49 + 23,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parsefloat_text();\r\n      if (s1 === peg$FAILED) {\r\n        s1 = peg$parseinteger_text();\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        if (input.charCodeAt(peg$currPos) === 101) {\r\n          s2 = peg$c38;\r\n          peg$currPos++;\r\n        } else {\r\n          s2 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c39); }\r\n        }\r\n        if (s2 === peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 69) {\r\n            s2 = peg$c40;\r\n            peg$currPos++;\r\n          } else {\r\n            s2 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c41); }\r\n          }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = peg$parseinteger_text();\r\n          if (s3 !== peg$FAILED) {\r\n            peg$reportedPos = s0;\r\n            s1 = peg$c42(s1, s3);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = peg$parsefloat_text();\r\n        if (s1 !== peg$FAILED) {\r\n          peg$reportedPos = s0;\r\n          s1 = peg$c43(s1);\r\n        }\r\n        s0 = s1;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsefloat_text() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      var key    = peg$currPos * 49 + 24,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 43) {\r\n        s1 = peg$c44;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\r\n      }\r\n      if (s1 === peg$FAILED) {\r\n        s1 = peg$c25;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$currPos;\r\n        s3 = peg$parseDIGITS();\r\n        if (s3 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 46) {\r\n            s4 = peg$c16;\r\n            peg$currPos++;\r\n          } else {\r\n            s4 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n          }\r\n          if (s4 !== peg$FAILED) {\r\n            s5 = peg$parseDIGITS();\r\n            if (s5 !== peg$FAILED) {\r\n              s3 = [s3, s4, s5];\r\n              s2 = s3;\r\n            } else {\r\n              peg$currPos = s2;\r\n              s2 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s2;\r\n            s2 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s2;\r\n          s2 = peg$c2;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          peg$reportedPos = s0;\r\n          s1 = peg$c46(s2);\r\n          s0 = s1;\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 45) {\r\n          s1 = peg$c47;\r\n          peg$currPos++;\r\n        } else {\r\n          s1 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c48); }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = peg$currPos;\r\n          s3 = peg$parseDIGITS();\r\n          if (s3 !== peg$FAILED) {\r\n            if (input.charCodeAt(peg$currPos) === 46) {\r\n              s4 = peg$c16;\r\n              peg$currPos++;\r\n            } else {\r\n              s4 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parseDIGITS();\r\n              if (s5 !== peg$FAILED) {\r\n                s3 = [s3, s4, s5];\r\n                s2 = s3;\r\n              } else {\r\n                peg$currPos = s2;\r\n                s2 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s2;\r\n              s2 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s2;\r\n            s2 = peg$c2;\r\n          }\r\n          if (s2 !== peg$FAILED) {\r\n            peg$reportedPos = s0;\r\n            s1 = peg$c49(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseinteger() {\r\n      var s0, s1;\r\n\r\n      var key    = peg$currPos * 49 + 25,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parseinteger_text();\r\n      if (s1 !== peg$FAILED) {\r\n        peg$reportedPos = s0;\r\n        s1 = peg$c50(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseinteger_text() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      var key    = peg$currPos * 49 + 26,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 43) {\r\n        s1 = peg$c44;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\r\n      }\r\n      if (s1 === peg$FAILED) {\r\n        s1 = peg$c25;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$parseDIGIT_OR_UNDER();\r\n        if (s3 !== peg$FAILED) {\r\n          while (s3 !== peg$FAILED) {\r\n            s2.push(s3);\r\n            s3 = peg$parseDIGIT_OR_UNDER();\r\n          }\r\n        } else {\r\n          s2 = peg$c2;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = peg$currPos;\r\n          peg$silentFails++;\r\n          if (input.charCodeAt(peg$currPos) === 46) {\r\n            s4 = peg$c16;\r\n            peg$currPos++;\r\n          } else {\r\n            s4 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n          }\r\n          peg$silentFails--;\r\n          if (s4 === peg$FAILED) {\r\n            s3 = peg$c5;\r\n          } else {\r\n            peg$currPos = s3;\r\n            s3 = peg$c2;\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$reportedPos = s0;\r\n            s1 = peg$c46(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 45) {\r\n          s1 = peg$c47;\r\n          peg$currPos++;\r\n        } else {\r\n          s1 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c48); }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = [];\r\n          s3 = peg$parseDIGIT_OR_UNDER();\r\n          if (s3 !== peg$FAILED) {\r\n            while (s3 !== peg$FAILED) {\r\n              s2.push(s3);\r\n              s3 = peg$parseDIGIT_OR_UNDER();\r\n            }\r\n          } else {\r\n            s2 = peg$c2;\r\n          }\r\n          if (s2 !== peg$FAILED) {\r\n            s3 = peg$currPos;\r\n            peg$silentFails++;\r\n            if (input.charCodeAt(peg$currPos) === 46) {\r\n              s4 = peg$c16;\r\n              peg$currPos++;\r\n            } else {\r\n              s4 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n            }\r\n            peg$silentFails--;\r\n            if (s4 === peg$FAILED) {\r\n              s3 = peg$c5;\r\n            } else {\r\n              peg$currPos = s3;\r\n              s3 = peg$c2;\r\n            }\r\n            if (s3 !== peg$FAILED) {\r\n              peg$reportedPos = s0;\r\n              s1 = peg$c49(s2);\r\n              s0 = s1;\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseboolean() {\r\n      var s0, s1;\r\n\r\n      var key    = peg$currPos * 49 + 27,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.substr(peg$currPos, 4) === peg$c51) {\r\n        s1 = peg$c51;\r\n        peg$currPos += 4;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c52); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$reportedPos = s0;\r\n        s1 = peg$c53();\r\n      }\r\n      s0 = s1;\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        if (input.substr(peg$currPos, 5) === peg$c54) {\r\n          s1 = peg$c54;\r\n          peg$currPos += 5;\r\n        } else {\r\n          s1 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c55); }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          peg$reportedPos = s0;\r\n          s1 = peg$c56();\r\n        }\r\n        s0 = s1;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsearray() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      var key    = peg$currPos * 49 + 28,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 91) {\r\n        s1 = peg$c7;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$parsearray_sep();\r\n        while (s3 !== peg$FAILED) {\r\n          s2.push(s3);\r\n          s3 = peg$parsearray_sep();\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 93) {\r\n            s3 = peg$c9;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c10); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$reportedPos = s0;\r\n            s1 = peg$c57();\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 91) {\r\n          s1 = peg$c7;\r\n          peg$currPos++;\r\n        } else {\r\n          s1 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = peg$parsearray_value();\r\n          if (s2 === peg$FAILED) {\r\n            s2 = peg$c25;\r\n          }\r\n          if (s2 !== peg$FAILED) {\r\n            if (input.charCodeAt(peg$currPos) === 93) {\r\n              s3 = peg$c9;\r\n              peg$currPos++;\r\n            } else {\r\n              s3 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c10); }\r\n            }\r\n            if (s3 !== peg$FAILED) {\r\n              peg$reportedPos = s0;\r\n              s1 = peg$c58(s2);\r\n              s0 = s1;\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$currPos;\r\n          if (input.charCodeAt(peg$currPos) === 91) {\r\n            s1 = peg$c7;\r\n            peg$currPos++;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            s2 = [];\r\n            s3 = peg$parsearray_value_list();\r\n            if (s3 !== peg$FAILED) {\r\n              while (s3 !== peg$FAILED) {\r\n                s2.push(s3);\r\n                s3 = peg$parsearray_value_list();\r\n              }\r\n            } else {\r\n              s2 = peg$c2;\r\n            }\r\n            if (s2 !== peg$FAILED) {\r\n              if (input.charCodeAt(peg$currPos) === 93) {\r\n                s3 = peg$c9;\r\n                peg$currPos++;\r\n              } else {\r\n                s3 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c10); }\r\n              }\r\n              if (s3 !== peg$FAILED) {\r\n                peg$reportedPos = s0;\r\n                s1 = peg$c59(s2);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n          if (s0 === peg$FAILED) {\r\n            s0 = peg$currPos;\r\n            if (input.charCodeAt(peg$currPos) === 91) {\r\n              s1 = peg$c7;\r\n              peg$currPos++;\r\n            } else {\r\n              s1 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\r\n            }\r\n            if (s1 !== peg$FAILED) {\r\n              s2 = [];\r\n              s3 = peg$parsearray_value_list();\r\n              if (s3 !== peg$FAILED) {\r\n                while (s3 !== peg$FAILED) {\r\n                  s2.push(s3);\r\n                  s3 = peg$parsearray_value_list();\r\n                }\r\n              } else {\r\n                s2 = peg$c2;\r\n              }\r\n              if (s2 !== peg$FAILED) {\r\n                s3 = peg$parsearray_value();\r\n                if (s3 !== peg$FAILED) {\r\n                  if (input.charCodeAt(peg$currPos) === 93) {\r\n                    s4 = peg$c9;\r\n                    peg$currPos++;\r\n                  } else {\r\n                    s4 = peg$FAILED;\r\n                    if (peg$silentFails === 0) { peg$fail(peg$c10); }\r\n                  }\r\n                  if (s4 !== peg$FAILED) {\r\n                    peg$reportedPos = s0;\r\n                    s1 = peg$c60(s2, s3);\r\n                    s0 = s1;\r\n                  } else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$c2;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$c2;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsearray_value() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      var key    = peg$currPos * 49 + 29,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$parsearray_sep();\r\n      while (s2 !== peg$FAILED) {\r\n        s1.push(s2);\r\n        s2 = peg$parsearray_sep();\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parsevalue();\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = [];\r\n          s4 = peg$parsearray_sep();\r\n          while (s4 !== peg$FAILED) {\r\n            s3.push(s4);\r\n            s4 = peg$parsearray_sep();\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$reportedPos = s0;\r\n            s1 = peg$c61(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsearray_value_list() {\r\n      var s0, s1, s2, s3, s4, s5, s6;\r\n\r\n      var key    = peg$currPos * 49 + 30,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$parsearray_sep();\r\n      while (s2 !== peg$FAILED) {\r\n        s1.push(s2);\r\n        s2 = peg$parsearray_sep();\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parsevalue();\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = [];\r\n          s4 = peg$parsearray_sep();\r\n          while (s4 !== peg$FAILED) {\r\n            s3.push(s4);\r\n            s4 = peg$parsearray_sep();\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            if (input.charCodeAt(peg$currPos) === 44) {\r\n              s4 = peg$c62;\r\n              peg$currPos++;\r\n            } else {\r\n              s4 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c63); }\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = [];\r\n              s6 = peg$parsearray_sep();\r\n              while (s6 !== peg$FAILED) {\r\n                s5.push(s6);\r\n                s6 = peg$parsearray_sep();\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                peg$reportedPos = s0;\r\n                s1 = peg$c61(s2);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsearray_sep() {\r\n      var s0;\r\n\r\n      var key    = peg$currPos * 49 + 31,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$parseS();\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$parseNL();\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$parsecomment();\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseinline_table() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      var key    = peg$currPos * 49 + 32,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 123) {\r\n        s1 = peg$c64;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$parseS();\r\n        while (s3 !== peg$FAILED) {\r\n          s2.push(s3);\r\n          s3 = peg$parseS();\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = [];\r\n          s4 = peg$parseinline_table_assignment();\r\n          while (s4 !== peg$FAILED) {\r\n            s3.push(s4);\r\n            s4 = peg$parseinline_table_assignment();\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = [];\r\n            s5 = peg$parseS();\r\n            while (s5 !== peg$FAILED) {\r\n              s4.push(s5);\r\n              s5 = peg$parseS();\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              if (input.charCodeAt(peg$currPos) === 125) {\r\n                s5 = peg$c66;\r\n                peg$currPos++;\r\n              } else {\r\n                s5 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c67); }\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                peg$reportedPos = s0;\r\n                s1 = peg$c68(s3);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseinline_table_assignment() {\r\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\r\n\r\n      var key    = peg$currPos * 49 + 33,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$parseS();\r\n      while (s2 !== peg$FAILED) {\r\n        s1.push(s2);\r\n        s2 = peg$parseS();\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parsekey();\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = [];\r\n          s4 = peg$parseS();\r\n          while (s4 !== peg$FAILED) {\r\n            s3.push(s4);\r\n            s4 = peg$parseS();\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            if (input.charCodeAt(peg$currPos) === 61) {\r\n              s4 = peg$c18;\r\n              peg$currPos++;\r\n            } else {\r\n              s4 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c19); }\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = [];\r\n              s6 = peg$parseS();\r\n              while (s6 !== peg$FAILED) {\r\n                s5.push(s6);\r\n                s6 = peg$parseS();\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                s6 = peg$parsevalue();\r\n                if (s6 !== peg$FAILED) {\r\n                  s7 = [];\r\n                  s8 = peg$parseS();\r\n                  while (s8 !== peg$FAILED) {\r\n                    s7.push(s8);\r\n                    s8 = peg$parseS();\r\n                  }\r\n                  if (s7 !== peg$FAILED) {\r\n                    if (input.charCodeAt(peg$currPos) === 44) {\r\n                      s8 = peg$c62;\r\n                      peg$currPos++;\r\n                    } else {\r\n                      s8 = peg$FAILED;\r\n                      if (peg$silentFails === 0) { peg$fail(peg$c63); }\r\n                    }\r\n                    if (s8 !== peg$FAILED) {\r\n                      s9 = [];\r\n                      s10 = peg$parseS();\r\n                      while (s10 !== peg$FAILED) {\r\n                        s9.push(s10);\r\n                        s10 = peg$parseS();\r\n                      }\r\n                      if (s9 !== peg$FAILED) {\r\n                        peg$reportedPos = s0;\r\n                        s1 = peg$c69(s2, s6);\r\n                        s0 = s1;\r\n                      } else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$c2;\r\n                      }\r\n                    } else {\r\n                      peg$currPos = s0;\r\n                      s0 = peg$c2;\r\n                    }\r\n                  } else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$c2;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$c2;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = [];\r\n        s2 = peg$parseS();\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          s2 = peg$parseS();\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = peg$parsekey();\r\n          if (s2 !== peg$FAILED) {\r\n            s3 = [];\r\n            s4 = peg$parseS();\r\n            while (s4 !== peg$FAILED) {\r\n              s3.push(s4);\r\n              s4 = peg$parseS();\r\n            }\r\n            if (s3 !== peg$FAILED) {\r\n              if (input.charCodeAt(peg$currPos) === 61) {\r\n                s4 = peg$c18;\r\n                peg$currPos++;\r\n              } else {\r\n                s4 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c19); }\r\n              }\r\n              if (s4 !== peg$FAILED) {\r\n                s5 = [];\r\n                s6 = peg$parseS();\r\n                while (s6 !== peg$FAILED) {\r\n                  s5.push(s6);\r\n                  s6 = peg$parseS();\r\n                }\r\n                if (s5 !== peg$FAILED) {\r\n                  s6 = peg$parsevalue();\r\n                  if (s6 !== peg$FAILED) {\r\n                    peg$reportedPos = s0;\r\n                    s1 = peg$c69(s2, s6);\r\n                    s0 = s1;\r\n                  } else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$c2;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$c2;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsesecfragment() {\r\n      var s0, s1, s2;\r\n\r\n      var key    = peg$currPos * 49 + 34,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.charCodeAt(peg$currPos) === 46) {\r\n        s1 = peg$c16;\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c17); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parseDIGITS();\r\n        if (s2 !== peg$FAILED) {\r\n          peg$reportedPos = s0;\r\n          s1 = peg$c70(s2);\r\n          s0 = s1;\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsedate() {\r\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\r\n\r\n      var key    = peg$currPos * 49 + 35,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$currPos;\r\n      s2 = peg$parseDIGIT_OR_UNDER();\r\n      if (s2 !== peg$FAILED) {\r\n        s3 = peg$parseDIGIT_OR_UNDER();\r\n        if (s3 !== peg$FAILED) {\r\n          s4 = peg$parseDIGIT_OR_UNDER();\r\n          if (s4 !== peg$FAILED) {\r\n            s5 = peg$parseDIGIT_OR_UNDER();\r\n            if (s5 !== peg$FAILED) {\r\n              if (input.charCodeAt(peg$currPos) === 45) {\r\n                s6 = peg$c47;\r\n                peg$currPos++;\r\n              } else {\r\n                s6 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c48); }\r\n              }\r\n              if (s6 !== peg$FAILED) {\r\n                s7 = peg$parseDIGIT_OR_UNDER();\r\n                if (s7 !== peg$FAILED) {\r\n                  s8 = peg$parseDIGIT_OR_UNDER();\r\n                  if (s8 !== peg$FAILED) {\r\n                    if (input.charCodeAt(peg$currPos) === 45) {\r\n                      s9 = peg$c47;\r\n                      peg$currPos++;\r\n                    } else {\r\n                      s9 = peg$FAILED;\r\n                      if (peg$silentFails === 0) { peg$fail(peg$c48); }\r\n                    }\r\n                    if (s9 !== peg$FAILED) {\r\n                      s10 = peg$parseDIGIT_OR_UNDER();\r\n                      if (s10 !== peg$FAILED) {\r\n                        s11 = peg$parseDIGIT_OR_UNDER();\r\n                        if (s11 !== peg$FAILED) {\r\n                          s2 = [s2, s3, s4, s5, s6, s7, s8, s9, s10, s11];\r\n                          s1 = s2;\r\n                        } else {\r\n                          peg$currPos = s1;\r\n                          s1 = peg$c2;\r\n                        }\r\n                      } else {\r\n                        peg$currPos = s1;\r\n                        s1 = peg$c2;\r\n                      }\r\n                    } else {\r\n                      peg$currPos = s1;\r\n                      s1 = peg$c2;\r\n                    }\r\n                  } else {\r\n                    peg$currPos = s1;\r\n                    s1 = peg$c2;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s1;\r\n                  s1 = peg$c2;\r\n                }\r\n              } else {\r\n                peg$currPos = s1;\r\n                s1 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s1;\r\n              s1 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s1;\r\n            s1 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s1;\r\n          s1 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s1;\r\n        s1 = peg$c2;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$reportedPos = s0;\r\n        s1 = peg$c71(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsetime() {\r\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\r\n\r\n      var key    = peg$currPos * 49 + 36,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$currPos;\r\n      s2 = peg$parseDIGIT_OR_UNDER();\r\n      if (s2 !== peg$FAILED) {\r\n        s3 = peg$parseDIGIT_OR_UNDER();\r\n        if (s3 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 58) {\r\n            s4 = peg$c72;\r\n            peg$currPos++;\r\n          } else {\r\n            s4 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c73); }\r\n          }\r\n          if (s4 !== peg$FAILED) {\r\n            s5 = peg$parseDIGIT_OR_UNDER();\r\n            if (s5 !== peg$FAILED) {\r\n              s6 = peg$parseDIGIT_OR_UNDER();\r\n              if (s6 !== peg$FAILED) {\r\n                if (input.charCodeAt(peg$currPos) === 58) {\r\n                  s7 = peg$c72;\r\n                  peg$currPos++;\r\n                } else {\r\n                  s7 = peg$FAILED;\r\n                  if (peg$silentFails === 0) { peg$fail(peg$c73); }\r\n                }\r\n                if (s7 !== peg$FAILED) {\r\n                  s8 = peg$parseDIGIT_OR_UNDER();\r\n                  if (s8 !== peg$FAILED) {\r\n                    s9 = peg$parseDIGIT_OR_UNDER();\r\n                    if (s9 !== peg$FAILED) {\r\n                      s10 = peg$parsesecfragment();\r\n                      if (s10 === peg$FAILED) {\r\n                        s10 = peg$c25;\r\n                      }\r\n                      if (s10 !== peg$FAILED) {\r\n                        s2 = [s2, s3, s4, s5, s6, s7, s8, s9, s10];\r\n                        s1 = s2;\r\n                      } else {\r\n                        peg$currPos = s1;\r\n                        s1 = peg$c2;\r\n                      }\r\n                    } else {\r\n                      peg$currPos = s1;\r\n                      s1 = peg$c2;\r\n                    }\r\n                  } else {\r\n                    peg$currPos = s1;\r\n                    s1 = peg$c2;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s1;\r\n                  s1 = peg$c2;\r\n                }\r\n              } else {\r\n                peg$currPos = s1;\r\n                s1 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s1;\r\n              s1 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s1;\r\n            s1 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s1;\r\n          s1 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s1;\r\n        s1 = peg$c2;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$reportedPos = s0;\r\n        s1 = peg$c74(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsetime_with_offset() {\r\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16;\r\n\r\n      var key    = peg$currPos * 49 + 37,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$currPos;\r\n      s2 = peg$parseDIGIT_OR_UNDER();\r\n      if (s2 !== peg$FAILED) {\r\n        s3 = peg$parseDIGIT_OR_UNDER();\r\n        if (s3 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 58) {\r\n            s4 = peg$c72;\r\n            peg$currPos++;\r\n          } else {\r\n            s4 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c73); }\r\n          }\r\n          if (s4 !== peg$FAILED) {\r\n            s5 = peg$parseDIGIT_OR_UNDER();\r\n            if (s5 !== peg$FAILED) {\r\n              s6 = peg$parseDIGIT_OR_UNDER();\r\n              if (s6 !== peg$FAILED) {\r\n                if (input.charCodeAt(peg$currPos) === 58) {\r\n                  s7 = peg$c72;\r\n                  peg$currPos++;\r\n                } else {\r\n                  s7 = peg$FAILED;\r\n                  if (peg$silentFails === 0) { peg$fail(peg$c73); }\r\n                }\r\n                if (s7 !== peg$FAILED) {\r\n                  s8 = peg$parseDIGIT_OR_UNDER();\r\n                  if (s8 !== peg$FAILED) {\r\n                    s9 = peg$parseDIGIT_OR_UNDER();\r\n                    if (s9 !== peg$FAILED) {\r\n                      s10 = peg$parsesecfragment();\r\n                      if (s10 === peg$FAILED) {\r\n                        s10 = peg$c25;\r\n                      }\r\n                      if (s10 !== peg$FAILED) {\r\n                        if (input.charCodeAt(peg$currPos) === 45) {\r\n                          s11 = peg$c47;\r\n                          peg$currPos++;\r\n                        } else {\r\n                          s11 = peg$FAILED;\r\n                          if (peg$silentFails === 0) { peg$fail(peg$c48); }\r\n                        }\r\n                        if (s11 === peg$FAILED) {\r\n                          if (input.charCodeAt(peg$currPos) === 43) {\r\n                            s11 = peg$c44;\r\n                            peg$currPos++;\r\n                          } else {\r\n                            s11 = peg$FAILED;\r\n                            if (peg$silentFails === 0) { peg$fail(peg$c45); }\r\n                          }\r\n                        }\r\n                        if (s11 !== peg$FAILED) {\r\n                          s12 = peg$parseDIGIT_OR_UNDER();\r\n                          if (s12 !== peg$FAILED) {\r\n                            s13 = peg$parseDIGIT_OR_UNDER();\r\n                            if (s13 !== peg$FAILED) {\r\n                              if (input.charCodeAt(peg$currPos) === 58) {\r\n                                s14 = peg$c72;\r\n                                peg$currPos++;\r\n                              } else {\r\n                                s14 = peg$FAILED;\r\n                                if (peg$silentFails === 0) { peg$fail(peg$c73); }\r\n                              }\r\n                              if (s14 !== peg$FAILED) {\r\n                                s15 = peg$parseDIGIT_OR_UNDER();\r\n                                if (s15 !== peg$FAILED) {\r\n                                  s16 = peg$parseDIGIT_OR_UNDER();\r\n                                  if (s16 !== peg$FAILED) {\r\n                                    s2 = [s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16];\r\n                                    s1 = s2;\r\n                                  } else {\r\n                                    peg$currPos = s1;\r\n                                    s1 = peg$c2;\r\n                                  }\r\n                                } else {\r\n                                  peg$currPos = s1;\r\n                                  s1 = peg$c2;\r\n                                }\r\n                              } else {\r\n                                peg$currPos = s1;\r\n                                s1 = peg$c2;\r\n                              }\r\n                            } else {\r\n                              peg$currPos = s1;\r\n                              s1 = peg$c2;\r\n                            }\r\n                          } else {\r\n                            peg$currPos = s1;\r\n                            s1 = peg$c2;\r\n                          }\r\n                        } else {\r\n                          peg$currPos = s1;\r\n                          s1 = peg$c2;\r\n                        }\r\n                      } else {\r\n                        peg$currPos = s1;\r\n                        s1 = peg$c2;\r\n                      }\r\n                    } else {\r\n                      peg$currPos = s1;\r\n                      s1 = peg$c2;\r\n                    }\r\n                  } else {\r\n                    peg$currPos = s1;\r\n                    s1 = peg$c2;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s1;\r\n                  s1 = peg$c2;\r\n                }\r\n              } else {\r\n                peg$currPos = s1;\r\n                s1 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s1;\r\n              s1 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s1;\r\n            s1 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s1;\r\n          s1 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s1;\r\n        s1 = peg$c2;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$reportedPos = s0;\r\n        s1 = peg$c74(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parsedatetime() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      var key    = peg$currPos * 49 + 38,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parsedate();\r\n      if (s1 !== peg$FAILED) {\r\n        if (input.charCodeAt(peg$currPos) === 84) {\r\n          s2 = peg$c75;\r\n          peg$currPos++;\r\n        } else {\r\n          s2 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c76); }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = peg$parsetime();\r\n          if (s3 !== peg$FAILED) {\r\n            if (input.charCodeAt(peg$currPos) === 90) {\r\n              s4 = peg$c77;\r\n              peg$currPos++;\r\n            } else {\r\n              s4 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c78); }\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              peg$reportedPos = s0;\r\n              s1 = peg$c79(s1, s3);\r\n              s0 = s1;\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = peg$parsedate();\r\n        if (s1 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 84) {\r\n            s2 = peg$c75;\r\n            peg$currPos++;\r\n          } else {\r\n            s2 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c76); }\r\n          }\r\n          if (s2 !== peg$FAILED) {\r\n            s3 = peg$parsetime_with_offset();\r\n            if (s3 !== peg$FAILED) {\r\n              peg$reportedPos = s0;\r\n              s1 = peg$c80(s1, s3);\r\n              s0 = s1;\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseS() {\r\n      var s0;\r\n\r\n      var key    = peg$currPos * 49 + 39,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      if (peg$c81.test(input.charAt(peg$currPos))) {\r\n        s0 = input.charAt(peg$currPos);\r\n        peg$currPos++;\r\n      } else {\r\n        s0 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c82); }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseNL() {\r\n      var s0, s1, s2;\r\n\r\n      var key    = peg$currPos * 49 + 40,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      if (input.charCodeAt(peg$currPos) === 10) {\r\n        s0 = peg$c83;\r\n        peg$currPos++;\r\n      } else {\r\n        s0 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c84); }\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 13) {\r\n          s1 = peg$c85;\r\n          peg$currPos++;\r\n        } else {\r\n          s1 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c86); }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 10) {\r\n            s2 = peg$c83;\r\n            peg$currPos++;\r\n          } else {\r\n            s2 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c84); }\r\n          }\r\n          if (s2 !== peg$FAILED) {\r\n            s1 = [s1, s2];\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseNLS() {\r\n      var s0;\r\n\r\n      var key    = peg$currPos * 49 + 41,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$parseNL();\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$parseS();\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseEOF() {\r\n      var s0, s1;\r\n\r\n      var key    = peg$currPos * 49 + 42,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      peg$silentFails++;\r\n      if (input.length > peg$currPos) {\r\n        s1 = input.charAt(peg$currPos);\r\n        peg$currPos++;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c6); }\r\n      }\r\n      peg$silentFails--;\r\n      if (s1 === peg$FAILED) {\r\n        s0 = peg$c5;\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseHEX() {\r\n      var s0;\r\n\r\n      var key    = peg$currPos * 49 + 43,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      if (peg$c87.test(input.charAt(peg$currPos))) {\r\n        s0 = input.charAt(peg$currPos);\r\n        peg$currPos++;\r\n      } else {\r\n        s0 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c88); }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseDIGIT_OR_UNDER() {\r\n      var s0, s1;\r\n\r\n      var key    = peg$currPos * 49 + 44,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      if (peg$c89.test(input.charAt(peg$currPos))) {\r\n        s0 = input.charAt(peg$currPos);\r\n        peg$currPos++;\r\n      } else {\r\n        s0 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c90); }\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 95) {\r\n          s1 = peg$c91;\r\n          peg$currPos++;\r\n        } else {\r\n          s1 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c92); }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          peg$reportedPos = s0;\r\n          s1 = peg$c93();\r\n        }\r\n        s0 = s1;\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseASCII_BASIC() {\r\n      var s0;\r\n\r\n      var key    = peg$currPos * 49 + 45,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      if (peg$c94.test(input.charAt(peg$currPos))) {\r\n        s0 = input.charAt(peg$currPos);\r\n        peg$currPos++;\r\n      } else {\r\n        s0 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c95); }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseDIGITS() {\r\n      var s0, s1, s2;\r\n\r\n      var key    = peg$currPos * 49 + 46,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$parseDIGIT_OR_UNDER();\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          s2 = peg$parseDIGIT_OR_UNDER();\r\n        }\r\n      } else {\r\n        s1 = peg$c2;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$reportedPos = s0;\r\n        s1 = peg$c96(s1);\r\n      }\r\n      s0 = s1;\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseESCAPED() {\r\n      var s0, s1;\r\n\r\n      var key    = peg$currPos * 49 + 47,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.substr(peg$currPos, 2) === peg$c97) {\r\n        s1 = peg$c97;\r\n        peg$currPos += 2;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c98); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$reportedPos = s0;\r\n        s1 = peg$c99();\r\n      }\r\n      s0 = s1;\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        if (input.substr(peg$currPos, 2) === peg$c100) {\r\n          s1 = peg$c100;\r\n          peg$currPos += 2;\r\n        } else {\r\n          s1 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c101); }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          peg$reportedPos = s0;\r\n          s1 = peg$c102();\r\n        }\r\n        s0 = s1;\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$currPos;\r\n          if (input.substr(peg$currPos, 2) === peg$c103) {\r\n            s1 = peg$c103;\r\n            peg$currPos += 2;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c104); }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            peg$reportedPos = s0;\r\n            s1 = peg$c105();\r\n          }\r\n          s0 = s1;\r\n          if (s0 === peg$FAILED) {\r\n            s0 = peg$currPos;\r\n            if (input.substr(peg$currPos, 2) === peg$c106) {\r\n              s1 = peg$c106;\r\n              peg$currPos += 2;\r\n            } else {\r\n              s1 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c107); }\r\n            }\r\n            if (s1 !== peg$FAILED) {\r\n              peg$reportedPos = s0;\r\n              s1 = peg$c108();\r\n            }\r\n            s0 = s1;\r\n            if (s0 === peg$FAILED) {\r\n              s0 = peg$currPos;\r\n              if (input.substr(peg$currPos, 2) === peg$c109) {\r\n                s1 = peg$c109;\r\n                peg$currPos += 2;\r\n              } else {\r\n                s1 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c110); }\r\n              }\r\n              if (s1 !== peg$FAILED) {\r\n                peg$reportedPos = s0;\r\n                s1 = peg$c111();\r\n              }\r\n              s0 = s1;\r\n              if (s0 === peg$FAILED) {\r\n                s0 = peg$currPos;\r\n                if (input.substr(peg$currPos, 2) === peg$c112) {\r\n                  s1 = peg$c112;\r\n                  peg$currPos += 2;\r\n                } else {\r\n                  s1 = peg$FAILED;\r\n                  if (peg$silentFails === 0) { peg$fail(peg$c113); }\r\n                }\r\n                if (s1 !== peg$FAILED) {\r\n                  peg$reportedPos = s0;\r\n                  s1 = peg$c114();\r\n                }\r\n                s0 = s1;\r\n                if (s0 === peg$FAILED) {\r\n                  s0 = peg$currPos;\r\n                  if (input.substr(peg$currPos, 2) === peg$c115) {\r\n                    s1 = peg$c115;\r\n                    peg$currPos += 2;\r\n                  } else {\r\n                    s1 = peg$FAILED;\r\n                    if (peg$silentFails === 0) { peg$fail(peg$c116); }\r\n                  }\r\n                  if (s1 !== peg$FAILED) {\r\n                    peg$reportedPos = s0;\r\n                    s1 = peg$c117();\r\n                  }\r\n                  s0 = s1;\r\n                  if (s0 === peg$FAILED) {\r\n                    s0 = peg$parseESCAPED_UNICODE();\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseESCAPED_UNICODE() {\r\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\r\n\r\n      var key    = peg$currPos * 49 + 48,\r\n          cached = peg$cache[key];\r\n\r\n      if (cached) {\r\n        peg$currPos = cached.nextPos;\r\n        return cached.result;\r\n      }\r\n\r\n      s0 = peg$currPos;\r\n      if (input.substr(peg$currPos, 2) === peg$c118) {\r\n        s1 = peg$c118;\r\n        peg$currPos += 2;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c119); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$currPos;\r\n        s3 = peg$parseHEX();\r\n        if (s3 !== peg$FAILED) {\r\n          s4 = peg$parseHEX();\r\n          if (s4 !== peg$FAILED) {\r\n            s5 = peg$parseHEX();\r\n            if (s5 !== peg$FAILED) {\r\n              s6 = peg$parseHEX();\r\n              if (s6 !== peg$FAILED) {\r\n                s7 = peg$parseHEX();\r\n                if (s7 !== peg$FAILED) {\r\n                  s8 = peg$parseHEX();\r\n                  if (s8 !== peg$FAILED) {\r\n                    s9 = peg$parseHEX();\r\n                    if (s9 !== peg$FAILED) {\r\n                      s10 = peg$parseHEX();\r\n                      if (s10 !== peg$FAILED) {\r\n                        s3 = [s3, s4, s5, s6, s7, s8, s9, s10];\r\n                        s2 = s3;\r\n                      } else {\r\n                        peg$currPos = s2;\r\n                        s2 = peg$c2;\r\n                      }\r\n                    } else {\r\n                      peg$currPos = s2;\r\n                      s2 = peg$c2;\r\n                    }\r\n                  } else {\r\n                    peg$currPos = s2;\r\n                    s2 = peg$c2;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s2;\r\n                  s2 = peg$c2;\r\n                }\r\n              } else {\r\n                peg$currPos = s2;\r\n                s2 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s2;\r\n              s2 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s2;\r\n            s2 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s2;\r\n          s2 = peg$c2;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          peg$reportedPos = s0;\r\n          s1 = peg$c120(s2);\r\n          s0 = s1;\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$c2;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        if (input.substr(peg$currPos, 2) === peg$c121) {\r\n          s1 = peg$c121;\r\n          peg$currPos += 2;\r\n        } else {\r\n          s1 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c122); }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = peg$currPos;\r\n          s3 = peg$parseHEX();\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parseHEX();\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parseHEX();\r\n              if (s5 !== peg$FAILED) {\r\n                s6 = peg$parseHEX();\r\n                if (s6 !== peg$FAILED) {\r\n                  s3 = [s3, s4, s5, s6];\r\n                  s2 = s3;\r\n                } else {\r\n                  peg$currPos = s2;\r\n                  s2 = peg$c2;\r\n                }\r\n              } else {\r\n                peg$currPos = s2;\r\n                s2 = peg$c2;\r\n              }\r\n            } else {\r\n              peg$currPos = s2;\r\n              s2 = peg$c2;\r\n            }\r\n          } else {\r\n            peg$currPos = s2;\r\n            s2 = peg$c2;\r\n          }\r\n          if (s2 !== peg$FAILED) {\r\n            peg$reportedPos = s0;\r\n            s1 = peg$c120(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$c2;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$c2;\r\n        }\r\n      }\r\n\r\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\r\n\r\n      return s0;\r\n    }\r\n\r\n\r\n      var nodes = [];\r\n\r\n      function genError(err, line, col) {\r\n        var ex = new Error(err);\r\n        ex.line = line;\r\n        ex.column = col;\r\n        throw ex;\r\n      }\r\n\r\n      function addNode(node) {\r\n        nodes.push(node);\r\n      }\r\n\r\n      function node(type, value, line, column, key) {\r\n        var obj = { type: type, value: value, line: line(), column: column() };\r\n        if (key) obj.key = key;\r\n        return obj;\r\n      }\r\n\r\n      function convertCodePoint(str, line, col) {\r\n        var num = parseInt(\"0x\" + str);\r\n\r\n        if (\r\n          !isFinite(num) ||\r\n          Math.floor(num) != num ||\r\n          num < 0 ||\r\n          num > 0x10FFFF ||\r\n          (num > 0xD7FF && num < 0xE000)\r\n        ) {\r\n          genError(\"Invalid Unicode escape code: \" + str, line, col);\r\n        } else {\r\n          return fromCodePoint(num);\r\n        }\r\n      }\r\n\r\n      function fromCodePoint() {\r\n        var MAX_SIZE = 0x4000;\r\n        var codeUnits = [];\r\n        var highSurrogate;\r\n        var lowSurrogate;\r\n        var index = -1;\r\n        var length = arguments.length;\r\n        if (!length) {\r\n          return '';\r\n        }\r\n        var result = '';\r\n        while (++index < length) {\r\n          var codePoint = Number(arguments[index]);\r\n          if (codePoint <= 0xFFFF) { // BMP code point\r\n            codeUnits.push(codePoint);\r\n          } else { // Astral code point; split in surrogate halves\r\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\r\n            codePoint -= 0x10000;\r\n            highSurrogate = (codePoint >> 10) + 0xD800;\r\n            lowSurrogate = (codePoint % 0x400) + 0xDC00;\r\n            codeUnits.push(highSurrogate, lowSurrogate);\r\n          }\r\n          if (index + 1 == length || codeUnits.length > MAX_SIZE) {\r\n            result += String.fromCharCode.apply(null, codeUnits);\r\n            codeUnits.length = 0;\r\n          }\r\n        }\r\n        return result;\r\n      }\r\n\r\n\r\n    peg$result = peg$startRuleFunction();\r\n\r\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\r\n      return peg$result;\r\n    } else {\r\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\r\n        peg$fail({ type: \"end\", description: \"end of input\" });\r\n      }\r\n\r\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\r\n    }\r\n  }\r\n\r\n  return {\r\n    SyntaxError: SyntaxError,\r\n    parse:       parse\r\n  };\r\n})();\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","'use strict';\n\nvar resolve = require('./resolve');\n\nmodule.exports = {\n  Validation: errorSubclass(ValidationError),\n  MissingRef: errorSubclass(MissingRefError)\n};\n\n\nfunction ValidationError(errors) {\n  this.message = 'validation failed';\n  this.errors = errors;\n  this.ajv = this.validation = true;\n}\n\n\nMissingRefError.message = function (baseId, ref) {\n  return 'can\\'t resolve reference ' + ref + ' from id ' + baseId;\n};\n\n\nfunction MissingRefError(baseId, ref, message) {\n  this.message = message || MissingRefError.message(baseId, ref);\n  this.missingRef = resolve.url(baseId, ref);\n  this.missingSchema = resolve.normalizeId(resolve.fullPath(this.missingRef));\n}\n\n\nfunction errorSubclass(Subclass) {\n  Subclass.prototype = Object.create(Error.prototype);\n  Subclass.prototype.constructor = Subclass;\n  return Subclass;\n}\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","'use strict';\n\nvar URI = require('uri-js')\n  , equal = require('fast-deep-equal')\n  , util = require('./util')\n  , SchemaObject = require('./schema_obj')\n  , traverse = require('json-schema-traverse');\n\nmodule.exports = resolve;\n\nresolve.normalizeId = normalizeId;\nresolve.fullPath = getFullPath;\nresolve.url = resolveUrl;\nresolve.ids = resolveIds;\nresolve.inlineRef = inlineRef;\nresolve.schema = resolveSchema;\n\n/**\n * [resolve and compile the references ($ref)]\n * @this   Ajv\n * @param  {Function} compile reference to schema compilation funciton (localCompile)\n * @param  {Object} root object with information about the root schema for the current schema\n * @param  {String} ref reference to resolve\n * @return {Object|Function} schema object (if the schema can be inlined) or validation function\n */\nfunction resolve(compile, root, ref) {\n  /* jshint validthis: true */\n  var refVal = this._refs[ref];\n  if (typeof refVal == 'string') {\n    if (this._refs[refVal]) refVal = this._refs[refVal];\n    else return resolve.call(this, compile, root, refVal);\n  }\n\n  refVal = refVal || this._schemas[ref];\n  if (refVal instanceof SchemaObject) {\n    return inlineRef(refVal.schema, this._opts.inlineRefs)\n            ? refVal.schema\n            : refVal.validate || this._compile(refVal);\n  }\n\n  var res = resolveSchema.call(this, root, ref);\n  var schema, v, baseId;\n  if (res) {\n    schema = res.schema;\n    root = res.root;\n    baseId = res.baseId;\n  }\n\n  if (schema instanceof SchemaObject) {\n    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);\n  } else if (schema !== undefined) {\n    v = inlineRef(schema, this._opts.inlineRefs)\n        ? schema\n        : compile.call(this, schema, root, undefined, baseId);\n  }\n\n  return v;\n}\n\n\n/**\n * Resolve schema, its root and baseId\n * @this Ajv\n * @param  {Object} root root object with properties schema, refVal, refs\n * @param  {String} ref  reference to resolve\n * @return {Object} object with properties schema, root, baseId\n */\nfunction resolveSchema(root, ref) {\n  /* jshint validthis: true */\n  var p = URI.parse(ref)\n    , refPath = _getFullPath(p)\n    , baseId = getFullPath(this._getId(root.schema));\n  if (refPath !== baseId) {\n    var id = normalizeId(refPath);\n    var refVal = this._refs[id];\n    if (typeof refVal == 'string') {\n      return resolveRecursive.call(this, root, refVal, p);\n    } else if (refVal instanceof SchemaObject) {\n      if (!refVal.validate) this._compile(refVal);\n      root = refVal;\n    } else {\n      refVal = this._schemas[id];\n      if (refVal instanceof SchemaObject) {\n        if (!refVal.validate) this._compile(refVal);\n        if (id == normalizeId(ref))\n          return { schema: refVal, root: root, baseId: baseId };\n        root = refVal;\n      } else {\n        return;\n      }\n    }\n    if (!root.schema) return;\n    baseId = getFullPath(this._getId(root.schema));\n  }\n  return getJsonPointer.call(this, p, baseId, root.schema, root);\n}\n\n\n/* @this Ajv */\nfunction resolveRecursive(root, ref, parsedRef) {\n  /* jshint validthis: true */\n  var res = resolveSchema.call(this, root, ref);\n  if (res) {\n    var schema = res.schema;\n    var baseId = res.baseId;\n    root = res.root;\n    var id = this._getId(schema);\n    if (id) baseId = resolveUrl(baseId, id);\n    return getJsonPointer.call(this, parsedRef, baseId, schema, root);\n  }\n}\n\n\nvar PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies', 'definitions']);\n/* @this Ajv */\nfunction getJsonPointer(parsedRef, baseId, schema, root) {\n  /* jshint validthis: true */\n  parsedRef.fragment = parsedRef.fragment || '';\n  if (parsedRef.fragment.slice(0,1) != '/') return;\n  var parts = parsedRef.fragment.split('/');\n\n  for (var i = 1; i < parts.length; i++) {\n    var part = parts[i];\n    if (part) {\n      part = util.unescapeFragment(part);\n      schema = schema[part];\n      if (schema === undefined) break;\n      var id;\n      if (!PREVENT_SCOPE_CHANGE[part]) {\n        id = this._getId(schema);\n        if (id) baseId = resolveUrl(baseId, id);\n        if (schema.$ref) {\n          var $ref = resolveUrl(baseId, schema.$ref);\n          var res = resolveSchema.call(this, root, $ref);\n          if (res) {\n            schema = res.schema;\n            root = res.root;\n            baseId = res.baseId;\n          }\n        }\n      }\n    }\n  }\n  if (schema !== undefined && schema !== root.schema)\n    return { schema: schema, root: root, baseId: baseId };\n}\n\n\nvar SIMPLE_INLINED = util.toHash([\n  'type', 'format', 'pattern',\n  'maxLength', 'minLength',\n  'maxProperties', 'minProperties',\n  'maxItems', 'minItems',\n  'maximum', 'minimum',\n  'uniqueItems', 'multipleOf',\n  'required', 'enum'\n]);\nfunction inlineRef(schema, limit) {\n  if (limit === false) return false;\n  if (limit === undefined || limit === true) return checkNoRef(schema);\n  else if (limit) return countKeys(schema) <= limit;\n}\n\n\nfunction checkNoRef(schema) {\n  var item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return false;\n      item = schema[key];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  }\n  return true;\n}\n\n\nfunction countKeys(schema) {\n  var count = 0, item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object') count += countKeys(item);\n      if (count == Infinity) return Infinity;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return Infinity;\n      if (SIMPLE_INLINED[key]) {\n        count++;\n      } else {\n        item = schema[key];\n        if (typeof item == 'object') count += countKeys(item) + 1;\n        if (count == Infinity) return Infinity;\n      }\n    }\n  }\n  return count;\n}\n\n\nfunction getFullPath(id, normalize) {\n  if (normalize !== false) id = normalizeId(id);\n  var p = URI.parse(id);\n  return _getFullPath(p);\n}\n\n\nfunction _getFullPath(p) {\n  return URI.serialize(p).split('#')[0] + '#';\n}\n\n\nvar TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n  return id ? id.replace(TRAILING_SLASH_HASH, '') : '';\n}\n\n\nfunction resolveUrl(baseId, id) {\n  id = normalizeId(id);\n  return URI.resolve(baseId, id);\n}\n\n\n/* @this Ajv */\nfunction resolveIds(schema) {\n  var schemaId = normalizeId(this._getId(schema));\n  var baseIds = {'': schemaId};\n  var fullPaths = {'': getFullPath(schemaId, false)};\n  var localRefs = {};\n  var self = this;\n\n  traverse(schema, {allKeys: true}, function(sch, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n    if (jsonPtr === '') return;\n    var id = self._getId(sch);\n    var baseId = baseIds[parentJsonPtr];\n    var fullPath = fullPaths[parentJsonPtr] + '/' + parentKeyword;\n    if (keyIndex !== undefined)\n      fullPath += '/' + (typeof keyIndex == 'number' ? keyIndex : util.escapeFragment(keyIndex));\n\n    if (typeof id == 'string') {\n      id = baseId = normalizeId(baseId ? URI.resolve(baseId, id) : id);\n\n      var refVal = self._refs[id];\n      if (typeof refVal == 'string') refVal = self._refs[refVal];\n      if (refVal && refVal.schema) {\n        if (!equal(sch, refVal.schema))\n          throw new Error('id \"' + id + '\" resolves to more than one schema');\n      } else if (id != normalizeId(fullPath)) {\n        if (id[0] == '#') {\n          if (localRefs[id] && !equal(sch, localRefs[id]))\n            throw new Error('id \"' + id + '\" resolves to more than one schema');\n          localRefs[id] = sch;\n        } else {\n          self._refs[id] = fullPath;\n        }\n      }\n    }\n    baseIds[jsonPtr] = baseId;\n    fullPaths[jsonPtr] = fullPath;\n  });\n\n  return localRefs;\n}\n","'use strict';\nmodule.exports = function generate__limitProperties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxProperties' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' Object.keys(' + ($data) + ').length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxProperties') {\n        out += 'more';\n      } else {\n        out += 'less';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' properties\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitLength(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxLength' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  if (it.opts.unicode === false) {\n    out += ' ' + ($data) + '.length ';\n  } else {\n    out += ' ucs2length(' + ($data) + ') ';\n  }\n  out += ' ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitLength') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT be ';\n      if ($keyword == 'maxLength') {\n        out += 'longer';\n      } else {\n        out += 'shorter';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' characters\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxItems' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxItems') {\n        out += 'more';\n      } else {\n        out += 'less';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' items\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limit(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $isMax = $keyword == 'maximum',\n    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $notOp = $isMax ? '>' : '<',\n    $errorKeyword = undefined;\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $exclType = 'exclType' + $lvl,\n      $exclIsNumber = 'exclIsNumber' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' var ' + ($exclusive) + '; var ' + ($exclType) + ' = typeof ' + ($schemaValueExcl) + '; if (' + ($exclType) + ' != \\'boolean\\' && ' + ($exclType) + ' != \\'undefined\\' && ' + ($exclType) + ' != \\'number\\') { ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_exclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else if ( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ' + ($exclType) + ' == \\'number\\' ? ( (' + ($exclusive) + ' = ' + ($schemaValue) + ' === undefined || ' + ($schemaValueExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ') ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValueExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) : ( (' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\'; ';\n    if ($schema === undefined) {\n      $errorKeyword = $exclusiveKeyword;\n      $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n      $schemaValue = $schemaValueExcl;\n      $isData = $isDataExcl;\n    }\n  } else {\n    var $exclIsNumber = typeof $schemaExcl == 'number',\n      $opStr = $op;\n    if ($exclIsNumber && $isData) {\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ( ' + ($schemaValue) + ' === undefined || ' + ($schemaExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ' ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { ';\n    } else {\n      if ($exclIsNumber && $schema === undefined) {\n        $exclusive = true;\n        $errorKeyword = $exclusiveKeyword;\n        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n        $schemaValue = $schemaExcl;\n        $notOp += '=';\n      } else {\n        if ($exclIsNumber) $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);\n        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {\n          $exclusive = true;\n          $errorKeyword = $exclusiveKeyword;\n          $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n          $notOp += '=';\n        } else {\n          $exclusive = false;\n          $opStr += '=';\n        }\n      }\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') { ';\n    }\n  }\n  $errorKeyword = $errorKeyword || $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.isTop) {\n    out += ' var validate = ';\n    if ($async) {\n      it.async = true;\n      out += 'async ';\n    }\n    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + ($valid) + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + ($valid) + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }; return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [undefined];\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if (it.schema.$comment && it.opts.$comment) {\n    out += ' ' + (it.RULES.all.$comment.code(it, '$comment'));\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \\'array\\'; ';\n        }\n        out += ' var ' + ($coerced) + ' = undefined; ';\n        var $bracesCoercion = '';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($i) {\n              out += ' if (' + ($coerced) + ' === undefined) { ';\n              $bracesCoercion += '}';\n            }\n            if (it.opts.coerceTypes == 'array' && $type != 'array') {\n              out += ' if (' + ($dataType) + ' == \\'array\\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';\n            }\n            if ($type == 'string') {\n              out += ' if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + ($data) + ' % 1)';\n              }\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n            } else if ($type == 'boolean') {\n              out += ' if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n            }\n          }\n        }\n        out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else {  ';\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + ($parentData) + ' !== undefined)';\n        }\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';\n          }\n          if (it.opts.useDefaults && !it.compositeRule) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + ($code) + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }; return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n  out = it.util.cleanUpCode(out);\n  if ($top) {\n    out = it.util.finalCleanUpCode(out, $async);\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++)\n      if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImplementsSomeKeyword($rule));\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++)\n      if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n}\n","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","'use strict';\n\nvar util = require('./util');\n\nmodule.exports = SchemaObject;\n\nfunction SchemaObject(obj) {\n  util.copy(obj, this);\n}\n","'use strict';\n\nvar compileSchema = require('./compile')\n  , resolve = require('./compile/resolve')\n  , Cache = require('./cache')\n  , SchemaObject = require('./compile/schema_obj')\n  , stableStringify = require('fast-json-stable-stringify')\n  , formats = require('./compile/formats')\n  , rules = require('./compile/rules')\n  , $dataMetaSchema = require('./data')\n  , util = require('./compile/util');\n\nmodule.exports = Ajv;\n\nAjv.prototype.validate = validate;\nAjv.prototype.compile = compile;\nAjv.prototype.addSchema = addSchema;\nAjv.prototype.addMetaSchema = addMetaSchema;\nAjv.prototype.validateSchema = validateSchema;\nAjv.prototype.getSchema = getSchema;\nAjv.prototype.removeSchema = removeSchema;\nAjv.prototype.addFormat = addFormat;\nAjv.prototype.errorsText = errorsText;\n\nAjv.prototype._addSchema = _addSchema;\nAjv.prototype._compile = _compile;\n\nAjv.prototype.compileAsync = require('./compile/async');\nvar customKeyword = require('./keyword');\nAjv.prototype.addKeyword = customKeyword.add;\nAjv.prototype.getKeyword = customKeyword.get;\nAjv.prototype.removeKeyword = customKeyword.remove;\n\nvar errorClasses = require('./compile/error_classes');\nAjv.ValidationError = errorClasses.Validation;\nAjv.MissingRefError = errorClasses.MissingRef;\nAjv.$dataMetaSchema = $dataMetaSchema;\n\nvar META_SCHEMA_ID = 'http://json-schema.org/draft-07/schema';\n\nvar META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes' ];\nvar META_SUPPORT_DATA = ['/properties'];\n\n/**\n * Creates validator instance.\n * Usage: `Ajv(opts)`\n * @param {Object} opts optional options\n * @return {Object} ajv instance\n */\nfunction Ajv(opts) {\n  if (!(this instanceof Ajv)) return new Ajv(opts);\n  opts = this._opts = util.copy(opts) || {};\n  setLogger(this);\n  this._schemas = {};\n  this._refs = {};\n  this._fragments = {};\n  this._formats = formats(opts.format);\n  var schemaUriFormat = this._schemaUriFormat = this._formats['uri-reference'];\n  this._schemaUriFormatFunc = function (str) { return schemaUriFormat.test(str); };\n\n  this._cache = opts.cache || new Cache;\n  this._loadingSchemas = {};\n  this._compilations = [];\n  this.RULES = rules();\n  this._getId = chooseGetId(opts);\n\n  opts.loopRequired = opts.loopRequired || Infinity;\n  if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;\n  if (opts.serialize === undefined) opts.serialize = stableStringify;\n  this._metaOpts = getMetaSchemaOptions(this);\n\n  if (opts.formats) addInitialFormats(this);\n  addDraft6MetaSchema(this);\n  if (typeof opts.meta == 'object') this.addMetaSchema(opts.meta);\n  addInitialSchemas(this);\n}\n\n\n\n/**\n * Validate data using schema\n * Schema will be compiled and cached (using serialized JSON as key. [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) is used to serialize.\n * @this   Ajv\n * @param  {String|Object} schemaKeyRef key, ref or schema object\n * @param  {Any} data to be validated\n * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).\n */\nfunction validate(schemaKeyRef, data) {\n  var v;\n  if (typeof schemaKeyRef == 'string') {\n    v = this.getSchema(schemaKeyRef);\n    if (!v) throw new Error('no schema with key or ref \"' + schemaKeyRef + '\"');\n  } else {\n    var schemaObj = this._addSchema(schemaKeyRef);\n    v = schemaObj.validate || this._compile(schemaObj);\n  }\n\n  var valid = v(data);\n  if (v.$async !== true) this.errors = v.errors;\n  return valid;\n}\n\n\n/**\n * Create validating function for passed schema.\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.\n * @return {Function} validating function\n */\nfunction compile(schema, _meta) {\n  var schemaObj = this._addSchema(schema, undefined, _meta);\n  return schemaObj.validate || this._compile(schemaObj);\n}\n\n\n/**\n * Adds schema to the instance.\n * @this   Ajv\n * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.\n * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.\n * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n * @return {Ajv} this for method chaining\n */\nfunction addSchema(schema, key, _skipValidation, _meta) {\n  if (Array.isArray(schema)){\n    for (var i=0; i<schema.length; i++) this.addSchema(schema[i], undefined, _skipValidation, _meta);\n    return this;\n  }\n  var id = this._getId(schema);\n  if (id !== undefined && typeof id != 'string')\n    throw new Error('schema id must be string');\n  key = resolve.normalizeId(key || id);\n  checkUnique(this, key);\n  this._schemas[key] = this._addSchema(schema, _skipValidation, _meta, true);\n  return this;\n}\n\n\n/**\n * Add schema that will be used to validate other schemas\n * options in META_IGNORE_OPTIONS are alway set to false\n * @this   Ajv\n * @param {Object} schema schema object\n * @param {String} key optional schema key\n * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema\n * @return {Ajv} this for method chaining\n */\nfunction addMetaSchema(schema, key, skipValidation) {\n  this.addSchema(schema, key, skipValidation, true);\n  return this;\n}\n\n\n/**\n * Validate schema\n * @this   Ajv\n * @param {Object} schema schema to validate\n * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid\n * @return {Boolean} true if schema is valid\n */\nfunction validateSchema(schema, throwOrLogError) {\n  var $schema = schema.$schema;\n  if ($schema !== undefined && typeof $schema != 'string')\n    throw new Error('$schema must be a string');\n  $schema = $schema || this._opts.defaultMeta || defaultMeta(this);\n  if (!$schema) {\n    this.logger.warn('meta-schema not available');\n    this.errors = null;\n    return true;\n  }\n  var currentUriFormat = this._formats.uri;\n  this._formats.uri = typeof currentUriFormat == 'function'\n                      ? this._schemaUriFormatFunc\n                      : this._schemaUriFormat;\n  var valid;\n  try { valid = this.validate($schema, schema); }\n  finally { this._formats.uri = currentUriFormat; }\n  if (!valid && throwOrLogError) {\n    var message = 'schema is invalid: ' + this.errorsText();\n    if (this._opts.validateSchema == 'log') this.logger.error(message);\n    else throw new Error(message);\n  }\n  return valid;\n}\n\n\nfunction defaultMeta(self) {\n  var meta = self._opts.meta;\n  self._opts.defaultMeta = typeof meta == 'object'\n                            ? self._getId(meta) || meta\n                            : self.getSchema(META_SCHEMA_ID)\n                              ? META_SCHEMA_ID\n                              : undefined;\n  return self._opts.defaultMeta;\n}\n\n\n/**\n * Get compiled schema from the instance by `key` or `ref`.\n * @this   Ajv\n * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).\n * @return {Function} schema validating function (with property `schema`).\n */\nfunction getSchema(keyRef) {\n  var schemaObj = _getSchemaObj(this, keyRef);\n  switch (typeof schemaObj) {\n    case 'object': return schemaObj.validate || this._compile(schemaObj);\n    case 'string': return this.getSchema(schemaObj);\n    case 'undefined': return _getSchemaFragment(this, keyRef);\n  }\n}\n\n\nfunction _getSchemaFragment(self, ref) {\n  var res = resolve.schema.call(self, { schema: {} }, ref);\n  if (res) {\n    var schema = res.schema\n      , root = res.root\n      , baseId = res.baseId;\n    var v = compileSchema.call(self, schema, root, undefined, baseId);\n    self._fragments[ref] = new SchemaObject({\n      ref: ref,\n      fragment: true,\n      schema: schema,\n      root: root,\n      baseId: baseId,\n      validate: v\n    });\n    return v;\n  }\n}\n\n\nfunction _getSchemaObj(self, keyRef) {\n  keyRef = resolve.normalizeId(keyRef);\n  return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];\n}\n\n\n/**\n * Remove cached schema(s).\n * If no parameter is passed all schemas but meta-schemas are removed.\n * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n * @this   Ajv\n * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object\n * @return {Ajv} this for method chaining\n */\nfunction removeSchema(schemaKeyRef) {\n  if (schemaKeyRef instanceof RegExp) {\n    _removeAllSchemas(this, this._schemas, schemaKeyRef);\n    _removeAllSchemas(this, this._refs, schemaKeyRef);\n    return this;\n  }\n  switch (typeof schemaKeyRef) {\n    case 'undefined':\n      _removeAllSchemas(this, this._schemas);\n      _removeAllSchemas(this, this._refs);\n      this._cache.clear();\n      return this;\n    case 'string':\n      var schemaObj = _getSchemaObj(this, schemaKeyRef);\n      if (schemaObj) this._cache.del(schemaObj.cacheKey);\n      delete this._schemas[schemaKeyRef];\n      delete this._refs[schemaKeyRef];\n      return this;\n    case 'object':\n      var serialize = this._opts.serialize;\n      var cacheKey = serialize ? serialize(schemaKeyRef) : schemaKeyRef;\n      this._cache.del(cacheKey);\n      var id = this._getId(schemaKeyRef);\n      if (id) {\n        id = resolve.normalizeId(id);\n        delete this._schemas[id];\n        delete this._refs[id];\n      }\n  }\n  return this;\n}\n\n\nfunction _removeAllSchemas(self, schemas, regex) {\n  for (var keyRef in schemas) {\n    var schemaObj = schemas[keyRef];\n    if (!schemaObj.meta && (!regex || regex.test(keyRef))) {\n      self._cache.del(schemaObj.cacheKey);\n      delete schemas[keyRef];\n    }\n  }\n}\n\n\n/* @this   Ajv */\nfunction _addSchema(schema, skipValidation, meta, shouldAddSchema) {\n  if (typeof schema != 'object' && typeof schema != 'boolean')\n    throw new Error('schema should be object or boolean');\n  var serialize = this._opts.serialize;\n  var cacheKey = serialize ? serialize(schema) : schema;\n  var cached = this._cache.get(cacheKey);\n  if (cached) return cached;\n\n  shouldAddSchema = shouldAddSchema || this._opts.addUsedSchema !== false;\n\n  var id = resolve.normalizeId(this._getId(schema));\n  if (id && shouldAddSchema) checkUnique(this, id);\n\n  var willValidate = this._opts.validateSchema !== false && !skipValidation;\n  var recursiveMeta;\n  if (willValidate && !(recursiveMeta = id && id == resolve.normalizeId(schema.$schema)))\n    this.validateSchema(schema, true);\n\n  var localRefs = resolve.ids.call(this, schema);\n\n  var schemaObj = new SchemaObject({\n    id: id,\n    schema: schema,\n    localRefs: localRefs,\n    cacheKey: cacheKey,\n    meta: meta\n  });\n\n  if (id[0] != '#' && shouldAddSchema) this._refs[id] = schemaObj;\n  this._cache.put(cacheKey, schemaObj);\n\n  if (willValidate && recursiveMeta) this.validateSchema(schema, true);\n\n  return schemaObj;\n}\n\n\n/* @this   Ajv */\nfunction _compile(schemaObj, root) {\n  if (schemaObj.compiling) {\n    schemaObj.validate = callValidate;\n    callValidate.schema = schemaObj.schema;\n    callValidate.errors = null;\n    callValidate.root = root ? root : callValidate;\n    if (schemaObj.schema.$async === true)\n      callValidate.$async = true;\n    return callValidate;\n  }\n  schemaObj.compiling = true;\n\n  var currentOpts;\n  if (schemaObj.meta) {\n    currentOpts = this._opts;\n    this._opts = this._metaOpts;\n  }\n\n  var v;\n  try { v = compileSchema.call(this, schemaObj.schema, root, schemaObj.localRefs); }\n  catch(e) {\n    delete schemaObj.validate;\n    throw e;\n  }\n  finally {\n    schemaObj.compiling = false;\n    if (schemaObj.meta) this._opts = currentOpts;\n  }\n\n  schemaObj.validate = v;\n  schemaObj.refs = v.refs;\n  schemaObj.refVal = v.refVal;\n  schemaObj.root = v.root;\n  return v;\n\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var _validate = schemaObj.validate;\n    var result = _validate.apply(this, arguments);\n    callValidate.errors = _validate.errors;\n    return result;\n  }\n}\n\n\nfunction chooseGetId(opts) {\n  switch (opts.schemaId) {\n    case 'auto': return _get$IdOrId;\n    case 'id': return _getId;\n    default: return _get$Id;\n  }\n}\n\n/* @this   Ajv */\nfunction _getId(schema) {\n  if (schema.$id) this.logger.warn('schema $id ignored', schema.$id);\n  return schema.id;\n}\n\n/* @this   Ajv */\nfunction _get$Id(schema) {\n  if (schema.id) this.logger.warn('schema id ignored', schema.id);\n  return schema.$id;\n}\n\n\nfunction _get$IdOrId(schema) {\n  if (schema.$id && schema.id && schema.$id != schema.id)\n    throw new Error('schema $id is different from id');\n  return schema.$id || schema.id;\n}\n\n\n/**\n * Convert array of error message objects to string\n * @this   Ajv\n * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.\n * @param  {Object} options optional options with properties `separator` and `dataVar`.\n * @return {String} human readable string with all errors descriptions\n */\nfunction errorsText(errors, options) {\n  errors = errors || this.errors;\n  if (!errors) return 'No errors';\n  options = options || {};\n  var separator = options.separator === undefined ? ', ' : options.separator;\n  var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;\n\n  var text = '';\n  for (var i=0; i<errors.length; i++) {\n    var e = errors[i];\n    if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;\n  }\n  return text.slice(0, -separator.length);\n}\n\n\n/**\n * Add custom format\n * @this   Ajv\n * @param {String} name format name\n * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)\n * @return {Ajv} this for method chaining\n */\nfunction addFormat(name, format) {\n  if (typeof format == 'string') format = new RegExp(format);\n  this._formats[name] = format;\n  return this;\n}\n\n\nfunction addDraft6MetaSchema(self) {\n  var $dataSchema;\n  if (self._opts.$data) {\n    $dataSchema = require('./refs/data.json');\n    self.addMetaSchema($dataSchema, $dataSchema.$id, true);\n  }\n  if (self._opts.meta === false) return;\n  var metaSchema = require('./refs/json-schema-draft-07.json');\n  if (self._opts.$data) metaSchema = $dataMetaSchema(metaSchema, META_SUPPORT_DATA);\n  self.addMetaSchema(metaSchema, META_SCHEMA_ID, true);\n  self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;\n}\n\n\nfunction addInitialSchemas(self) {\n  var optsSchemas = self._opts.schemas;\n  if (!optsSchemas) return;\n  if (Array.isArray(optsSchemas)) self.addSchema(optsSchemas);\n  else for (var key in optsSchemas) self.addSchema(optsSchemas[key], key);\n}\n\n\nfunction addInitialFormats(self) {\n  for (var name in self._opts.formats) {\n    var format = self._opts.formats[name];\n    self.addFormat(name, format);\n  }\n}\n\n\nfunction checkUnique(self, id) {\n  if (self._schemas[id] || self._refs[id])\n    throw new Error('schema with key or id \"' + id + '\" already exists');\n}\n\n\nfunction getMetaSchemaOptions(self) {\n  var metaOpts = util.copy(self._opts);\n  for (var i=0; i<META_IGNORE_OPTIONS.length; i++)\n    delete metaOpts[META_IGNORE_OPTIONS[i]];\n  return metaOpts;\n}\n\n\nfunction setLogger(self) {\n  var logger = self._opts.logger;\n  if (logger === false) {\n    self.logger = {log: noop, warn: noop, error: noop};\n  } else {\n    if (logger === undefined) logger = console;\n    if (!(typeof logger == 'object' && logger.log && logger.warn && logger.error))\n      throw new Error('logger must implement log, warn and error methods');\n    self.logger = logger;\n  }\n}\n\n\nfunction noop() {}\n","exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++;\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\nComparator.prototype.intersects = function(comp, loose) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, loose);\n    return satisfies(this.value, rangeTmp, loose);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, loose);\n    return satisfies(comp.semver, rangeTmp, loose);\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, loose) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'));\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, loose) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'));\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if (range instanceof Range) {\n    if (range.loose === loose) {\n      return range;\n    } else {\n      return new Range(range.raw, loose);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, loose);\n  }\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\nRange.prototype.intersects = function(range, loose) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function(thisComparators) {\n    return thisComparators.every(function(thisComparator) {\n      return range.set.some(function(rangeComparators) {\n        return rangeComparators.every(function(rangeComparator) {\n          return thisComparator.intersects(rangeComparator, loose);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, loose);\n      }\n    }\n  })\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, loose) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, loose);\n      }\n    }\n  })\n  return min;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, loose) {\n  var parsed = parse(version, loose);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\nfunction intersects(r1, r2, loose) {\n  r1 = new Range(r1, loose)\n  r2 = new Range(r2, loose)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce;\nfunction coerce(version) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  var match = version.match(re[COERCE]);\n\n  if (match == null)\n    return null;\n\n  return parse((match[1] || '0') + '.' + (match[2] || '0') + '.' + (match[3] || '0')); \n}\n","\r\nexport const BORDER_COLOR = '#00BFFF'\r\n\r\n/**\r\n * Adjust scale from normalized scale (100%) to rendered scale.\r\n *\r\n * @param {SVGElement} svg The SVG to gather metadata from\r\n * @param {Object} rect A map of numeric values to scale\r\n * @return {Object} A copy of `rect` with values scaled up\r\n */\r\nexport function scaleUp (svg, rect) {\r\n\r\n  if (arguments.length === 1) {\r\n    rect = svg\r\n  }\r\n\r\n  let result = {}\r\n  const viewport = window.PDFView.pdfViewer.getPageView(0).viewport\r\n\r\n  Object.keys(rect).forEach((key) => {\r\n    result[key] = rect[key] * viewport.scale\r\n  })\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Adjust scale from rendered scale to a normalized scale (100%).\r\n *\r\n * @param {Object} rect A map of numeric values to scale\r\n * @return {Object} A copy of `rect` with values scaled down\r\n */\r\nexport function scaleDown (rect) {\r\n\r\n  // TODO for old style:  scaleDown(svg, rect)\r\n  if (arguments.length === 2) {\r\n    rect = arguments[1]\r\n  }\r\n\r\n  let result = {}\r\n  const viewport = window.PDFView.pdfViewer.getPageView(0).viewport\r\n  Object.keys(rect).forEach((key) => {\r\n    result[key] = rect[key] / viewport.scale\r\n  })\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Disable all text layers.\r\n */\r\nexport function disableTextlayer () {\r\n  $('body').addClass('disable-text-layer')\r\n}\r\n\r\n/**\r\n * Enable all text layers.\r\n */\r\nexport function enableTextlayer () {\r\n  $('body').removeClass('disable-text-layer')\r\n}\r\n","\r\n/**\r\n * Circle radius.\r\n */\r\nexport const DEFAULT_RADIUS = 7\r\n\r\n/**\r\n * Create a bounding circle.\r\n * @param {Object} the data for rendering.\r\n */\r\nexport function renderKnob ({ x, y, readOnly }) {\r\n\r\n  // Adjust the position.\r\n  [x, y] = adjustPoint(x, (y - (DEFAULT_RADIUS + 2)), DEFAULT_RADIUS)\r\n\r\n  // Set the CSS class.\r\n  let cssClass = 'anno-knob'\r\n  if (readOnly) {\r\n    cssClass += ' is-readonly'\r\n  }\r\n\r\n  // Create a knob.\r\n  return $(`<div class=\"${cssClass}\"/>`).css({\r\n    top    : `${y}px`,\r\n    left   : `${x}px`,\r\n    width  : DEFAULT_RADIUS + 'px',\r\n    height : DEFAULT_RADIUS + 'px'\r\n  })\r\n}\r\n\r\n/**\r\n * Adjust the circle position not overlay anothers.\r\n */\r\nfunction adjustPoint (x, y, radius) {\r\n\r\n  // Get all knobs.\r\n  const $circles = $('.anno-knob')\r\n\r\n  // Find a position where all knobs are not placed at.\r\n  while (true) {\r\n    let good = true\r\n    $circles.each(function () {\r\n      const $this = $(this)\r\n      const x1 = parseInt($this.css('left'))\r\n      const y1 = parseInt($this.css('top'))\r\n      const distance1 = Math.pow(x - x1, 2) + Math.pow(y - y1, 2)\r\n      const distance2 = Math.pow(radius, 2)\r\n      if (distance1 < distance2) {\r\n        good = false\r\n      }\r\n    })\r\n    if (good) {\r\n      break\r\n    }\r\n    y -= 1\r\n  }\r\n  return [x, y]\r\n}\r\n","/**\r\n * Change color definition style from hex to rgba.\r\n */\r\nexport function hex2rgba (hex, alpha = 1) {\r\n\r\n  // long version\r\n  let r = hex.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i)\r\n  let c = null\r\n  if (r) {\r\n    c = r.slice(1, 4).map(function (x) { return parseInt(x, 16) })\r\n  }\r\n  // short version\r\n  r = hex.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i)\r\n  if (r) {\r\n    c = r.slice(1, 4).map(function (x) { return 0x11 * parseInt(x, 16) })\r\n  }\r\n  if (!c) {\r\n    return hex\r\n  }\r\n  return `rgba(${c[0]}, ${c[1]}, ${c[2]}, ${alpha})`\r\n}\r\n","import { renderKnob } from './renderKnob'\r\nimport { hex2rgba } from '../utils/color'\r\nimport { ANNO_VERSION } from '../version'\r\n\r\nconsole.log('ANNO_VERSION:', ANNO_VERSION)\r\n\r\n/**\r\n * Create a Span element.\r\n * @param {SpanAnnotation} a - span annotation.\r\n * @return {HTMLElement} a html element describing a span annotation.\r\n */\r\nexport function renderSpan (a) {\r\n\r\n  const readOnly = a.readOnly\r\n\r\n  const color = a.color || '#FF0'\r\n\r\n  const $base = $('<div class=\"anno-span\"/>')\r\n    .css('zIndex', a.zIndex || 10)\r\n\r\n  if (!a.page) {\r\n    if (a.rectangles.length > 0) {\r\n      a.page = a.rectangles[0].page\r\n    }\r\n  }\r\n\r\n  let paddingTop = 9\r\n  const pageView = window.PDFView.pdfViewer.getPageView(0)\r\n  const viewport = pageView.viewport\r\n  const scale = viewport.scale\r\n  // const viewBox = viewport.viewBox\r\n  // let pageHeight = viewBox[3] - viewBox[1]\r\n  let merginBetweenPages =  1\r\n\r\n  // #139 correct the absolute position of annotation\r\n  // let pageTopY = paddingTop + (paddingTop + pageHeight + merginBetweenPages) * (a.page - 1)\r\n  // let pageTopY = $('#pageContainer' + a.page).position().top / scale + paddingTop\r\n  let pageTopY = $('#pageContainer' + a.page).position().top / scale + paddingTop + merginBetweenPages\r\n\r\n  // console.log('renderSpan()', scale, pageTopY, a.rectangles)\r\n\r\n  const rectangles = a.rectangles.map(r => {\r\n    return {\r\n      x      : r.x || r.left,\r\n      y      : (r.y || r.top) + pageTopY,\r\n      width  : r.width || r.right - r.left,\r\n      height : r.height || r.bottom - r.top\r\n    }\r\n  }).filter(r => r.width > 0 && r.height > 0 && r.x > -1 && r.y > -1)\r\n\r\n  rectangles.forEach(r => {\r\n    $base.append(createRect(a, r, color, readOnly))\r\n  })\r\n\r\n  if (a.knob) {\r\n    $base.append(renderKnob({\r\n      x : rectangles[0].x,\r\n      y : rectangles[0].y,\r\n      readOnly\r\n    }))\r\n  }\r\n\r\n  return $base[0]\r\n}\r\n\r\nfunction createRect (a, r, color, readOnly) {\r\n\r\n  /*\r\n  // #135 Change the style of Reference Anno\r\n  if (readOnly) {\r\n    return $('<div class=\"anno-span__border\"/>').css({\r\n      top         : r.y + 'px',\r\n      left        : r.x + 'px',\r\n      width       : r.width + 'px',\r\n      height      : r.height + 'px',\r\n      borderColor : color\r\n    })\r\n\r\n  } else {\r\n\r\n    const rgba = hex2rgba(color, 0.4)\r\n    const borderCss = (a.border === false ? 'no-border' : '')\r\n\r\n    return $(`<div class=\"anno-span__area ${borderCss}\"/>`).css({\r\n      top             : r.y + 'px',\r\n      left            : r.x + 'px',\r\n      width           : r.width + 'px',\r\n      height          : r.height + 'px',\r\n      backgroundColor : rgba,\r\n      borderColor     : color\r\n    })\r\n  }\r\n  */\r\n\r\n  let className = readOnly ? 'anno-span__border' : 'anno-span__area'\r\n  if (a.border === false) {\r\n    className += ' no-border'\r\n  }\r\n\r\n  return $(`<div class=\"${className}\"/>`).css({\r\n    top             : r.y + 'px',\r\n    left            : r.x + 'px',\r\n    width           : r.width + 'px',\r\n    height          : r.height + 'px',\r\n    backgroundColor : hex2rgba(color, 0.4),\r\n    borderColor     : color\r\n  })\r\n}\r\n","const UPPER_REGEX = /[A-Z]/g\r\n\r\n// Don't convert these attributes from camelCase to hyphenated-attributes\r\nconst BLACKLIST = [\r\n  'viewBox'\r\n]\r\n\r\nlet keyCase = (key) => {\r\n  if (BLACKLIST.indexOf(key) === -1) {\r\n    key = key.replace(UPPER_REGEX, match => '-' + match.toLowerCase())\r\n  }\r\n  return key\r\n}\r\n\r\n/**\r\n * Set attributes for a node from a map\r\n *\r\n * @param {Node} node The node to set attributes on\r\n * @param {Object} attributes The map of key/value pairs to use for attributes\r\n */\r\nexport default function setAttributes (node, attributes) {\r\n  Object.keys(attributes).forEach((key) => {\r\n    node.setAttribute(keyCase(key), attributes[key])\r\n  })\r\n}\r\n","// TODO no need this file ?\r\nimport setAttributes from '../utils/setAttributes'\r\n\r\n/**\r\n * Default font size for Text.\r\n */\r\nconst DEFAULT_FONT_SIZE = 9.5\r\n\r\n/**\r\n * Calculate boundingClientRect that is needed for rendering text.\r\n *\r\n * @param {String} text - A text to be renderd.\r\n * @param {SVGElement} svg - svgHTMLElement to be used for rendering text.\r\n * @return {Object} A boundingBox of text element.\r\n */\r\nfunction getRect (text, svg) {\r\n  svg.appendChild(text)\r\n  let rect = text.getBoundingClientRect()\r\n  text.parentNode.removeChild(text)\r\n  return rect\r\n}\r\n\r\n/**\r\n * Create SVGTextElement from an annotation definition.\r\n * This is used for anntations of type `textbox`.\r\n *\r\n * @param {Object} a The annotation definition\r\n * @return {SVGTextElement} A text to be rendered\r\n */\r\nexport default function renderText (a, svg) {\r\n  // Text.\r\n  let text = document.createElementNS('http://www.w3.org/2000/svg', 'text')\r\n  setAttributes(text, {\r\n    x        : a.x,\r\n    y        : a.y + parseInt(DEFAULT_FONT_SIZE, 10),\r\n    fill     : a.color || '#F00',\r\n    fontSize : DEFAULT_FONT_SIZE\r\n  })\r\n  text.innerHTML = a.content || a.text\r\n\r\n  // Background.\r\n  let box = document.createElementNS('http://www.w3.org/2000/svg', 'rect')\r\n  let rect = getRect(text, svg)\r\n  setAttributes(box, {\r\n    x      : a.x - 1,\r\n    y      : a.y,\r\n    width  : rect.width,\r\n    height : rect.height,\r\n    fill   : '#FFFFFF',\r\n    class  : 'anno-text'\r\n  })\r\n\r\n  // Group.\r\n  let group = document.createElementNS('http://www.w3.org/2000/svg', 'g')\r\n  group.classList.add('anno-text-group')\r\n  group.setAttribute('read-only', a.readOnly === true)\r\n  group.setAttribute('data-parent-id', a.parentId)\r\n  group.style.visibility = 'visible'\r\n  group.appendChild(box)\r\n  group.appendChild(text)\r\n\r\n  return group\r\n}\r\n","/**\r\n *   The list of functionalities for a relationship between annotations.\r\n */\r\n\r\n/**\r\n * Get bezier control point.\r\n *\r\n * @params x1 : the x of a start position.\r\n * @params y1 : the y of a start position.\r\n * @params x2 : the x of an end position.\r\n * @params y2 : the y of an end position.\r\n * @return { x, y } the position of bezier control.\r\n */\r\nexport function findBezierControlPoint (x1, y1, x2, y2) {\r\n\r\n  const DISTANCE = 30\r\n\r\n  // vertical line.\r\n  if (x1 === x2) {\r\n    return {\r\n      x : x1,\r\n      y : (y1 + y2) / 2\r\n    }\r\n  }\r\n\r\n  // horizontal line.\r\n  if (y1 === y2) {\r\n    return {\r\n      x : (x1 + x2) / 2,\r\n      y : y1 - DISTANCE\r\n    }\r\n  }\r\n\r\n  let center = {\r\n    x : (x1 + x2) / 2,\r\n    y : (y1 + y2) / 2\r\n  }\r\n\r\n  let gradient = (y1 - y2) / (x1 - x2)\r\n  gradient = -1 / gradient\r\n\r\n  let theta = Math.atan(gradient)\r\n  let deltaX = Math.cos(theta) * DISTANCE\r\n  let deltaY = Math.sin(theta) * DISTANCE\r\n\r\n  if (x1 < x2) {\r\n    // right top quadrant.\r\n    if (y1 > y2) {\r\n      return {\r\n        x : center.x - Math.abs(deltaX),\r\n        y : center.y - Math.abs(deltaY)\r\n      }\r\n      // right bottom quadrant.\r\n    } else {\r\n      return {\r\n        x : center.x + Math.abs(deltaX),\r\n        y : center.y - Math.abs(deltaY)\r\n      }\r\n    }\r\n  } else {\r\n    // left top quadrant.\r\n    if (y1 > y2) {\r\n      return {\r\n        x : center.x + Math.abs(deltaX),\r\n        y : center.y - Math.abs(deltaY)\r\n      }\r\n      // left bottom quadrant.\r\n    } else {\r\n      return {\r\n        x : center.x - Math.abs(deltaX),\r\n        y : center.y - Math.abs(deltaY)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function getRelationTextPosition (x1, y1, x2, y2, text = '', parentId = null) {\r\n\r\n  // texts rendered.\r\n  let rects = []\r\n  $('.anno-text').each(function () {\r\n    let $this = $(this)\r\n    // Remove myself.\r\n    if ($this.parent().data('parent-id') !== parentId) {\r\n      rects.push({\r\n        x      : parseFloat($this.attr('x')),\r\n        y      : parseFloat($this.attr('y')),\r\n        width  : parseFloat($this.attr('width')),\r\n        height : parseFloat($this.attr('height'))\r\n      })\r\n    }\r\n  })\r\n\r\n  // Set self size.\r\n  let myWidth = 200\r\n  let myHeight = 15\r\n\r\n  let addY = 5\r\n  if (y1 < y2) {\r\n    addY *= -1\r\n  }\r\n\r\n  // Find the position not overlap.\r\n  while (true) {\r\n\r\n    let cp = findBezierControlPoint(x1, y1, x2, y2)\r\n    let x = x2 + (cp.x - x2) * 0.4\r\n    let y = y2 + (cp.y - y2) * 0.4\r\n\r\n    let ok = true\r\n    for (let i = 0; i < rects.length; i++) {\r\n      let r = rects[i]\r\n\r\n      // Check rects overlap.\r\n\r\n      let aX1 = r.x\r\n      let aX2 = r.x + r.width\r\n      let aY1 = r.y\r\n      let aY2 = r.y + r.height\r\n\r\n      let bX1 = x\r\n      let bX2 = x + myWidth\r\n      let bY1 = y\r\n      let bY2 = y + myHeight\r\n\r\n      let crossX = aX1 <= bX2 && bX1 <= aX2\r\n      let crossY = aY1 <= bY2 && bY1 <= aY2\r\n\r\n      if (crossX && crossY) {\r\n        ok = false\r\n        break\r\n      }\r\n    }\r\n\r\n    if (ok) {\r\n      return { x, y }\r\n    }\r\n\r\n    y1 += addY\r\n    y2 += addY\r\n  }\r\n}\r\n","import setAttributes from '../utils/setAttributes'\r\nimport { DEFAULT_RADIUS } from './renderKnob'\r\nimport { findBezierControlPoint } from '../utils/relation.js'\r\n\r\n/**\r\n * Create a RELATION annotation.\r\n *\r\n * @param {RelationAnnotation} a - The annotation definition\r\n * @return {SVGGElement} A group of a relation to be rendered\r\n */\r\nexport function renderRelation (a) {\r\n\r\n  a.color = a.color || '#F00'\r\n\r\n  // Adjust the start/end points.\r\n  let theta = Math.atan((a.y1 - a.y2) / (a.x1 - a.x2))\r\n  let sign = (a.x1 < a.x2 ? 1 : -1)\r\n  a.x1 += DEFAULT_RADIUS * Math.cos(theta) * sign\r\n  a.x2 -= DEFAULT_RADIUS * Math.cos(theta) * sign\r\n  a.y1 += DEFAULT_RADIUS * Math.sin(theta) * sign\r\n  a.y2 -= DEFAULT_RADIUS * Math.sin(theta) * sign\r\n\r\n  let top    = Math.min(a.y1, a.y2)\r\n  let left   = Math.min(a.x1, a.x2)\r\n  let width  = Math.abs(a.x1 - a.x2)\r\n  let height = Math.abs(a.y1 - a.y2)\r\n\r\n  const [ $svg, margin ] = createSVGElement(top, left, width, height)\r\n\r\n  // Transform coords.\r\n  a.x1 = a.x1 - left + margin\r\n  a.x2 = a.x2 - left + margin\r\n  a.y1 = a.y1 - top + margin\r\n  a.y2 = a.y2 - top + margin\r\n\r\n  // <svg viewBox=\"0 0 200 200\">\r\n  //     <marker id=\"m_ar\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerUnits=\"strokeWidth\" preserveAspectRatio=\"none\" markerWidth=\"2\" markerHeight=\"3\" orient=\"auto-start-reverse\">\r\n  //         <polygon points=\"0,0 0,10 10,5\" fill=\"red\" id=\"ms\"/>\r\n  //     </marker>\r\n  //     <path d=\"M50,50 h100\" fill=\"none\" stroke=\"black\" stroke-width=\"10\" marker-start=\"url(#m_ar)\" marker-end=\"url(#m_ar)\"/>\r\n  // </svg>\r\n\r\n  let group = document.createElementNS('http://www.w3.org/2000/svg', 'g')\r\n  setAttributes(group, {\r\n    fill   : a.color,\r\n    stroke : a.color\r\n  })\r\n  group.style.visibility = 'visible'\r\n  group.setAttribute('read-only', a.readOnly === true)\r\n\r\n  $svg[0].appendChild(group)\r\n\r\n  const markerId = 'relationhead' + a.color.replace('#', '')\r\n\r\n  if (!document.querySelector('#' + markerId)) {\r\n    let marker = document.createElementNS('http://www.w3.org/2000/svg', 'marker')\r\n    setAttributes(marker, {\r\n      viewBox : '0 0 10 10',\r\n      // markerWidth  : 2,\r\n      // markerHeight : 3,\r\n      fill    : a.color,\r\n      id      : markerId,\r\n      orient  : 'auto-start-reverse'\r\n    })\r\n    marker.setAttribute('preserveAspectRatio', 'none')\r\n    marker.setAttribute('markerWidth', 5)\r\n    marker.setAttribute('markerHeight', 5)\r\n    marker.setAttribute('refX', 5)\r\n    marker.setAttribute('refY', 5)\r\n    group.appendChild(marker)\r\n\r\n    let polygon = document.createElementNS('http://www.w3.org/2000/svg', 'polygon')\r\n    setAttributes(polygon, {\r\n      points : '0,0 0,10 10,5'\r\n    })\r\n    marker.appendChild(polygon)\r\n  }\r\n\r\n  // Find Control points.\r\n  let control = findBezierControlPoint(a.x1, a.y1, a.x2, a.y2)\r\n\r\n  // Create Outline.\r\n  let outline = document.createElementNS('http://www.w3.org/2000/svg', 'path')\r\n  setAttributes(outline, {\r\n    d     : `M ${a.x1} ${a.y1} Q ${control.x} ${control.y} ${a.x2} ${a.y2}`,\r\n    class : 'anno-relation-outline'\r\n  })\r\n  group.appendChild(outline)\r\n\r\n  /*\r\n      <path d=\"M 25 25 Q 175 25 175 175\" stroke=\"blue\" fill=\"none\"/>\r\n  */\r\n  let relation = document.createElementNS('http://www.w3.org/2000/svg', 'path')\r\n  setAttributes(relation, {\r\n    d           : `M ${a.x1} ${a.y1} Q ${control.x} ${control.y} ${a.x2} ${a.y2}`,\r\n    stroke      : a.color,\r\n    strokeWidth : 1,\r\n    fill        : 'none',\r\n    class       : 'anno-relation'\r\n  })\r\n\r\n  // Triangle for the end point.\r\n  if (a.direction === 'relation') {\r\n    relation.setAttribute('marker-end', `url(#${markerId})`)\r\n  }\r\n\r\n  group.appendChild(relation)\r\n\r\n  const $base = $('<div/>').css({\r\n    position   : 'absolute',\r\n    top        : 0,\r\n    left       : 0,\r\n    visibility : 'visible'\r\n  }).addClass('anno-relation')\r\n  $base.append($svg)\r\n\r\n  return $base[0]\r\n}\r\n\r\nfunction createSVGElement (top, left, width, height) {\r\n\r\n  // the margin for rendering an arrow curve.\r\n  const margin = 50\r\n\r\n  // Add an annotation layer.\r\n  let $svg = $('<svg class>').css({ // I don't know why, but empty class is need.\r\n    position   : 'absolute',\r\n    top        : `${top - margin}px`,\r\n    left       : `${left - margin}px`,\r\n    width      : `${width + margin * 2}px`,\r\n    height     : `${height + margin * 2}px`,\r\n    visibility : 'hidden',\r\n    'z-index'  : 2\r\n  }).attr({\r\n    x : 0,\r\n    y : 0\r\n  })\r\n\r\n  return [ $svg, margin ]\r\n}\r\n","import { renderRect } from './renderRect'\r\nimport { renderSpan } from './renderSpan'\r\nimport renderText from './renderText'\r\nimport { renderRelation } from './renderRelation'\r\n\r\n/**\r\n * Transform the rotation and scale of a node using SVG's native transform attribute.\r\n *\r\n * @param {Node} node The node to be transformed\r\n * @param {Object} viewport The page's viewport data\r\n * @return {Node}\r\n */\r\nfunction transform (node, viewport) {\r\n  node.style.transform = `scale(${viewport.scale})`\r\n  return node\r\n}\r\n\r\n/**\r\n * Append an annotation as a child of an SVG.\r\n *\r\n * @param {SVGElement} svg The SVG element to append the annotation to\r\n * @param {Object} annotation The annotation definition to render and append\r\n * @param {Object} viewport The page's viewport data\r\n * @return {SVGElement} A node that was created and appended by this function\r\n */\r\nexport default function appendChild (svg, annotation, viewport) {\r\n  // TODO no need third argument(viewport) ?\r\n  if (!viewport) {\r\n    viewport = window.PDFView.pdfViewer.getPageView(0).viewport\r\n  }\r\n\r\n  let child\r\n  switch (annotation.type) {\r\n  case 'rect':\r\n    child = renderRect(annotation, svg)\r\n    break\r\n  case 'span':\r\n    child = renderSpan(annotation, svg)\r\n    break\r\n  case 'textbox':\r\n    child = renderText(annotation, svg)\r\n    break\r\n  case 'relation':\r\n    child = renderRelation(annotation, svg)\r\n    break\r\n  }\r\n\r\n  // If no type was provided for an annotation it will result in node being null.\r\n  // Skip appending/transforming if node doesn't exist.\r\n  if (child) {\r\n\r\n    let elm = transform(child, viewport)\r\n\r\n    if (annotation.type === 'textbox') {\r\n      svg.appendChild(elm)\r\n\r\n      // `text` show above other type elements.\r\n    } else {\r\n      svg.append(elm)\r\n    }\r\n  }\r\n  return child\r\n}\r\n","import { renderKnob } from './renderKnob'\r\nimport { hex2rgba } from '../utils/color'\r\n\r\n/**\r\n * Create a rect annotation.\r\n * @param {RectAnnotation} a - rect annotation.\r\n */\r\nexport function renderRect (a) {\r\n\r\n  let color = a.color || '#FF0'\r\n\r\n  const $base = $('<div class=\"anno-rect-base\"/>')\r\n\r\n  $base.append($('<div class=\"anno-rect\"/>').css({\r\n    top             : `${a.y}px`,\r\n    left            : `${a.x}px`,\r\n    width           : `${a.width}px`,\r\n    height          : `${a.height}px`,\r\n    border          : `1px solid ${color}`,\r\n    backgroundColor : a.readOnly ? 'none' : hex2rgba(color, 0.3)\r\n  }))\r\n\r\n  $base.append(renderKnob(a))\r\n\r\n  return $base[0]\r\n}\r\n","/**\r\n * Dispatch a custom event to `window` object.\r\n */\r\nexport function dispatchWindowEvent (eventName, data) {\r\n  var event = document.createEvent('CustomEvent')\r\n  event.initCustomEvent(eventName, true, true, data)\r\n  window.dispatchEvent(event)\r\n}\r\n","import EventEmitter from 'events'\r\nimport appendChild from '../render/appendChild'\r\nimport { DEFAULT_RADIUS } from '../render/renderKnob'\r\nimport { dispatchWindowEvent } from '../utils/event'\r\n\r\n/**\r\n * Abstract Annotation Class.\r\n */\r\nexport default class AbstractAnnotation extends EventEmitter {\r\n\r\n  /**\r\n   * Check the argument is an annotation.\r\n   */\r\n  static isAnnotation (obj) {\r\n    return obj && obj.uuid && obj.type\r\n  }\r\n\r\n  /**\r\n   * Constructor.\r\n   */\r\n  constructor () {\r\n    super()\r\n    this.autoBind()\r\n    this.deleted = false\r\n    this.selected = false\r\n    this.selectedTime = null\r\n    this.createdAt = new Date().getTime()\r\n  }\r\n\r\n  /**\r\n   * Bind the `this` scope of instance methods to `this`.\r\n   */\r\n  autoBind () {\r\n    Object.getOwnPropertyNames(this.constructor.prototype)\r\n      .filter(prop => typeof this[prop] === 'function')\r\n      .forEach(method => {\r\n        this[method] = this[method].bind(this)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Render annotation(s).\r\n   */\r\n  render () {\r\n\r\n    this.$element.remove()\r\n\r\n    if (this.deleted) {\r\n      return false\r\n    }\r\n\r\n    const base = $('#annoLayer2')[0]\r\n    this.$element = $(appendChild(base, this))\r\n\r\n    if (!this.hoverEventDisable && this.setHoverEvent) {\r\n      this.setHoverEvent()\r\n    }\r\n\r\n    this.selected && this.$element.addClass('--selected')\r\n\r\n    this.disabled && this.disable()\r\n\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Save the annotation data.\r\n   */\r\n  save () {\r\n    window.annotationContainer.add(this)\r\n  }\r\n\r\n  /**\r\n   * Delete the annotation from rendering, a container in window, and a container in localStorage.\r\n   */\r\n  destroy () {\r\n    this.deleted = true\r\n    this.$element.remove()\r\n\r\n    let promise = Promise.resolve()\r\n\r\n    if (this.uuid) {\r\n      window.annotationContainer.remove(this)\r\n    }\r\n\r\n    return promise\r\n  }\r\n\r\n  /**\r\n   * Judge the point within the element.\r\n   */\r\n  isHit (x, y) {\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Handle a click event.\r\n   */\r\n  handleClickEvent (e) {\r\n    this.toggleSelect()\r\n\r\n    if (this.type !== 'textbox') {\r\n\r\n      if (this.selected) {\r\n\r\n        // TODO Use common function.\r\n        let event = document.createEvent('CustomEvent')\r\n        event.initCustomEvent('annotationSelected', true, true, this)\r\n        window.dispatchEvent(event)\r\n\r\n      } else {\r\n\r\n        // TODO Use common function.\r\n        let event = document.createEvent('CustomEvent')\r\n        event.initCustomEvent('annotationDeselected', true, true, this)\r\n        window.dispatchEvent(event)\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a hoverIn event.\r\n   */\r\n  handleHoverInEvent (e) {\r\n    console.log('handleHoverInEvent')\r\n    this.highlight()\r\n    this.emit('hoverin')\r\n    dispatchWindowEvent('annotationHoverIn', this)\r\n  }\r\n\r\n  /**\r\n   * Handle a hoverOut event.\r\n   */\r\n  handleHoverOutEvent (e) {\r\n    console.log('handleHoverOutEvent')\r\n    this.dehighlight()\r\n    this.emit('hoverout')\r\n    dispatchWindowEvent('annotationHoverOut', this)\r\n  }\r\n\r\n  /**\r\n   * Highlight the annotation.\r\n   */\r\n  highlight () {\r\n    this.$element.addClass('--hover')\r\n  }\r\n\r\n  /**\r\n   * Dehighlight the annotation.\r\n   */\r\n  dehighlight () {\r\n    this.$element.removeClass('--hover')\r\n  }\r\n\r\n  /**\r\n   * Select the annotation.\r\n   */\r\n  select () {\r\n    this.selected = true\r\n    this.selectedTime = Date.now()\r\n    this.$element.addClass('--selected')\r\n  }\r\n\r\n  /**\r\n   * Deselect the annotation.\r\n   */\r\n  deselect () {\r\n    console.log('deselect')\r\n    this.selected = false\r\n    this.selectedTime = null\r\n    this.$element.removeClass('--selected')\r\n  }\r\n\r\n  /**\r\n   * Toggle the selected state.\r\n   */\r\n  toggleSelect () {\r\n\r\n    if (this.selected) {\r\n      this.deselect()\r\n    } else {\r\n      this.select()\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Delete the annotation if selected.\r\n   */\r\n  deleteSelectedAnnotation () {\r\n\r\n    if (this.isSelected()) {\r\n      this.destroy().then(() => {\r\n        dispatchWindowEvent('annotationDeleted', { uuid : this.uuid })\r\n      })\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Check whether the annotation is selected.\r\n   */\r\n  isSelected () {\r\n    return this.$element.hasClass('--selected')\r\n  }\r\n\r\n  /**\r\n   * Create a dummy DOM element for the timing that a annotation hasn't be specified yet.\r\n   */\r\n  createDummyElement () {\r\n    return $('<div class=\"dummy\"/>')\r\n  }\r\n\r\n  /**\r\n   * Get the central position of the boundingCircle.\r\n   */\r\n  getBoundingCirclePosition () {\r\n    const $circle = this.$element.find('.anno-knob')\r\n    if ($circle.length > 0) {\r\n      return {\r\n        // x : parseFloat($circle.css('left')) + parseFloat($circle.css('width')) / 2,\r\n        // y : parseFloat($circle.css('top')) + parseFloat($circle.css('height')) / 2\r\n        x : parseFloat($circle.css('left')) + DEFAULT_RADIUS / 2.0,\r\n        y : parseFloat($circle.css('top')) + DEFAULT_RADIUS / 2.0\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Enable a view mode.\r\n   */\r\n  enableViewMode () {\r\n    this.render()\r\n  }\r\n\r\n  /**\r\n   * Disable a view mode.\r\n   */\r\n  disableViewMode () {\r\n    this.render()\r\n  }\r\n\r\n  setDisableHoverEvent () {\r\n    this.hoverEventDisable = true\r\n  }\r\n\r\n  setEnableHoverEvent () {\r\n    this.hoverEventDisable = false\r\n  }\r\n\r\n  enable () {\r\n    this.disabled = false\r\n    this.$element.css('pointer-events', 'auto')\r\n  }\r\n\r\n  disable () {\r\n    this.disabled = true\r\n    this.$element.css('pointer-events', 'none')\r\n  }\r\n\r\n  /**\r\n   * Check the another annotation is equal to `this`.\r\n   */\r\n  equalTo (anotherAnnotation) {\r\n    // Implement Here.\r\n    return false\r\n  }\r\n}\r\n","import { uuid } from 'anno-ui/src/utils'\r\nimport AbstractAnnotation from './abstract'\r\n// import { convertFromExportY } from '../../../shared/coords'\r\n// import appendChild from '../render/appendChild'\r\n\r\n/**\r\n * Span Annotation.\r\n */\r\nexport default class SpanAnnotation extends AbstractAnnotation {\r\n\r\n  /**\r\n   * Constructor.\r\n   */\r\n  constructor () {\r\n    super()\r\n\r\n    this.uuid         = null\r\n    this.type         = 'span'\r\n    this.rectangles   = []\r\n    this.text         = null\r\n    this.color        = null\r\n    this.readOnly     = false\r\n    this.selectedText = null\r\n    this.textRange    = null\r\n    this.page         = null\r\n    this.knob         = true\r\n    this.border       = true\r\n    this.$element     = this.createDummyElement()\r\n\r\n    window.globalEvent.on('deleteSelectedAnnotation', this.deleteSelectedAnnotation)\r\n    window.globalEvent.on('enableViewMode', this.enableViewMode)\r\n  }\r\n\r\n  /**\r\n   * Create an instance from an annotation data.\r\n   */\r\n  static newInstance (annotation) {\r\n    let a          = new SpanAnnotation()\r\n    a.uuid         = annotation.uuid || uuid()\r\n    a.text         = annotation.text\r\n    a.color        = annotation.color\r\n    a.readOnly     = annotation.readOnly || false\r\n    a.selectedText = annotation.selectedText\r\n    a.textRange    = annotation.textRange\r\n    a.page         = annotation.page\r\n    a.zIndex       = annotation.zIndex || 10\r\n    a.knob         = (typeof annotation.knob === 'boolean' ? annotation.knob : true)\r\n    a.border       = annotation.border !== false\r\n\r\n    // Calc the position.\r\n    let rects = window.findTexts(a.page, a.textRange[0], a.textRange[1])\r\n    rects = window.mergeRects(rects)\r\n    a.rectangles = rects\r\n\r\n    return a\r\n  }\r\n\r\n  /**\r\n   * Create an instance from a TOML object.\r\n   */\r\n  static newInstanceFromTomlObject (tomlObject) {\r\n    let d = tomlObject\r\n    d.selectedText = d.text\r\n    d.text = d.label\r\n    d.textRange = d.textrange\r\n    let span = SpanAnnotation.newInstance(d)\r\n    return span\r\n  }\r\n\r\n  /**\r\n   * Render annotation(s).\r\n   */\r\n  render () {\r\n\r\n    if (!this.rectangles || this.rectangles.length === 0) {\r\n      if (!this.page || !this.textRange) {\r\n        return console.log('ERROR: span missing page or textRange. span=', this)\r\n      }\r\n      let rects = window.findTexts(this.page, this.textRange[0], this.textRange[1])\r\n      rects = window.mergeRects(rects)\r\n      this.rectangles = rects\r\n    }\r\n\r\n    return super.render()\r\n  }\r\n\r\n  /**\r\n   * Set a hover event.\r\n   */\r\n  setHoverEvent () {\r\n    this.$element.find('.anno-knob').hover(\r\n      this.handleHoverInEvent,\r\n      this.handleHoverOutEvent\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Delete the annotation from rendering, a container in window, and a container in localStorage.\r\n   */\r\n  destroy () {\r\n    let promise = super.destroy()\r\n    this.emit('delete')\r\n\r\n    // TODO オブジェクトベースで削除できるようにしたい.\r\n    window.globalEvent.removeListener('deleteSelectedAnnotation', this.deleteSelectedAnnotation)\r\n    window.globalEvent.removeListener('enableViewMode', this.enableViewMode)\r\n    return promise\r\n  }\r\n\r\n  /**\r\n   * Create an annotation data for save.\r\n   */\r\n  createAnnotation () {\r\n    return {\r\n      uuid         : this.uuid,\r\n      type         : this.type,\r\n      rectangles   : this.rectangles,\r\n      text         : this.text,\r\n      color        : this.color,\r\n      readyOnly    : this.readOnly,\r\n      selectedText : this.selectedText\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the position for text.\r\n   */\r\n  getTextPosition () {\r\n\r\n    let p = null\r\n\r\n    if (this.rectangles.length > 0) {\r\n      p = {\r\n        x : this.rectangles[0].x + 7,\r\n        y : this.rectangles[0].y - 20\r\n      }\r\n    }\r\n\r\n    return p\r\n  }\r\n\r\n  /**\r\n   * Delete the annotation if selected.\r\n   */\r\n  deleteSelectedAnnotation () {\r\n    super.deleteSelectedAnnotation()\r\n  }\r\n\r\n  /**\r\n   * Handle a selected event on a text.\r\n   */\r\n  handleTextSelected () {\r\n    this.select()\r\n  }\r\n\r\n  /**\r\n   * Handle a deselected event on a text.\r\n   */\r\n  handleTextDeselected () {\r\n    this.deselect()\r\n  }\r\n\r\n  /**\r\n   * Handle a hovein event on a text.\r\n   */\r\n  handleTextHoverIn () {\r\n    this.highlight()\r\n    this.emit('hoverin')\r\n  }\r\n\r\n  /**\r\n   * Handle a hoveout event on a text.\r\n   */\r\n  handleTextHoverOut () {\r\n    this.dehighlight()\r\n    this.emit('hoverout')\r\n  }\r\n\r\n  /**\r\n   * Save a new text.\r\n   */\r\n  handleTextChanged (newText) {\r\n    this.text = newText\r\n    this.save()\r\n  }\r\n\r\n  /**\r\n   * Handle a hoverin event.\r\n   */\r\n  handleHoverInEvent (e) {\r\n    super.handleHoverInEvent(e)\r\n    this.emit('circlehoverin', this)\r\n  }\r\n\r\n  /**\r\n   * Handle a hoverout event.\r\n   */\r\n  handleHoverOutEvent (e) {\r\n    super.handleHoverOutEvent(e)\r\n    this.emit('circlehoverout', this)\r\n  }\r\n\r\n  /**\r\n   * Handle a click event.\r\n   */\r\n  handleClickEvent (e) {\r\n    super.handleClickEvent(e)\r\n  }\r\n\r\n  export (id) {\r\n\r\n    let text = (this.selectedText || '')\r\n      .replace(/\\r\\n/g, ' ')\r\n      .replace(/\\r/g, ' ')\r\n      .replace(/\\n/g, ' ')\r\n      .replace(/\"/g, '')\r\n      .replace(/\\\\/g, '')\r\n\r\n    return {\r\n      id        : id + '',\r\n      page      : this.page,\r\n      label     : this.text || '',\r\n      text,\r\n      textrange : this.textRange\r\n    }\r\n  }\r\n\r\n  export040 () {\r\n\r\n    let text = (this.selectedText || '')\r\n      .replace(/\\r\\n/g, ' ')\r\n      .replace(/\\r/g, ' ')\r\n      .replace(/\\n/g, ' ')\r\n      .replace(/\"/g, '')\r\n      .replace(/\\\\/g, '')\r\n\r\n    return {\r\n      type      : this.type,\r\n      page      : this.page,\r\n      label     : this.text || '',\r\n      text,\r\n      textrange : this.textRange\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enable view mode.\r\n   */\r\n  enableViewMode () {\r\n    this.disableViewMode()\r\n    super.enableViewMode()\r\n    if (!this.readOnly) {\r\n      this.$element.find('.anno-knob').on('click', this.handleClickEvent)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disable view mode.\r\n   */\r\n  disableViewMode () {\r\n    super.disableViewMode()\r\n    this.$element.find('.anno-knob').off('click')\r\n  }\r\n}\r\n","/**\r\n * Enable Text input enable.\r\n */\r\nexport function enable ({ uuid, text, disable = false, autoFocus = false, blurListener = null }) {\r\n  var event = document.createEvent('CustomEvent')\r\n  event.initCustomEvent('enableTextInput', true, true, ...arguments)\r\n  window.dispatchEvent(event)\r\n  console.log('dispatchEvent:', event, arguments[0])\r\n}\r\n\r\n/**\r\n * Disable the text input.\r\n */\r\nexport function disable () {\r\n  var event = document.createEvent('CustomEvent')\r\n  event.initCustomEvent('disappearTextInput', true, true)\r\n  window.dispatchEvent(event)\r\n}\r\n","import { scaleDown } from './utils'\r\nimport SpanAnnotation from '../annotation/span'\r\nimport * as textInput from '../utils/textInput'\r\n\r\nfunction scale () {\r\n  return window.PDFView.pdfViewer.getPageView(0).viewport.scale\r\n}\r\n\r\n/**\r\n * Merge user selections.\r\n */\r\nfunction mergeRects (rects) {\r\n\r\n  // Remove null.\r\n  rects = rects.filter(rect => rect)\r\n\r\n  // Normalize.\r\n  rects = rects.map(rect => {\r\n    rect.top = rect.top || rect.y\r\n    rect.left = rect.left || rect.x\r\n    rect.right = rect.right || (rect.x + rect.w)\r\n    rect.bottom = rect.bottom || (rect.y + rect.h)\r\n    return rect\r\n  })\r\n\r\n  // a virtical margin of error.\r\n  const error = 5 * scale()\r\n\r\n  let tmp = convertToObject(rects[0])\r\n  let newRects = [tmp]\r\n  for (let i = 1; i < rects.length; i++) {\r\n\r\n    // Same line -> Merge rects.\r\n    if (withinMargin(rects[i].top, tmp.top, error)) {\r\n      tmp.top    = Math.min(tmp.top, rects[i].top)\r\n      tmp.left   = Math.min(tmp.left, rects[i].left)\r\n      tmp.right  = Math.max(tmp.right, rects[i].right)\r\n      tmp.bottom = Math.max(tmp.bottom, rects[i].bottom)\r\n      tmp.x      = tmp.left\r\n      tmp.y      = tmp.top\r\n      tmp.width  = tmp.right - tmp.left\r\n      tmp.height = tmp.bottom - tmp.top\r\n\r\n      // New line -> Create a new rect.\r\n    } else {\r\n      tmp = convertToObject(rects[i])\r\n      newRects.push(tmp)\r\n    }\r\n  }\r\n\r\n  return newRects\r\n}\r\n\r\n/**\r\n * Convert a DOMList to a javascript plan object.\r\n */\r\nfunction convertToObject (rect) {\r\n  return {\r\n    top    : rect.top,\r\n    left   : rect.left,\r\n    right  : rect.right,\r\n    bottom : rect.bottom,\r\n    x      : rect.x,\r\n    y      : rect.y,\r\n    width  : rect.width,\r\n    height : rect.height\r\n  }\r\n}\r\n\r\n/**\r\n * Check the value(x) within the range.\r\n */\r\nfunction withinMargin (x, base, margin) {\r\n  return (base - margin) <= x && x <= (base + margin)\r\n}\r\n\r\n/**\r\n * Save a rect annotation.\r\n */\r\nexport function saveSpan ({\r\n  text = '',\r\n  rects = [],\r\n  textRange = [],\r\n  selectedText = '',\r\n  zIndex = 10,\r\n  color = '#ffff00',\r\n  page = 1,\r\n  save = true,\r\n  focusToLabel = true,\r\n  knob = true,\r\n  border = true\r\n}) {\r\n\r\n  if (!rects) {\r\n    return\r\n  }\r\n\r\n  let annotation = {\r\n    rectangles : rects,\r\n    selectedText,\r\n    text,\r\n    textRange,\r\n    zIndex,\r\n    color,\r\n    page,\r\n    knob,\r\n    border\r\n  }\r\n\r\n  // Save.\r\n  let spanAnnotation = SpanAnnotation.newInstance(annotation)\r\n  if (save) {\r\n    spanAnnotation.save()\r\n  }\r\n\r\n  // Render.\r\n  spanAnnotation.render()\r\n\r\n  // Select.\r\n  spanAnnotation.select()\r\n\r\n  // Enable label input.\r\n  if (focusToLabel) {\r\n    textInput.enable({ uuid : spanAnnotation.uuid, autoFocus : true, text })\r\n  }\r\n\r\n  return spanAnnotation\r\n}\r\nwindow.saveSpan = saveSpan\r\n\r\n/**\r\n * Get the rect area of User selected.\r\n */\r\nexport function getRectangles () {\r\n\r\n  if (!currentPage || !startPosition || !endPosition) {\r\n    return null\r\n\r\n  } else {\r\n    let targets = window.findTexts(currentPage, startPosition, endPosition)\r\n    return mergeRects(targets)\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Create a span by current texts selection.\r\n */\r\nexport function createSpan ({ text = null, zIndex = 10, color = null }) {\r\n\r\n  if (!currentPage || !startPosition || !endPosition) {\r\n    return null\r\n\r\n  } else {\r\n\r\n    let targets = window.findTexts(currentPage, startPosition, endPosition)\r\n    if (targets.length === 0) {\r\n      return null\r\n    }\r\n\r\n    let selectedText = targets.map(t => {\r\n      return t ? t.char : ' '\r\n    }).join('')\r\n\r\n    const mergedRect = mergeRects(targets)\r\n    const annotation = saveSpan({\r\n      rects     : mergedRect,\r\n      page      : currentPage,\r\n      text,\r\n      zIndex,\r\n      color,\r\n      textRange : [ startPosition, endPosition ],\r\n      selectedText\r\n    })\r\n\r\n    // Remove user selection.\r\n    if (spanAnnotation) {\r\n      spanAnnotation.destroy()\r\n    }\r\n    startPosition = null\r\n    endPosition = null\r\n    currentPage = null\r\n    spanAnnotation = null\r\n\r\n    return annotation\r\n  }\r\n\r\n}\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n  function setPositions (e) {\r\n\r\n    const canvasElement = e.currentTarget\r\n    const pageElement = canvasElement.parentNode\r\n    const page = parseInt(pageElement.getAttribute('data-page-number'))\r\n    currentPage = page\r\n\r\n    const { top, left } = canvasElement.getBoundingClientRect()\r\n    const x = e.clientX - left\r\n    const y = e.clientY - top\r\n\r\n    // Find the data in pdftxt.\r\n    const item = window.findText(page, scaleDown({ x, y }))\r\n    if (item) {\r\n      if (!startPosition || !endPosition) {\r\n        initPosition = item.position\r\n        startPosition = item.position\r\n        endPosition = item.position\r\n      } else {\r\n        if (item.position < initPosition) {\r\n          startPosition = item.position\r\n          endPosition = initPosition\r\n        } else {\r\n          startPosition = initPosition\r\n          endPosition = item.position\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function makeSelections (e) {\r\n\r\n    setPositions(e)\r\n\r\n    if (spanAnnotation) {\r\n      spanAnnotation.destroy()\r\n      spanAnnotation = null\r\n    }\r\n\r\n    let targets = window.findTexts(currentPage, startPosition, endPosition)\r\n    if (targets.length > 0) {\r\n      const mergedRect = mergeRects(targets)\r\n      spanAnnotation = saveSpan({\r\n        rects        : mergedRect,\r\n        page         : currentPage,\r\n        save         : false,\r\n        focusToLabel : false,\r\n        color        : '#0f0',\r\n        knob         : false,\r\n        border       : false,\r\n        textRange    : [ startPosition, endPosition ]\r\n      })\r\n      spanAnnotation.disable()\r\n    }\r\n  }\r\n\r\n  const $viewer = $('#viewer')\r\n\r\n  $viewer.on('mousedown', '.canvasWrapper', e => {\r\n    if (otherAnnotationTreating) {\r\n      // Ignore, if other annotation is detected.\r\n      return\r\n    }\r\n    mouseDown = true\r\n    currentPage = null\r\n    initPosition = null\r\n    startPosition = null\r\n    endPosition = null\r\n    if (spanAnnotation) {\r\n      spanAnnotation.destroy()\r\n      spanAnnotation = null\r\n    }\r\n    makeSelections(e)\r\n  })\r\n  $viewer.on('mousemove', '.canvasWrapper', e => {\r\n    if (mouseDown) {\r\n      makeSelections(e)\r\n    }\r\n  })\r\n  $viewer.on('mouseup', '.canvasWrapper', e => {\r\n    if (mouseDown) {\r\n      makeSelections(e)\r\n      if (spanAnnotation) {\r\n        spanAnnotation.deselect()\r\n      }\r\n    }\r\n    mouseDown = false\r\n  })\r\n\r\n  let otherAnnotationTreating = false\r\n  window.addEventListener('annotationHoverIn', () => {\r\n    otherAnnotationTreating = true\r\n  })\r\n  window.addEventListener('annotationHoverOut', () => {\r\n    otherAnnotationTreating = false\r\n  })\r\n  window.addEventListener('annotationDeleted', () => {\r\n    otherAnnotationTreating = false\r\n  })\r\n\r\n})\r\n\r\nlet mouseDown = false\r\nlet initPosition = null\r\nlet startPosition = null\r\nlet endPosition = null\r\nlet currentPage = null\r\nlet spanAnnotation = null\r\n\r\n","import { uuid } from 'anno-ui/src/utils'\r\nimport AbstractAnnotation from './abstract'\r\nimport { getRelationTextPosition } from '../utils/relation.js'\r\nimport { anyOf } from '../../../shared/util'\r\n\r\nlet globalEvent\r\n\r\n/**\r\n * Relation Annotation (one-way / two-way / link)\r\n */\r\nexport default class RelationAnnotation extends AbstractAnnotation {\r\n\r\n  /**\r\n   * Constructor.\r\n   */\r\n  constructor () {\r\n    super()\r\n\r\n    globalEvent = window.globalEvent\r\n\r\n    this.uuid = uuid()\r\n    this.type = 'relation'\r\n    this.direction = null\r\n    this.rel1Annotation = null\r\n    this.rel2Annotation = null\r\n    this.text = null\r\n    this.color = null\r\n    this.readOnly = false\r\n    this.$element = this.createDummyElement()\r\n\r\n    // for render.\r\n    this.x1 = 0\r\n    this.y1 = 0\r\n    this.x2 = 0\r\n    this.y2 = 0\r\n\r\n    globalEvent.on('deleteSelectedAnnotation', this.deleteSelectedAnnotation)\r\n    globalEvent.on('enableViewMode', this.enableViewMode)\r\n    globalEvent.on('rectmoveend', this.handleRelMoveEnd)\r\n  }\r\n\r\n  /**\r\n   * Create an instance from an annotation data.\r\n   */\r\n  static newInstance (annotation) {\r\n    let a            = new RelationAnnotation()\r\n    a.uuid           = annotation.uuid || uuid()\r\n    // a.direction      = annotation.direction\r\n    a.direction      = 'relation'\r\n    a.rel1Annotation = AbstractAnnotation.isAnnotation(annotation.rel1) ? annotation.rel1 : window.annotationContainer.findById(annotation.rel1)\r\n    a.rel2Annotation = AbstractAnnotation.isAnnotation(annotation.rel2) ? annotation.rel2 : window.annotationContainer.findById(annotation.rel2)\r\n    a.text           = annotation.text\r\n    a.color          = annotation.color\r\n    a.readOnly       = annotation.readOnly || false\r\n    a.zIndex         = annotation.zIndex || 10\r\n    return a\r\n  }\r\n\r\n  /**\r\n   * Create an instance from a TOML object.\r\n   */\r\n  static newInstanceFromTomlObject (d) {\r\n    // d.direction = d.dir\r\n    d.direction = 'relation'\r\n    // TODO Annotation側を、labelに合わせてもいいかも。\r\n    d.text = d.label\r\n    let rel = RelationAnnotation.newInstance(d)\r\n    return rel\r\n  }\r\n\r\n  /**\r\n   * Set a hover event.\r\n   */\r\n  setHoverEvent () {\r\n    this.$element.find('path').hover(\r\n      this.handleHoverInEvent,\r\n      this.handleHoverOutEvent\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Setter - rel1Annotation.\r\n   */\r\n  set rel1Annotation (a) {\r\n    this._rel1Annotation = a\r\n    if (this._rel1Annotation) {\r\n      this._rel1Annotation.on('hoverin', this.handleRelHoverIn)\r\n      this._rel1Annotation.on('hoverout', this.handleRelHoverOut)\r\n      this._rel1Annotation.on('rectmove', this.handleRelMove)\r\n      this._rel1Annotation.on('delete', this.handleRelDelete)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Getter - rel1Annotation.\r\n   */\r\n  get rel1Annotation () {\r\n    return this._rel1Annotation\r\n  }\r\n\r\n  /**\r\n   * Setter - rel2Annotation.\r\n   */\r\n  set rel2Annotation (a) {\r\n    this._rel2Annotation = a\r\n    if (this._rel2Annotation) {\r\n      this._rel2Annotation.on('hoverin', this.handleRelHoverIn)\r\n      this._rel2Annotation.on('hoverout', this.handleRelHoverOut)\r\n      this._rel2Annotation.on('rectmove', this.handleRelMove)\r\n      this._rel2Annotation.on('delete', this.handleRelDelete)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Getter - rel2Annotation.\r\n   */\r\n  get rel2Annotation () {\r\n    return this._rel2Annotation\r\n  }\r\n\r\n  /**\r\n   * Render the annotation.\r\n   */\r\n  render () {\r\n    this.setStartEndPosition()\r\n    super.render()\r\n  }\r\n\r\n  /**\r\n   * Create an annotation data for save.\r\n   */\r\n  createAnnotation () {\r\n    return {\r\n      uuid      : this.uuid,\r\n      type      : this.type,\r\n      direction : this.direction,\r\n      rel1      : this._rel1Annotation.uuid,\r\n      rel2      : this._rel2Annotation.uuid,\r\n      text      : this.text,\r\n      color     : this.color,\r\n      readOnly  : this.readOnly\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy the annotation.\r\n   */\r\n  destroy () {\r\n    let promise = super.destroy()\r\n    if (this._rel1Annotation) {\r\n      this._rel1Annotation.removeListener('hoverin', this.handleRelHoverIn)\r\n      this._rel1Annotation.removeListener('hoverout', this.handleRelHoverOut)\r\n      this._rel1Annotation.removeListener('rectmove', this.handleRelMove)\r\n      this._rel1Annotation.removeListener('delete', this.handleRelDelete)\r\n      delete this._rel1Annotation\r\n    }\r\n    if (this._rel2Annotation) {\r\n      this._rel2Annotation.removeListener('hoverin', this.handleRelHoverIn)\r\n      this._rel2Annotation.removeListener('hoverout', this.handleRelHoverOut)\r\n      this._rel2Annotation.removeListener('rectmove', this.handleRelMove)\r\n      this._rel2Annotation.removeListener('delete', this.handleRelDelete)\r\n      delete this._rel2Annotation\r\n    }\r\n\r\n    globalEvent.removeListener('deleteSelectedAnnotation', this.deleteSelectedAnnotation)\r\n    globalEvent.removeListener('enableViewMode', this.enableViewMode)\r\n    globalEvent.removeListener('rectmoveend', this.handleRelMoveEnd)\r\n\r\n    return promise\r\n  }\r\n\r\n  /**\r\n   * Delete the annotation if selected.\r\n   */\r\n  deleteSelectedAnnotation () {\r\n    super.deleteSelectedAnnotation()\r\n  }\r\n\r\n  /**\r\n   * Get the position for text.\r\n   */\r\n  // TODO No need ?\r\n  getTextPosition () {\r\n    this.setStartEndPosition()\r\n    return getRelationTextPosition(this.x1, this.y1, this.x2, this.y2, this.text, this.uuid)\r\n  }\r\n\r\n  /**\r\n   * Highlight relations.\r\n   */\r\n  highlightRelAnnotations () {\r\n    if (this._rel1Annotation) {\r\n      this._rel1Annotation.highlight()\r\n    }\r\n    if (this._rel2Annotation) {\r\n      this._rel2Annotation.highlight()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dehighlight relations.\r\n   */\r\n  dehighlightRelAnnotations () {\r\n    if (this._rel1Annotation) {\r\n      this._rel1Annotation.dehighlight()\r\n    }\r\n    if (this.rel2Annotation) {\r\n      this.rel2Annotation.dehighlight()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a selected event on a text.\r\n   */\r\n  handleTextSelected () {\r\n    this.select()\r\n  }\r\n\r\n  /**\r\n   * Handle a deselected event on a text.\r\n   */\r\n  handleTextDeselected () {\r\n    this.deselect()\r\n  }\r\n\r\n  /**\r\n   * The callback for the relational text hoverred in.\r\n   */\r\n  handleTextHoverIn () {\r\n    this.highlight()\r\n    this.emit('hoverin')\r\n    this.highlightRelAnnotations()\r\n  }\r\n\r\n  /**\r\n   * The callback for the relational text hoverred out.\r\n   */\r\n  handleTextHoverOut () {\r\n    this.dehighlight()\r\n    this.emit('hoverout')\r\n    this.dehighlightRelAnnotations()\r\n  }\r\n\r\n  /**\r\n   * The callback for the relationals hoverred in.\r\n   */\r\n  handleRelHoverIn () {\r\n    this.highlight()\r\n    this.highlightRelAnnotations()\r\n  }\r\n\r\n  /**\r\n   * The callback for the relationals hoverred out.\r\n   */\r\n  handleRelHoverOut () {\r\n    this.dehighlight()\r\n    this.dehighlightRelAnnotations()\r\n  }\r\n\r\n  /**\r\n   * The callback that is called relations has benn deleted.\r\n   */\r\n  handleRelDelete () {\r\n    this.destroy()\r\n  }\r\n\r\n  /**\r\n   * The callback that is called relations has been moved.\r\n   */\r\n  handleRelMove () {\r\n    this.render()\r\n  }\r\n\r\n  /**\r\n   * The callback that is called relations has finished to be moved.\r\n   */\r\n  handleRelMoveEnd (rectAnnotation) {\r\n    if (this._rel1Annotation === rectAnnotation || this._rel2Annotation === rectAnnotation) {\r\n      this.enableViewMode()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The callback that is called the text content is changed.\r\n   *\r\n   * @param {String} newText - the content an user changed.\r\n   */\r\n  handleTextChanged (newText) {\r\n    this.text = newText\r\n    this.save()\r\n  }\r\n\r\n  /**\r\n   * The callback that is called at hoverred in.\r\n   */\r\n  handleHoverInEvent (e) {\r\n    super.handleHoverInEvent(e)\r\n    this.highlightRelAnnotations()\r\n  }\r\n\r\n  /**\r\n   * The callback that is called at hoverred out.\r\n   */\r\n  handleHoverOutEvent (e) {\r\n    super.handleHoverOutEvent(e)\r\n    this.dehighlightRelAnnotations()\r\n  }\r\n\r\n  /**\r\n   * The callback that is called at clicked.\r\n   */\r\n  handleClickEvent (e) {\r\n    super.handleClickEvent(e)\r\n  }\r\n\r\n  /**\r\n   * Export Data for TOML.\r\n   * @returns\r\n   */\r\n  export () {\r\n    return {\r\n      head  : this.rel1Annotation.exportId + '',\r\n      tail  : this.rel2Annotation.exportId + '',\r\n      label : this.text || ''\r\n    }\r\n  }\r\n\r\n    /**\r\n   * Export Data for TOML.\r\n   * @returns {{type: string, dir: null, ids: *[], label: *|string}}\r\n   */\r\n  export040 () {\r\n    return {\r\n      type  : this.type,\r\n      dir   : this.direction,\r\n      ids   : [ this.rel1Annotation.exportId, this.rel2Annotation.exportId ],\r\n      label : this.text || ''\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enable view mode.\r\n   */\r\n  enableViewMode () {\r\n\r\n    this.disableViewMode()\r\n\r\n    super.enableViewMode()\r\n\r\n    if (!this.readOnly) {\r\n      this.$element.find('path').on('click', this.handleClickEvent)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disable view mode.\r\n   */\r\n  disableViewMode () {\r\n    super.disableViewMode()\r\n    this.$element.find('path').off('click')\r\n  }\r\n\r\n  /**\r\n   * Set the start / end points of the relation.\r\n   */\r\n  setStartEndPosition () {\r\n    if (this._rel1Annotation) {\r\n      let p = this._rel1Annotation.getBoundingCirclePosition()\r\n      this.x1 = p.x\r\n      this.y1 = p.y\r\n    }\r\n    if (this._rel2Annotation) {\r\n      let p = this._rel2Annotation.getBoundingCirclePosition()\r\n      this.x2 = p.x\r\n      this.y2 = p.y\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @{inheritDoc}\r\n   */\r\n  equalTo (anno) {\r\n\r\n    if (!anno || this.type !== anno) {\r\n      return false\r\n    }\r\n\r\n    const isSame = anyOf(this.rel1Annotation.uuid, [anno.rel1Annotation.uuid, anno.rel2Annotation.uuid])\r\n      && anyOf(this.rel2Annotation.uuid, [anno.rel1Annotation.uuid, anno.rel2Annotation.uuid])\r\n\r\n    return isSame\r\n  }\r\n\r\n}\r\n","/**\r\n * Disable the action of pageback, if `DEL` or `BackSpace` button pressed.\r\n */\r\nfunction disablePagebackAction (e) {\r\n  // Allow any keyboard events for <input/>.\r\n  if (e.target.tagName.toLowerCase() === 'input') {\r\n    return\r\n  }\r\n\r\n  // Delete or BackSpace.\r\n  if (e.keyCode === 46 || e.keyCode === 8) {\r\n    e.preventDefault()\r\n\r\n    if (e.type === 'keyup') {\r\n      deleteSelectedAnnotations()\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Deselect annotations when pages clicked.\r\n */\r\nfunction handlePageClick (e) {\r\n  window.annotationContainer\r\n    .getSelectedAnnotations()\r\n    .forEach(a => a.deselect())\r\n\r\n  var event = document.createEvent('CustomEvent')\r\n  event.initCustomEvent('annotationDeselected', true, true, this)\r\n  window.dispatchEvent(event)\r\n}\r\n\r\n/**\r\n * Delete selected annotations.\r\n */\r\nfunction deleteSelectedAnnotations () {\r\n  window.globalEvent.emit('deleteSelectedAnnotation')\r\n}\r\n\r\n// TODO NO NEED `enableViewMode` event ?\r\n\r\n/**\r\n * Enable view mode.\r\n */\r\nexport function enableViewMode () {\r\n  console.log('view:enableViewMode')\r\n\r\n  document.removeEventListener('keyup', disablePagebackAction)\r\n  document.removeEventListener('keydown', disablePagebackAction)\r\n  document.addEventListener('keyup', disablePagebackAction)\r\n  document.addEventListener('keydown', disablePagebackAction)\r\n\r\n  $(document)\r\n    .off('click', handlePageClick)\r\n    .on('click', '.page', handlePageClick)\r\n}\r\n","import { createSpan, getRectangles } from './span'\r\nimport { createRelation } from './relation'\r\nimport { enableViewMode } from './view'\r\n\r\nexport default {\r\n  createSpan,\r\n  getRectangles,\r\n  createRelation,\r\n  enableViewMode\r\n}\r\n","import * as textInput from '../utils/textInput'\r\nimport RelationAnnotation from '../annotation/relation'\r\n\r\n/**\r\n * Create a new Relation annotation.\r\n */\r\nexport function createRelation ({ type, anno1, anno2, text, color }) {\r\n  // TODO No need?\r\n  // for old style.\r\n  if (arguments.length === 3) {\r\n    type = arguments[0]\r\n    anno1 = arguments[1]\r\n    anno2 = arguments[2]\r\n  }\r\n\r\n  let annotation = new RelationAnnotation()\r\n  annotation.direction = type\r\n  annotation.rel1Annotation = anno1\r\n  annotation.rel2Annotation = anno2\r\n  annotation.text = text\r\n  annotation.color = color\r\n\r\n  annotation.save()\r\n  annotation.render()\r\n\r\n  // TODO Refactoring.\r\n  // TODO 適切な場所に移動する.\r\n  // Deselect all.\r\n  window.annotationContainer\r\n    .getSelectedAnnotations()\r\n    .forEach(a => a.deselect())\r\n\r\n  // Select.\r\n  annotation.select()\r\n\r\n  // New type text.\r\n  textInput.enable({ uuid : annotation.uuid, autoFocus : true, text })\r\n\r\n  return annotation\r\n}\r\n","import { uuid } from 'anno-ui/src/utils'\r\nimport AbstractAnnotation from './abstract'\r\nimport { scaleDown, disableTextlayer, enableTextlayer } from '../UI/utils'\r\nimport { convertFromExportY } from '../../../shared/coords'\r\n\r\nlet globalEvent\r\n\r\n/**\r\n * Rect Annotation.\r\n */\r\nexport default class RectAnnotation extends AbstractAnnotation {\r\n\r\n  /**\r\n   * Constructor.\r\n   */\r\n  constructor () {\r\n\r\n    super()\r\n\r\n    globalEvent = window.globalEvent\r\n\r\n    this.uuid     = null\r\n    this.type     = 'rect'\r\n    this.x        = 0\r\n    this.y        = 0\r\n    this.width    = 0\r\n    this.height   = 0\r\n    this.text     = null\r\n    this.color    = null\r\n    this.readOnly = false\r\n    this.$element = this.createDummyElement()\r\n\r\n    globalEvent.on('deleteSelectedAnnotation', this.deleteSelectedAnnotation)\r\n    globalEvent.on('enableViewMode', this.enableViewMode)\r\n  }\r\n\r\n  /**\r\n   * Create an instance from an annotation data.\r\n   */\r\n  static newInstance (annotation) {\r\n    let rect      = new RectAnnotation()\r\n    rect.uuid     = annotation.uuid || uuid()\r\n    rect.x        = annotation.x\r\n    rect.y        = annotation.y\r\n    rect.width    = annotation.width\r\n    rect.height   = annotation.height\r\n    rect.text     = annotation.text\r\n    rect.color    = annotation.color\r\n    rect.readOnly = annotation.readOnly || false\r\n    rect.zIndex   = annotation.zIndex || 10\r\n    return rect\r\n  }\r\n\r\n  /**\r\n   * Create an instance from a TOML object.\r\n   */\r\n  static newInstanceFromTomlObject (tomlObject) {\r\n    let d      = tomlObject\r\n    d.position = d.position.map(parseFloat)\r\n    d.x        = d.position[0]\r\n    d.y        = convertFromExportY(d.page, d.position[1])\r\n    d.width    = d.position[2]\r\n    d.height   = d.position[3]\r\n    d.text     = d.label\r\n    let rect   = RectAnnotation.newInstance(d)\r\n    return rect\r\n  }\r\n\r\n  /**\r\n   * Set a hover event.\r\n   */\r\n  setHoverEvent () {\r\n    this.$element.find('.anno-rect, .anno-knob').hover(\r\n      this.handleHoverInEvent,\r\n      this.handleHoverOutEvent\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Delete the annotation from rendering, a container in window, and a container in localStorage.\r\n   */\r\n  destroy () {\r\n    let promise = super.destroy()\r\n    this.emit('delete')\r\n    window.globalEvent.removeListener('deleteSelectedAnnotation', this.deleteSelectedAnnotation)\r\n    window.globalEvent.removeListener('enableViewMode', this.enableViewMode)\r\n    return promise\r\n  }\r\n\r\n  /**\r\n   * Create an annotation data for save.\r\n   */\r\n  createAnnotation () {\r\n    return {\r\n      uuid      : this.uuid,\r\n      type      : this.type,\r\n      x         : this.x,\r\n      y         : this.y,\r\n      width     : this.width,\r\n      height    : this.height,\r\n      text      : this.text,\r\n      color     : this.color,\r\n      readyOnly : this.readOnly\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete the annotation if selected.\r\n   */\r\n  deleteSelectedAnnotation () {\r\n    super.deleteSelectedAnnotation()\r\n  }\r\n\r\n  /**\r\n   * Get the position for text.\r\n   */\r\n  getTextPosition () {\r\n    return {\r\n      x : this.x + 7,\r\n      y : this.y - 20\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a selected event on a text.\r\n   */\r\n  handleTextSelected () {\r\n    this.select()\r\n  }\r\n\r\n  /**\r\n   * Handle a deselected event on a text.\r\n   */\r\n  handleTextDeselected () {\r\n    this.deselect()\r\n  }\r\n\r\n  /**\r\n   * Handle a hovein event on a text.\r\n   */\r\n  handleTextHoverIn () {\r\n    this.highlight()\r\n    this.emit('hoverin')\r\n  }\r\n\r\n  /**\r\n   * Handle a hoveout event on a text.\r\n   */\r\n  handleTextHoverOut () {\r\n    this.dehighlight()\r\n    this.emit('hoverout')\r\n  }\r\n\r\n  /**\r\n   * Save a new text.\r\n   */\r\n  handleTextChanged (newText) {\r\n    console.log('rect:handleTextChanged:', newText)\r\n    this.text = newText\r\n    this.save()\r\n  }\r\n\r\n  /**\r\n   * Handle a hoverin event.\r\n   */\r\n  handleHoverInEvent (e) {\r\n    super.handleHoverInEvent(e)\r\n\r\n    let $elm = $(e.currentTarget)\r\n    if ($elm.prop('tagName') === 'circle') {\r\n      this.emit('circlehoverin', this)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a hoverout event.\r\n   */\r\n  handleHoverOutEvent (e) {\r\n    super.handleHoverOutEvent(e)\r\n\r\n    let $elm = $(e.currentTarget)\r\n    if ($elm.prop('tagName') === 'circle') {\r\n      this.emit('circlehoverout', this)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a click event.\r\n   */\r\n  handleClickEvent (e) {\r\n    super.handleClickEvent(e)\r\n  }\r\n\r\n  /**\r\n   * Handle a mousedown event.\r\n   */\r\n  handleMouseDownOnRect () {\r\n    console.log('handleMouseDownOnRect')\r\n\r\n    this.originalX = this.x\r\n    this.originalY = this.y\r\n\r\n    document.addEventListener('mousemove', this.handleMouseMoveOnDocument)\r\n    document.addEventListener('mouseup', this.handleMouseUpOnDocument)\r\n\r\n    window.globalEvent.emit('rectmovestart')\r\n\r\n    disableTextlayer()\r\n  }\r\n\r\n  /**\r\n   * Handle a mousemove event.\r\n   */\r\n  handleMouseMoveOnDocument (e) {\r\n\r\n    this._dragging = true\r\n\r\n    if (!this.startX) {\r\n      this.startX = parseInt(e.clientX)\r\n      this.startY = parseInt(e.clientY)\r\n    }\r\n    this.endX = parseInt(e.clientX)\r\n    this.endY = parseInt(e.clientY)\r\n\r\n    let diff = scaleDown({\r\n      x : this.endX - this.startX,\r\n      y : this.endY - this.startY\r\n    })\r\n\r\n    this.x = this.originalX + diff.x\r\n    this.y = this.originalY + diff.y\r\n\r\n    this.render()\r\n\r\n    this.emit('rectmove', this)\r\n  }\r\n\r\n  /**\r\n   * Handle a mouseup event.\r\n   */\r\n  handleMouseUpOnDocument () {\r\n\r\n    if (this._dragging) {\r\n      this._dragging = false\r\n\r\n      this.originalX = null\r\n      this.originalY = null\r\n      this.startX = null\r\n      this.startY = null\r\n      this.endX = null\r\n      this.endY = null\r\n\r\n      this.save()\r\n      this.enableViewMode()\r\n      globalEvent.emit('rectmoveend', this)\r\n    }\r\n\r\n    document.removeEventListener('mousemove', this.handleMouseMoveOnDocument)\r\n    document.removeEventListener('mouseup', this.handleMouseUpOnDocument)\r\n\r\n    if (window.currentType !== 'rect') {\r\n      enableTextlayer()\r\n    }\r\n  }\r\n\r\n  enableDragAction () {\r\n    this.$element.find('.anno-rect, circle')\r\n      .off('mousedown', this.handleMouseDownOnRect)\r\n      .on('mousedown', this.handleMouseDownOnRect)\r\n  }\r\n\r\n  disableDragAction () {\r\n    this.$element.find('.anno-rect, circle')\r\n      .off('mousedown', this.handleMouseDownOnRect)\r\n  }\r\n\r\n  /**\r\n   * Enable view mode.\r\n   */\r\n  enableViewMode () {\r\n    super.enableViewMode()\r\n    if (!this.readOnly) {\r\n      this.$element.find('.anno-rect, .anno-knob').on('click', this.handleClickEvent)\r\n      this.enableDragAction()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disable view mode.\r\n   */\r\n  disableViewMode () {\r\n    super.disableViewMode()\r\n    this.$element.find('.anno-rect, .anno-knob').off('click')\r\n    this.disableDragAction()\r\n  }\r\n\r\n}\r\n","// import render from './render'\r\nimport UI from './UI'\r\nimport RectAnnotation from './annotation/rect'\r\nimport SpanAnnotation from './annotation/span'\r\nimport RelationAnnotation from './annotation/relation'\r\n\r\nexport default {\r\n\r\n  /**\r\n   * UI is a helper for instrumenting UI interactions for creating,\r\n   * editing, and deleting annotations in the browser.\r\n   */\r\n  UI,\r\n\r\n  /**\r\n   * RectAnnotation Class.\r\n   */\r\n  RectAnnotation,\r\n\r\n  /**\r\n   * SpanAnnotation Class.\r\n   */\r\n  SpanAnnotation,\r\n\r\n  /**\r\n   * RelationAnnotation Class.\r\n   */\r\n  RelationAnnotation\r\n}\r\n","/**\r\n * Utilities for TOML format.\r\n */\r\nimport toml from 'toml'\r\n\r\n/**\r\n * Create a TOML String from jsObject.\r\n */\r\nexport function toTomlString (obj, root = true) {\r\n\r\n  let lines = []\r\n\r\n  // `version` and `pdfextract-version` are the first.\r\n  if ('pdfanno' in obj) {\r\n    lines.push(`pdfanno = \"${obj['pdfanno']}\"`)\r\n    lines.push(`pdfextract = \"${obj['pdfextract']}\"`)\r\n    lines.push('')\r\n    delete obj['pdfanno']\r\n    delete obj['pdfextract']\r\n  }\r\n\r\n  Object.keys(obj).forEach(prop => {\r\n\r\n    let val = obj[prop]\r\n    if (typeof val === 'string') {\r\n      lines.push(`${prop} = \"${val}\"`)\r\n      root && lines.push('')\r\n\r\n    } else if (typeof val === 'number') {\r\n      lines.push(`${prop} = ${val}`)\r\n      root && lines.push('')\r\n\r\n    } else if (prop === 'spans' || prop === 'relations') {\r\n      if (isArray(val)) {\r\n        val.forEach(v => {\r\n          lines.push(`[[${prop}]]`)\r\n          lines.push(toTomlString(v, false))\r\n          root && lines.push('')\r\n        })\r\n      }\r\n\r\n    } else if (isArray(val)) {\r\n      lines.push(`${prop} = ${JSON.stringify(val)}`)\r\n      root && lines.push('')\r\n\r\n    }\r\n  })\r\n\r\n  return lines.join('\\n')\r\n}\r\n\r\n/**\r\n * Create a TOML String from jsObject.\r\n */\r\nexport function toTomlString040 (obj, root = true) {\r\n\r\n  let lines = []\r\n\r\n  // `version` and `pdfextract-version` are the first.\r\n  if ('version' in obj) {\r\n    lines.push(`version = \"${obj['version']}\"`)\r\n    lines.push(`pdfextract-version = \"${obj['pdfextract-version']}\"`)\r\n    lines.push('')\r\n    delete obj['version']\r\n    delete obj['pdfextract-version']\r\n  }\r\n\r\n  // #paperanno-ja/issues/38\r\n  // Make all values in `position` as string.\r\n  if ('position' in obj) {\r\n    let position = obj.position\r\n    position = position.map(p => {\r\n      if (typeof p === 'number') {\r\n        return String(p)\r\n      } else {\r\n        return p.map(v => String(v))\r\n      }\r\n    })\r\n    obj.position = position\r\n  }\r\n\r\n  Object.keys(obj).forEach(prop => {\r\n\r\n    let val = obj[prop]\r\n    if (typeof val === 'string') {\r\n      lines.push(`${prop} = \"${val}\"`)\r\n      root && lines.push('')\r\n\r\n    } else if (typeof val === 'number') {\r\n      lines.push(`${prop} = ${val}`)\r\n      root && lines.push('')\r\n\r\n    } else if (isArray(val)) {\r\n      lines.push(`${prop} = ${JSON.stringify(val)}`)\r\n      root && lines.push('')\r\n\r\n    } else if (typeof val === 'object') {\r\n      lines.push(`[${prop}]`)\r\n      lines.push(toTomlString040(val, false))\r\n      root && lines.push('')\r\n    }\r\n  })\r\n\r\n  return lines.join('\\n')\r\n}\r\n\r\n/**\r\n * Create a object from TOML string.\r\n */\r\nexport function fromTomlString (tomlString) {\r\n  try {\r\n    return toml.parse(tomlString)\r\n  } catch (e) {\r\n    console.log('ERROR:', e)\r\n    console.log('TOML:\\n', tomlString)\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Check the val is array.\r\n */\r\nfunction isArray (val) {\r\n  return val && 'length' in val\r\n}\r\n","/**\r\n Functions for annotations rendered over a PDF file.\r\n */\r\nrequire('!style-loader!css-loader!./index.css')\r\nimport { dispatchWindowEvent } from '../shared/util'\r\n\r\nimport EventEmitter from 'events'\r\n\r\nwindow.globalEvent = new EventEmitter()\r\nwindow.globalEvent.setMaxListeners(0)\r\n\r\n// This is the entry point of window.xxx.\r\n// (setting from webpack.config.js)\r\nimport PDFAnnoCore from './src/PDFAnnoCore'\r\nexport default PDFAnnoCore\r\n\r\n// Create an annocation container.\r\nimport AnnotationContainer from './src/annotation/container'\r\nwindow.annotationContainer = new AnnotationContainer()\r\n\r\n// Enable a view mode.\r\nPDFAnnoCore.UI.enableViewMode()\r\n\r\n// The event called at page rendered by pdfjs.\r\nwindow.addEventListener('pagerendered', function (ev) {\r\n  console.log('pagerendered:', ev.detail.pageNumber)\r\n\r\n  // No action, if the viewer is closed.\r\n  if (!window.PDFView.pdfViewer.getPageView(0)) {\r\n    return\r\n  }\r\n\r\n  adjustPageGaps()\r\n  renderAnno()\r\n})\r\n\r\n// Adapt to scale change.\r\nwindow.addEventListener('scalechange', () => {\r\n  console.log('scalechange')\r\n  adjustPageGaps()\r\n  removeAnnoLayer()\r\n  renderAnno()\r\n})\r\n\r\nfunction adjustPageGaps () {\r\n  // Issue Fix.\r\n  // Correctly rendering when changing scaling.\r\n  // The margin between pages is fixed(9px), and never be scaled in default,\r\n  // then manually have to change the margin.\r\n  let scale = window.PDFView.pdfViewer.getPageView(0).viewport.scale\r\n  let borderWidth = `${9 * scale}px`\r\n  let marginBottom = `${-9 * scale}px`\r\n  let marginTop = `${1 * scale}px`\r\n  $('.page').css({\r\n    'border-top-width'    : borderWidth,\r\n    'border-bottom-width' : borderWidth,\r\n    marginBottom,\r\n    marginTop\r\n  })\r\n}\r\n\r\n/*\r\n * Remove the annotation layer and the temporary rendering layer.\r\n */\r\nfunction removeAnnoLayer () {\r\n  // TODO Remove #annoLayer.\r\n  $('#annoLayer, #annoLayer2').remove()\r\n}\r\n\r\n/*\r\n * Render annotations saved in the storage.\r\n */\r\nfunction renderAnno () {\r\n\r\n  // No action, if the viewer is closed.\r\n  if (!window.PDFView.pdfViewer.getPageView(0)) {\r\n    return\r\n  }\r\n\r\n  // TODO make it a global const.\r\n  const svgLayerId = 'annoLayer'\r\n  const annoLayer2Id = 'annoLayer2'\r\n\r\n  // Check already exists.\r\n  if ($('#' + svgLayerId).length > 0) {\r\n    return\r\n  }\r\n  if ($('#' + annoLayer2Id).length > 0) {\r\n    return\r\n  }\r\n\r\n  let leftMargin = ($('#viewer').width() - $('.page').width()) / 2\r\n\r\n  // At window.width < page.width.\r\n  if (leftMargin < 0) {\r\n    leftMargin = 9\r\n  }\r\n\r\n  let height = $('#viewer').height()\r\n\r\n  let width = $('.page').width()\r\n\r\n  // TODO no need ?\r\n  // Add an annotation layer.\r\n  let $annoLayer = $(`<svg id=\"${svgLayerId}\" class=\"${svgLayerId}\"/>`).css({   // TODO CSSClass.\r\n    position   : 'absolute',\r\n    top        : '0px',\r\n    left       : `${leftMargin}px`,\r\n    width      : `${width}px`,\r\n    height     : `${height}px`,\r\n    visibility : 'hidden',\r\n    'z-index'  : 2\r\n  })\r\n  // Add an annotation layer.\r\n  let $annoLayer2 = $(`<div id=\"${annoLayer2Id}\"/>`).addClass('annoLayer').css({   // TODO CSSClass.\r\n    position   : 'absolute',\r\n    top        : '0px',\r\n    left       : `${leftMargin}px`,\r\n    width      : `${width}px`,\r\n    height     : `${height}px`,\r\n    visibility : 'hidden',\r\n    'z-index'  : 2\r\n  })\r\n\r\n  $('#viewer').css({\r\n    position : 'relative'  // TODO css.\r\n  }).append($annoLayer).append($annoLayer2)\r\n\r\n  dispatchWindowEvent('annotationlayercreated')\r\n\r\n  renderAnnotations()\r\n}\r\n\r\n/**\r\n * Render all annotations.\r\n */\r\nfunction renderAnnotations () {\r\n  const annotations = window.annotationContainer.getAllAnnotations()\r\n  if (annotations.length === 0) {\r\n    return\r\n  }\r\n  annotations.forEach(a => {\r\n    a.render()\r\n    a.enableViewMode()\r\n  })\r\n  dispatchWindowEvent('annotationrendered')\r\n}\r\n","import { uuid } from 'anno-ui/src/utils'\r\nimport { ANNO_VERSION, PDFEXTRACT_VERSION } from '../version'\r\nimport { toTomlString, fromTomlString } from '../utils/tomlString'\r\nimport { dispatchWindowEvent } from '../utils/event'\r\n// import { convertToExportY } from '../../../shared/coords'\r\nimport SpanAnnotation from './span'\r\nimport RectAnnotation from './rect'\r\nimport RelationAnnotation from './relation'\r\nimport semver from 'semver'\r\nimport Ajv from 'ajv'\r\n/**\r\n * Annotation Container.\r\n */\r\nexport default class AnnotationContainer {\r\n\r\n  /**\r\n   * Constructor.\r\n   */\r\n  constructor () {\r\n    this.set = new Set()\r\n    this.ajv = new Ajv({\r\n      allErrors : true\r\n    })\r\n    this.validate = this.ajv.compile(require('../../../../schemas/pdfanno-schema.json'))\r\n  }\r\n\r\n  /**\r\n   * Add an annotation to the container.\r\n   */\r\n  add (annotation) {\r\n    this.set.add(annotation)\r\n    dispatchWindowEvent('annotationUpdated')\r\n  }\r\n\r\n  /**\r\n   * Remove the annotation from the container.\r\n   */\r\n  remove (annotation) {\r\n    this.set.delete(annotation)\r\n    dispatchWindowEvent('annotationUpdated')\r\n  }\r\n\r\n  /**\r\n   * Remove all annotations.\r\n   */\r\n  destroy () {\r\n    console.log('AnnotationContainer#destroy')\r\n    this.set.forEach(a => a.destroy())\r\n    this.set = new Set()\r\n  }\r\n\r\n  /**\r\n   * Get all annotations from the container.\r\n   */\r\n  getAllAnnotations () {\r\n    let list = []\r\n    this.set.forEach(a => list.push(a))\r\n    return list\r\n  }\r\n\r\n  /**\r\n   * Get annotations which user select.\r\n   */\r\n  getSelectedAnnotations () {\r\n    return this.getAllAnnotations().filter(a => a.selected)\r\n  }\r\n\r\n  /**\r\n   * Find an annotation by the id which an annotation has.\r\n   */\r\n  findById (uuid) {\r\n    uuid = String(uuid) // `uuid` must be string.\r\n    let annotation = null\r\n    this.set.forEach(a => {\r\n      if (a.uuid === uuid) {\r\n        annotation = a\r\n      }\r\n    })\r\n    return annotation\r\n  }\r\n\r\n  /**\r\n   * Change the annotations color, if the text is the same in an annotation.\r\n   *\r\n   * annoType : span, one-way, two-way, link\r\n   */\r\n  changeColor ({ text, color, uuid, annoType }) {\r\n    console.log('changeColor: ', text, color, uuid)\r\n    if (uuid) {\r\n      const a = this.findById(uuid)\r\n      if (a) {\r\n        a.color = color\r\n        a.render()\r\n        a.enableViewMode()\r\n      }\r\n    } else {\r\n      this.getAllAnnotations()\r\n        .filter(a => a.text === text)\r\n        .filter(a => {\r\n          if (annoType === 'span') {\r\n            return a.type === annoType\r\n          } else if (annoType === 'relation') {\r\n            if (a.type === 'relation' && a.direction === annoType) {\r\n              return true\r\n            }\r\n          }\r\n          return false\r\n        }).forEach(a => {\r\n          a.color = color\r\n          a.render()\r\n          a.enableViewMode()\r\n        })\r\n    }\r\n  }\r\n\r\n  setColor (colorMap) {\r\n    console.log('setColor:', colorMap)\r\n    Object.keys(colorMap).forEach(annoType => {\r\n      if (annoType === 'default') {\r\n        return\r\n      }\r\n      Object.keys(colorMap[annoType]).forEach(text => {\r\n        const color = colorMap[annoType][text]\r\n        this.changeColor({ text, color, annoType })\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Export annotations as a TOML string.\r\n   */\r\n  exportData ({exportType = 'toml'} = {}) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      let dataExport = {}\r\n\r\n      // Set version.\r\n      dataExport.pdfanno = ANNO_VERSION\r\n      dataExport.pdfextract = PDFEXTRACT_VERSION\r\n\r\n      // Only writable.\r\n      const annos = this.getAllAnnotations().filter(a => !a.readOnly)\r\n\r\n      // Sort by create time.\r\n      // This reason is that a relation need start/end annotation ids which are numbered at export.\r\n      annos.sort((a1, a2) => a1.createdAt - a2.createdAt)\r\n\r\n      // The ID for specifing an annotation on a TOML file.\r\n      // This ID is sequential.\r\n      let id = 0\r\n\r\n      // Create export data.\r\n      annos.forEach(annotation => {\r\n\r\n        // Increment to next.\r\n        id++\r\n\r\n        // Span.\r\n        if (annotation.type === 'span') {\r\n          if (!dataExport['spans']) {\r\n            dataExport['spans'] = []\r\n          }\r\n          dataExport['spans'].push(annotation.export(id))\r\n          // Save temporary for relation.\r\n          annotation.exportId = id\r\n\r\n        // Relation.\r\n        } else if (annotation.type === 'relation') {\r\n          if (!dataExport['relations']) {\r\n            dataExport['relations'] = []\r\n          }\r\n          dataExport['relations'].push(annotation.export())\r\n        }\r\n      })\r\n\r\n      // Remove exportId.\r\n      annos.forEach(annotation => {\r\n        delete annotation.exportId\r\n      })\r\n\r\n      // schema Validation\r\n      if (!this.validate(dataExport)) {\r\n        // errorをcatchしづらい\r\n        // reject(this.validate.errors)\r\n        // return\r\n        console.error(JSON.stringify(this.validate.errors))\r\n      }\r\n\r\n      if (exportType === 'json') {\r\n        resolve(dataExport)\r\n      } else {\r\n        resolve(toTomlString(dataExport))\r\n      }\r\n    })\r\n  }\r\n\r\n  _findSpan (tomlObject, id) {\r\n    return tomlObject.spans.find(v => {\r\n      return id === v.id\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Import annotations.\r\n   */\r\n  importAnnotations (data, isPrimary) {\r\n\r\n    const readOnly = !isPrimary\r\n    const colorMap = data.colorMap\r\n\r\n    function getColor (index, type, text) {\r\n      let color = colorMap.default\r\n      if (colorMap[type] && colorMap[type][text]) {\r\n        color = colorMap[type][text]\r\n      }\r\n      return color\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      // Delete old ones.\r\n      this.getAllAnnotations()\r\n        .filter(a => a.readOnly === readOnly)\r\n        .forEach(a => a.destroy())\r\n\r\n      // Add annotations.\r\n      data.annotations.forEach((tomlString, i) => {\r\n\r\n        // Create a object from TOML string.\r\n        let tomlObject = fromTomlString(tomlString)\r\n        if (!tomlObject) {\r\n          return\r\n        }\r\n\r\n        let pdfannoVersion = tomlObject.pdfanno || tomlObject.version\r\n\r\n        if (semver.gt(pdfannoVersion, '0.4.0')) {\r\n          // schema Validation\r\n          if (!this.validate(tomlObject)) {\r\n            reject(this.validate.errors)\r\n            return\r\n          }\r\n          this.importAnnotations041(tomlObject, i, readOnly, getColor)\r\n        } else {\r\n          this.importAnnotations040(tomlObject, i, readOnly, getColor)\r\n        }\r\n      })\r\n\r\n      // Done.\r\n      resolve(true)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Import annotations.\r\n   */\r\n  importAnnotations040 (tomlObject, tomlIndex, readOnly, getColor) {\r\n\r\n    for (const key in tomlObject) {\r\n\r\n      let d = tomlObject[key]\r\n\r\n      // Skip if the content is not object, like version string.\r\n      if (typeof d !== 'object') {\r\n        continue\r\n      }\r\n\r\n      d.uuid = uuid()\r\n      d.readOnly = readOnly\r\n\r\n      if (d.type === 'span') {\r\n\r\n        let span = SpanAnnotation.newInstanceFromTomlObject(d)\r\n        span.color = getColor(tomlIndex, span.type, span.text)\r\n        span.save()\r\n        span.render()\r\n        span.enableViewMode()\r\n\r\n        // Rect.\r\n      } else if (d.type === 'rect') {\r\n\r\n        let rect = RectAnnotation.newInstanceFromTomlObject(d)\r\n        rect.color = getColor(tomlIndex, rect.type, rect.text)\r\n        rect.save()\r\n        rect.render()\r\n        rect.enableViewMode()\r\n\r\n        // Relation.\r\n      } else if (d.type === 'relation') {\r\n\r\n        d.rel1 = tomlObject[d.ids[0]].uuid\r\n        d.rel2 = tomlObject[d.ids[1]].uuid\r\n        let relation = RelationAnnotation.newInstanceFromTomlObject(d)\r\n        relation.color = getColor(tomlIndex, relation.direction, relation.text)\r\n        relation.save()\r\n        relation.render()\r\n        relation.enableViewMode()\r\n\r\n      } else {\r\n        console.log('Unknown: ', key, d)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Import annotations.\r\n   */\r\n  importAnnotations041 (tomlObject, tomlIndex, readOnly, getColor) {\r\n\r\n    // order is important.\r\n    ;['spans', 'relations'].forEach(key => {\r\n      const objs = tomlObject[key]\r\n      if (Array.isArray(objs)) {\r\n        objs.forEach(obj => {\r\n          obj.uuid = uuid()\r\n          obj.readOnly = readOnly\r\n\r\n          if (key === 'spans') {\r\n            const span = SpanAnnotation.newInstanceFromTomlObject(obj)\r\n            span.color = getColor(tomlIndex, 'span', span.text)\r\n            span.save()\r\n            span.render()\r\n            span.enableViewMode()\r\n\r\n          } else if (key === 'relations') {\r\n            const span1 = this._findSpan(tomlObject, obj.head)\r\n            const span2 = this._findSpan(tomlObject, obj.tail)\r\n            obj.rel1 = span1 ? span1.uuid : null\r\n            obj.rel2 = span2 ? span2.uuid : null\r\n            const relation = RelationAnnotation.newInstanceFromTomlObject(obj)\r\n            relation.color = getColor(tomlIndex, relation.direction, relation.text)\r\n            relation.save()\r\n            relation.render()\r\n            relation.enableViewMode()\r\n\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n","'use strict';\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $rule = this,\n    $definition = 'definition' + $lvl,\n    $rDef = $rule.definition,\n    $closingBraces = '';\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\n  if ($isData && $rDef.$data) {\n    $validateCode = 'keywordValidate' + $lvl;\n    var $validateSchema = $rDef.validateSchema;\n    out += ' var ' + ($definition) + ' = RULES.custom[\\'' + ($keyword) + '\\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';\n  } else {\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\n    if (!$ruleValidate) return;\n    $schemaValue = 'validate.schema' + $schemaPath;\n    $validateCode = $ruleValidate.code;\n    $compile = $rDef.compile;\n    $inline = $rDef.inline;\n    $macro = $rDef.macro;\n  }\n  var $ruleErrs = $validateCode + '.errors',\n    $i = 'i' + $lvl,\n    $ruleErr = 'ruleErr' + $lvl,\n    $asyncKeyword = $rDef.async;\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\n  if (!($inline || $macro)) {\n    out += '' + ($ruleErrs) + ' = null;';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($isData && $rDef.$data) {\n    $closingBraces += '}';\n    out += ' if (' + ($schemaValue) + ' === undefined) { ' + ($valid) + ' = true; } else { ';\n    if ($validateSchema) {\n      $closingBraces += '}';\n      out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') { ';\n    }\n  }\n  if ($inline) {\n    if ($rDef.statements) {\n      out += ' ' + ($ruleValidate.validate) + ' ';\n    } else {\n      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';\n    }\n  } else if ($macro) {\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n    $it.schema = $ruleValidate.validate;\n    $it.schemaPath = '';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it).replace(/validate\\.schema/g, $validateCode);\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($code);\n  } else {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    out += '  ' + ($validateCode) + '.call( ';\n    if (it.opts.passContext) {\n      out += 'this';\n    } else {\n      out += 'self';\n    }\n    if ($compile || $rDef.schema === false) {\n      out += ' , ' + ($data) + ' ';\n    } else {\n      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';\n    }\n    out += ' , (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';\n    var def_callRuleValidate = out;\n    out = $$outStack.pop();\n    if ($rDef.errors === false) {\n      out += ' ' + ($valid) + ' = ';\n      if ($asyncKeyword) {\n        out += 'await ';\n      }\n      out += '' + (def_callRuleValidate) + '; ';\n    } else {\n      if ($asyncKeyword) {\n        $ruleErrs = 'customErrors' + $lvl;\n        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = await ' + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\n      } else {\n        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\n      }\n    }\n  }\n  if ($rDef.modifying) {\n    out += ' if (' + ($parentData) + ') ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';\n  }\n  out += '' + ($closingBraces);\n  if ($rDef.valid) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  } else {\n    out += ' if ( ';\n    if ($rDef.valid === undefined) {\n      out += ' !';\n      if ($macro) {\n        out += '' + ($nextValid);\n      } else {\n        out += '' + ($valid);\n      }\n    } else {\n      out += ' ' + (!$rDef.valid) + ' ';\n    }\n    out += ') { ';\n    $errorKeyword = $rule.keyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    var def_customError = out;\n    out = $$outStack.pop();\n    if ($inline) {\n      if ($rDef.errors) {\n        if ($rDef.errors != 'full') {\n          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } ';\n        }\n      } else {\n        if ($rDef.errors === false) {\n          out += ' ' + (def_customError) + ' ';\n        } else {\n          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } } ';\n        }\n      }\n    } else if ($macro) {\n      out += '   var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError(vErrors); ';\n        } else {\n          out += ' validate.errors = vErrors; return false; ';\n        }\n      }\n    } else {\n      if ($rDef.errors === false) {\n        out += ' ' + (def_customError) + ' ';\n      } else {\n        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\";  ';\n        if (it.opts.verbose) {\n          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n        }\n        out += ' } } else { ' + (def_customError) + ' } ';\n      }\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  }\n  return out;\n}\n","'use strict';\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$-]*$/i;\nvar customRuleCode = require('./dotjs/custom');\n\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword\n};\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n * @return {Ajv} this for method chaining\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n\n  if (RULES.keywords[keyword])\n    throw new Error('Keyword ' + keyword + ' is already defined');\n\n  if (!IDENTIFIER.test(keyword))\n    throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n\n  if (definition) {\n    if (definition.macro && definition.valid !== undefined)\n      throw new Error('\"valid\" option cannot be used with macro keywords');\n\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      var i, len = dataType.length;\n      for (i=0; i<len; i++) checkDataType(dataType[i]);\n      for (i=0; i<len; i++) _addRule(keyword, dataType[i], definition);\n    } else {\n      if (dataType) checkDataType(dataType);\n      _addRule(keyword, dataType, definition);\n    }\n\n    var $data = definition.$data === true && this._opts.$data;\n    if ($data && !definition.validate)\n      throw new Error('$data support: \"validate\" function is not defined');\n\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if ($data) {\n        metaSchema = {\n          anyOf: [\n            metaSchema,\n            { '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n\n\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i=0; i<RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n\n    if (!ruleGroup) {\n      ruleGroup = { type: dataType, rules: [] };\n      RULES.push(ruleGroup);\n    }\n\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode,\n      implements: definition.implements\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n\n\n  function checkDataType(dataType) {\n    if (!RULES.types[dataType]) throw new Error('Unknown type ' + dataType);\n  }\n\n  return this;\n}\n\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Ajv} this for method chaining\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i=0; i<RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j=0; j<rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n  return this;\n}\n","'use strict';\n\nvar MissingRefError = require('./error_classes').MissingRef;\n\nmodule.exports = compileAsync;\n\n\n/**\n * Creates validating function for passed schema with asynchronous loading of missing schemas.\n * `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n * @this  Ajv\n * @param {Object}   schema schema object\n * @param {Boolean}  meta optional true to compile meta-schema; this parameter can be skipped\n * @param {Function} callback an optional node-style callback, it is called with 2 parameters: error (or null) and validating function.\n * @return {Promise} promise that resolves with a validating function.\n */\nfunction compileAsync(schema, meta, callback) {\n  /* eslint no-shadow: 0 */\n  /* global Promise */\n  /* jshint validthis: true */\n  var self = this;\n  if (typeof this._opts.loadSchema != 'function')\n    throw new Error('options.loadSchema should be a function');\n\n  if (typeof meta == 'function') {\n    callback = meta;\n    meta = undefined;\n  }\n\n  var p = loadMetaSchemaOf(schema).then(function () {\n    var schemaObj = self._addSchema(schema, undefined, meta);\n    return schemaObj.validate || _compileAsync(schemaObj);\n  });\n\n  if (callback) {\n    p.then(\n      function(v) { callback(null, v); },\n      callback\n    );\n  }\n\n  return p;\n\n\n  function loadMetaSchemaOf(sch) {\n    var $schema = sch.$schema;\n    return $schema && !self.getSchema($schema)\n            ? compileAsync.call(self, { $ref: $schema }, true)\n            : Promise.resolve();\n  }\n\n\n  function _compileAsync(schemaObj) {\n    try { return self._compile(schemaObj); }\n    catch(e) {\n      if (e instanceof MissingRefError) return loadMissingSchema(e);\n      throw e;\n    }\n\n\n    function loadMissingSchema(e) {\n      var ref = e.missingSchema;\n      if (added(ref)) throw new Error('Schema ' + ref + ' is loaded but ' + e.missingRef + ' cannot be resolved');\n\n      var schemaPromise = self._loadingSchemas[ref];\n      if (!schemaPromise) {\n        schemaPromise = self._loadingSchemas[ref] = self._opts.loadSchema(ref);\n        schemaPromise.then(removePromise, removePromise);\n      }\n\n      return schemaPromise.then(function (sch) {\n        if (!added(ref)) {\n          return loadMetaSchemaOf(sch).then(function () {\n            if (!added(ref)) self.addSchema(sch, ref, undefined, meta);\n          });\n        }\n      }).then(function() {\n        return _compileAsync(schemaObj);\n      });\n\n      function removePromise() {\n        delete self._loadingSchemas[ref];\n      }\n\n      function added(ref) {\n        return self._refs[ref] || self._schemas[ref];\n      }\n    }\n  }\n}\n","'use strict';\n\nvar KEYWORDS = [\n  'multipleOf',\n  'maximum',\n  'exclusiveMaximum',\n  'minimum',\n  'exclusiveMinimum',\n  'maxLength',\n  'minLength',\n  'pattern',\n  'additionalItems',\n  'maxItems',\n  'minItems',\n  'uniqueItems',\n  'maxProperties',\n  'minProperties',\n  'required',\n  'additionalProperties',\n  'enum',\n  'format',\n  'const'\n];\n\nmodule.exports = function (metaSchema, keywordsJsonPointers) {\n  for (var i=0; i<keywordsJsonPointers.length; i++) {\n    metaSchema = JSON.parse(JSON.stringify(metaSchema));\n    var segments = keywordsJsonPointers[i].split('/');\n    var keywords = metaSchema;\n    var j;\n    for (j=1; j<segments.length; j++)\n      keywords = keywords[segments[j]];\n\n    for (j=0; j<KEYWORDS.length; j++) {\n      var key = KEYWORDS[j];\n      var schema = keywords[key];\n      if (schema) {\n        keywords[key] = {\n          anyOf: [\n            schema,\n            { $ref: 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n    }\n  }\n\n  return metaSchema;\n};\n","'use strict';\nmodule.exports = function generate_uniqueItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (($schema || $isData) && it.opts.uniqueItems !== false) {\n    if ($isData) {\n      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'boolean\\') ' + ($valid) + ' = false; else { ';\n    }\n    out += ' var i = ' + ($data) + '.length , ' + ($valid) + ' = true , j; if (i > 1) { ';\n    var $itemType = it.schema.items && it.schema.items.type,\n      $typeIsArray = Array.isArray($itemType);\n    if (!$itemType || $itemType == 'object' || $itemType == 'array' || ($typeIsArray && ($itemType.indexOf('object') >= 0 || $itemType.indexOf('array') >= 0))) {\n      out += ' outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } ';\n    } else {\n      out += ' var itemIndices = {}, item; for (;i--;) { var item = ' + ($data) + '[i]; ';\n      var $method = 'checkDataType' + ($typeIsArray ? 's' : '');\n      out += ' if (' + (it.util[$method]($itemType, 'item', true)) + ') continue; ';\n      if ($typeIsArray) {\n        out += ' if (typeof item == \\'string\\') item = \\'\"\\' + item; ';\n      }\n      out += ' if (typeof itemIndices[item] == \\'number\\') { ' + ($valid) + ' = false; j = itemIndices[item]; break; } itemIndices[item] = i; } ';\n    }\n    out += ' } ';\n    if ($isData) {\n      out += '  }  ';\n    }\n    out += ' if (!' + ($valid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('uniqueItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT have duplicate items (items ## \\' + j + \\' and \\' + i + \\' are identical)\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema:  ';\n        if ($isData) {\n          out += 'validate.schema' + ($schemaPath);\n        } else {\n          out += '' + ($schema);\n        }\n        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_required(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    if ($schema.length < it.opts.loopRequired && it.schema.properties && Object.keys(it.schema.properties).length) {\n      var $required = [];\n      var arr1 = $schema;\n      if (arr1) {\n        var $property, i1 = -1,\n          l1 = arr1.length - 1;\n        while (i1 < l1) {\n          $property = arr1[i1 += 1];\n          var $propertySch = it.schema.properties[$property];\n          if (!($propertySch && it.util.schemaHasRules($propertySch, it.RULES.all))) {\n            $required[$required.length] = $property;\n          }\n        }\n      }\n    } else {\n      var $required = $schema;\n    }\n  }\n  if ($isData || $required.length) {\n    var $currentErrorPath = it.errorPath,\n      $loopRequired = $isData || $required.length >= it.opts.loopRequired,\n      $ownProperties = it.opts.ownProperties;\n    if ($breakOnError) {\n      out += ' var missing' + ($lvl) + '; ';\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        out += ' var ' + ($valid) + ' = true; ';\n        if ($isData) {\n          out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { ' + ($valid) + ' = ' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] !== undefined ';\n        if ($ownProperties) {\n          out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += '; if (!' + ($valid) + ') break; } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n        out += '  if (!' + ($valid) + ') {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      } else {\n        out += ' if ( ';\n        var arr2 = $required;\n        if (arr2) {\n          var $propertyKey, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $propertyKey = arr2[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ') {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      }\n    } else {\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        if ($isData) {\n          out += ' if (' + ($vSchema) + ' && !Array.isArray(' + ($vSchema) + ')) {  var err =   '; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is a required property';\n              } else {\n                out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (' + ($vSchema) + ' !== undefined) { ';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { if (' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] === undefined ';\n        if ($ownProperties) {\n          out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += ') {  var err =   '; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n      } else {\n        var arr3 = $required;\n        if (arr3) {\n          var $propertyKey, i3 = -1,\n            l3 = arr3.length - 1;\n          while (i3 < l3) {\n            $propertyKey = arr3[i3 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'';\n                if (it.opts._errorDataPathProperty) {\n                  out += 'is a required property';\n                } else {\n                  out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                }\n                out += '\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n    }\n    it.errorPath = $currentErrorPath;\n  } else if ($breakOnError) {\n    out += ' if (true) {';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_propertyNames(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    var $key = 'key' + $lvl,\n      $idx = 'idx' + $lvl,\n      $i = 'i' + $lvl,\n      $invalidName = '\\' + ' + $key + ' + \\'',\n      $dataNxt = $it.dataLevel = it.dataLevel + 1,\n      $nextData = 'data' + $dataNxt,\n      $dataProperties = 'dataProperties' + $lvl,\n      $ownProperties = it.opts.ownProperties,\n      $currentBaseId = it.baseId;\n    out += ' var ' + ($errs) + ' = errors; ';\n    if ($ownProperties) {\n      out += ' var ' + ($dataProperties) + ' = undefined; ';\n    }\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    out += ' var startErrs' + ($lvl) + ' = errors; ';\n    var $passData = $key;\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (!' + ($nextValid) + ') { for (var ' + ($i) + '=startErrs' + ($lvl) + '; ' + ($i) + '<errors; ' + ($i) + '++) { vErrors[' + ($i) + '].propertyName = ' + ($key) + '; }   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('propertyNames') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { propertyName: \\'' + ($invalidName) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'property name \\\\\\'' + ($invalidName) + '\\\\\\' is invalid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    if ($breakOnError) {\n      out += ' break; ';\n    }\n    out += ' } }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $dataProperties = 'dataProperties' + $lvl;\n  var $schemaKeys = Object.keys($schema || {}),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.$data && $required.$data) && $required.length < it.opts.loopRequired) var $requiredHash = it.util.toHash($required);\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  if ($checkAdditional) {\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 8) {\n          out += ' || validate.schema' + ($schemaPath) + '.hasOwnProperty(' + ($key) + ') ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey, i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n        } else {\n          out += ' ' + ($nextValid) + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is an invalid additional property';\n              } else {\n                out += 'should NOT have additional properties';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + (__err) + ']); ';\n            } else {\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + ($errs) + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr3 = $schemaKeys;\n    if (arr3) {\n      var $propertyKey, i3 = -1,\n        l3 = arr3.length - 1;\n      while (i3 < l3) {\n        $propertyKey = arr3[i3 += 1];\n        var $sch = $schema[$propertyKey];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + ($code) + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if ( ' + ($useData) + ' === undefined ';\n              if ($ownProperties) {\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n              }\n              out += ') { ' + ($nextValid) + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if ( ' + ($useData) + ' === undefined ';\n                if ($ownProperties) {\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ') { ' + ($nextValid) + ' = true; } else { ';\n              } else {\n                out += ' if (' + ($useData) + ' !== undefined ';\n                if ($ownProperties) {\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ' ) { ';\n              }\n            }\n            out += ' ' + ($code) + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($pPropertyKeys.length) {\n    var arr4 = $pPropertyKeys;\n    if (arr4) {\n      var $pProperty, i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $pProperty = arr4[i4 += 1];\n        var $sch = $pProperties[$pProperty];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_pattern(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n  }\n  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('pattern') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match pattern \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_oneOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $prevValid = 'prevValid' + $lvl,\n    $passingSchemas = 'passingSchemas' + $lvl;\n  out += 'var ' + ($errs) + ' = errors , ' + ($prevValid) + ' = false , ' + ($valid) + ' = false , ' + ($passingSchemas) + ' = null; ';\n  var $wasComposite = it.compositeRule;\n  it.compositeRule = $it.compositeRule = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n      } else {\n        out += ' var ' + ($nextValid) + ' = true; ';\n      }\n      if ($i) {\n        out += ' if (' + ($nextValid) + ' && ' + ($prevValid) + ') { ' + ($valid) + ' = false; ' + ($passingSchemas) + ' = [' + ($passingSchemas) + ', ' + ($i) + ']; } else { ';\n        $closingBraces += '}';\n      }\n      out += ' if (' + ($nextValid) + ') { ' + ($valid) + ' = ' + ($prevValid) + ' = true; ' + ($passingSchemas) + ' = ' + ($i) + '; }';\n    }\n  }\n  it.compositeRule = $it.compositeRule = $wasComposite;\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('oneOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { passingSchemas: ' + ($passingSchemas) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match exactly one schema in oneOf\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; return false; ';\n    }\n  }\n  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_not(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.createErrors = false;\n    var $allErrorsOption;\n    if ($it.opts.allErrors) {\n      $allErrorsOption = $it.opts.allErrors;\n      $it.opts.allErrors = false;\n    }\n    out += ' ' + (it.validate($it)) + ' ';\n    $it.createErrors = true;\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (' + ($nextValid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    out += '  var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if ($breakOnError) {\n      out += ' if (false) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_multipleOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  out += 'var division' + ($lvl) + ';if (';\n  if ($isData) {\n    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \\'number\\' || ';\n  }\n  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';\n  if (it.opts.multipleOfPrecision) {\n    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';\n  } else {\n    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';\n  }\n  out += ' ) ';\n  if ($isData) {\n    out += '  )  ';\n  }\n  out += ' ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('multipleOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be multiple of ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_items(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId;\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if (Array.isArray($schema)) {\n    var $additionalItems = it.schema.additionalItems;\n    if ($additionalItems === false) {\n      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';\n      var $currErrSchemaPath = $errSchemaPath;\n      $errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += '  if (!' + ($valid) + ') {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ('additionalItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should NOT have more than ' + ($schema.length) + ' items\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n      out += ' } ';\n      $errSchemaPath = $currErrSchemaPath;\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';\n          var $passData = $data + '[' + $i + ']';\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + '[' + $i + ']';\n          $it.errSchemaPath = $errSchemaPath + '/' + $i;\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);\n          $it.dataPathArr[$dataNxt] = $i;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n    if (typeof $additionalItems == 'object' && it.util.schemaHasRules($additionalItems, it.RULES.all)) {\n      $it.schema = $additionalItems;\n      $it.schemaPath = it.schemaPath + '.additionalItems';\n      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n      var $passData = $data + '[' + $idx + ']';\n      $it.dataPathArr[$dataNxt] = $idx;\n      var $code = it.validate($it);\n      $it.baseId = $currentBaseId;\n      if (it.util.varOccurences($code, $nextData) < 2) {\n        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n      } else {\n        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n      }\n      if ($breakOnError) {\n        out += ' if (!' + ($nextValid) + ') break; ';\n      }\n      out += ' } }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  } else if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    if ($breakOnError) {\n      out += ' if (!' + ($nextValid) + ') break; ';\n    }\n    out += ' }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_if(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $thenSch = it.schema['then'],\n    $elseSch = it.schema['else'],\n    $thenPresent = $thenSch !== undefined && it.util.schemaHasRules($thenSch, it.RULES.all),\n    $elsePresent = $elseSch !== undefined && it.util.schemaHasRules($elseSch, it.RULES.all),\n    $currentBaseId = $it.baseId;\n  if ($thenPresent || $elsePresent) {\n    var $ifClause;\n    $it.createErrors = false;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = true;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    out += '  ' + (it.validate($it)) + ' ';\n    $it.baseId = $currentBaseId;\n    $it.createErrors = true;\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    if ($thenPresent) {\n      out += ' if (' + ($nextValid) + ') {  ';\n      $it.schema = it.schema['then'];\n      $it.schemaPath = it.schemaPath + '.then';\n      $it.errSchemaPath = it.errSchemaPath + '/then';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'then\\'; ';\n      } else {\n        $ifClause = '\\'then\\'';\n      }\n      out += ' } ';\n      if ($elsePresent) {\n        out += ' else { ';\n      }\n    } else {\n      out += ' if (!' + ($nextValid) + ') { ';\n    }\n    if ($elsePresent) {\n      $it.schema = it.schema['else'];\n      $it.schemaPath = it.schemaPath + '.else';\n      $it.errSchemaPath = it.errSchemaPath + '/else';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'else\\'; ';\n      } else {\n        $ifClause = '\\'else\\'';\n      }\n      out += ' } ';\n    }\n    out += ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('if') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { failingKeyword: ' + ($ifClause) + ' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match \"\\' + ' + ($ifClause) + ' + \\'\" schema\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' }   ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n    out = it.util.cleanUpCode(out);\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_format(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  if (it.opts.format === false) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n    return out;\n  }\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $unknownFormats = it.opts.unknownFormats,\n    $allowUnknown = Array.isArray($unknownFormats);\n  if ($isData) {\n    var $format = 'format' + $lvl,\n      $isObject = 'isObject' + $lvl,\n      $formatType = 'formatType' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var ' + ($isObject) + ' = typeof ' + ($format) + ' == \\'object\\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; var ' + ($formatType) + ' = ' + ($isObject) + ' && ' + ($format) + '.type || \\'string\\'; if (' + ($isObject) + ') { ';\n    if (it.async) {\n      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';\n    }\n    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n    }\n    out += ' (';\n    if ($unknownFormats != 'ignore') {\n      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';\n      if ($allowUnknown) {\n        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';\n      }\n      out += ') || ';\n    }\n    out += ' (' + ($format) + ' && ' + ($formatType) + ' == \\'' + ($ruleType) + '\\' && !(typeof ' + ($format) + ' == \\'function\\' ? ';\n    if (it.async) {\n      out += ' (async' + ($lvl) + ' ? await ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';\n    } else {\n      out += ' ' + ($format) + '(' + ($data) + ') ';\n    }\n    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';\n  } else {\n    var $format = it.formats[$schema];\n    if (!$format) {\n      if ($unknownFormats == 'ignore') {\n        it.logger.warn('unknown format \"' + $schema + '\" ignored in schema at path \"' + it.errSchemaPath + '\"');\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else if ($allowUnknown && $unknownFormats.indexOf($schema) >= 0) {\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else {\n        throw new Error('unknown format \"' + $schema + '\" is used in schema at path \"' + it.errSchemaPath + '\"');\n      }\n    }\n    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;\n    var $formatType = $isObject && $format.type || 'string';\n    if ($isObject) {\n      var $async = $format.async === true;\n      $format = $format.validate;\n    }\n    if ($formatType != $ruleType) {\n      if ($breakOnError) {\n        out += ' if (true) { ';\n      }\n      return out;\n    }\n    if ($async) {\n      if (!it.async) throw new Error('async format in sync schema');\n      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';\n      out += ' if (!(await ' + ($formatRef) + '(' + ($data) + '))) { ';\n    } else {\n      out += ' if (! ';\n      var $formatRef = 'formats' + it.util.getProperty($schema);\n      if ($isObject) $formatRef += '.validate';\n      if (typeof $format == 'function') {\n        out += ' ' + ($formatRef) + '(' + ($data) + ') ';\n      } else {\n        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';\n      }\n      out += ') { ';\n    }\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('format') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match format \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_enum(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $i = 'i' + $lvl,\n    $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ';';\n  if ($isData) {\n    out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n  }\n  out += '' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<' + ($vSchema) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; }';\n  if ($isData) {\n    out += '  }  ';\n  }\n  out += ' if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('enum') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValues: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to one of the allowed values\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_dependencies(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $schemaDeps = {},\n    $propertyDeps = {},\n    $ownProperties = it.opts.ownProperties;\n  for ($property in $schema) {\n    var $sch = $schema[$property];\n    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;\n    $deps[$property] = $sch;\n  }\n  out += 'var ' + ($errs) + ' = errors;';\n  var $currentErrorPath = it.errorPath;\n  out += 'var missing' + ($lvl) + ';';\n  for (var $property in $propertyDeps) {\n    $deps = $propertyDeps[$property];\n    if ($deps.length) {\n      out += ' if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      if ($breakOnError) {\n        out += ' && ( ';\n        var arr1 = $deps;\n        if (arr1) {\n          var $propertyKey, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $propertyKey = arr1[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ')) {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should have ';\n            if ($deps.length == 1) {\n              out += 'property ' + (it.util.escapeQuotes($deps[0]));\n            } else {\n              out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n            }\n            out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      } else {\n        out += ' ) { ';\n        var arr2 = $deps;\n        if (arr2) {\n          var $propertyKey, i2 = -1,\n            l2 = arr2.length - 1;\n          while (i2 < l2) {\n            $propertyKey = arr2[i2 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should have ';\n                if ($deps.length == 1) {\n                  out += 'property ' + (it.util.escapeQuotes($deps[0]));\n                } else {\n                  out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n                }\n                out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n      out += ' }   ';\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n  }\n  it.errorPath = $currentErrorPath;\n  var $currentBaseId = $it.baseId;\n  for (var $property in $schemaDeps) {\n    var $sch = $schemaDeps[$property];\n    if (it.util.schemaHasRules($sch, it.RULES.all)) {\n      out += ' ' + ($nextValid) + ' = true; if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      out += ') { ';\n      $it.schema = $sch;\n      $it.schemaPath = $schemaPath + it.util.getProperty($property);\n      $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_contains(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId,\n    $nonEmptySchema = it.util.schemaHasRules($schema, it.RULES.all);\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($nonEmptySchema) {\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($nextValid) + ' = false; for (var ' + ($idx) + ' = 0; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    out += ' if (' + ($nextValid) + ') break; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($nextValid) + ') {';\n  } else {\n    out += ' if (' + ($data) + '.length == 0) {';\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('contains') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should contain a valid item\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } else { ';\n  if ($nonEmptySchema) {\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n  }\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_const(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!$isData) {\n    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('const') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValue: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to constant\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_comment(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $comment = it.util.toQuotedString($schema);\n  if (it.opts.$comment === true) {\n    out += ' console.log(' + ($comment) + ');';\n  } else if (typeof it.opts.$comment == 'function') {\n    out += ' self._opts.$comment(' + ($comment) + ', ' + (it.util.toQuotedString($errSchemaPath)) + ', validate.root.schema);';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_anyOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $noEmptySchema = $schema.every(function($sch) {\n    return it.util.schemaHasRules($sch, it.RULES.all);\n  });\n  if ($noEmptySchema) {\n    var $currentBaseId = $it.baseId;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('anyOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match some schema in anyOf\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n    out = it.util.cleanUpCode(out);\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_allOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $allSchemasEmpty = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n    }\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n    if ($refVal === undefined) {\n      var $message = it.MissingRefError.message(it.baseId, $schema);\n      if (it.opts.missingRefs == 'fail') {\n        it.logger.error($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('$ref') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \\'' + (it.util.escapeQuotes($schema)) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        it.logger.warn($message);\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        throw new it.MissingRefError(it.baseId, $schema, $message);\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + ($code) + ' ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true || (it.async && $refVal.$async !== false);\n      $refCode = $refVal.code;\n    }\n  }\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    if (it.opts.passContext) {\n      out += ' ' + ($refCode) + '.call(this, ';\n    } else {\n      out += ' ' + ($refCode) + '( ';\n    }\n    out += ' ' + ($data) + ', (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n      if ($breakOnError) {\n        out += ' var ' + ($valid) + '; ';\n      }\n      out += ' try { await ' + (__callValidate) + '; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = true; ';\n      }\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = false; ';\n      }\n      out += ' } ';\n      if ($breakOnError) {\n        out += ' if (' + ($valid) + ') { ';\n      }\n    } else {\n      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n  return out;\n}\n","'use strict';\n\n//all requires must be explicit because browserify won't work with dynamic requires\nmodule.exports = {\n  '$ref': require('./ref'),\n  allOf: require('./allOf'),\n  anyOf: require('./anyOf'),\n  '$comment': require('./comment'),\n  const: require('./const'),\n  contains: require('./contains'),\n  dependencies: require('./dependencies'),\n  'enum': require('./enum'),\n  format: require('./format'),\n  'if': require('./if'),\n  items: require('./items'),\n  maximum: require('./_limit'),\n  minimum: require('./_limit'),\n  maxItems: require('./_limitItems'),\n  minItems: require('./_limitItems'),\n  maxLength: require('./_limitLength'),\n  minLength: require('./_limitLength'),\n  maxProperties: require('./_limitProperties'),\n  minProperties: require('./_limitProperties'),\n  multipleOf: require('./multipleOf'),\n  not: require('./not'),\n  oneOf: require('./oneOf'),\n  pattern: require('./pattern'),\n  properties: require('./properties'),\n  propertyNames: require('./propertyNames'),\n  required: require('./required'),\n  uniqueItems: require('./uniqueItems'),\n  validate: require('./validate')\n};\n","'use strict';\n\nvar ruleModules = require('../dotjs')\n  , toHash = require('./util').toHash;\n\nmodule.exports = function rules() {\n  var RULES = [\n    { type: 'number',\n      rules: [ { 'maximum': ['exclusiveMaximum'] },\n               { 'minimum': ['exclusiveMinimum'] }, 'multipleOf', 'format'] },\n    { type: 'string',\n      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },\n    { type: 'array',\n      rules: [ 'maxItems', 'minItems', 'items', 'contains', 'uniqueItems' ] },\n    { type: 'object',\n      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames',\n               { 'properties': ['additionalProperties', 'patternProperties'] } ] },\n    { rules: [ '$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf', 'if' ] }\n  ];\n\n  var ALL = [ 'type', '$comment' ];\n  var KEYWORDS = [\n    '$schema', '$id', 'id', '$data', 'title',\n    'description', 'default', 'definitions',\n    'examples', 'readOnly', 'writeOnly',\n    'contentMediaType', 'contentEncoding',\n    'additionalItems', 'then', 'else'\n  ];\n  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];\n  RULES.all = toHash(ALL);\n  RULES.types = toHash(TYPES);\n\n  RULES.forEach(function (group) {\n    group.rules = group.rules.map(function (keyword) {\n      var implKeywords;\n      if (typeof keyword == 'object') {\n        var key = Object.keys(keyword)[0];\n        implKeywords = keyword[key];\n        keyword = key;\n        implKeywords.forEach(function (k) {\n          ALL.push(k);\n          RULES.all[k] = true;\n        });\n      }\n      ALL.push(keyword);\n      var rule = RULES.all[keyword] = {\n        keyword: keyword,\n        code: ruleModules[keyword],\n        implements: implKeywords\n      };\n      return rule;\n    });\n\n    RULES.all.$comment = {\n      keyword: '$comment',\n      code: ruleModules.$comment\n    };\n\n    if (group.type) RULES.types[group.type] = group;\n  });\n\n  RULES.keywords = toHash(ALL.concat(KEYWORDS));\n  RULES.custom = {};\n\n  return RULES;\n};\n","'use strict';\n\nvar util = require('./util');\n\nvar DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nvar DAYS = [0,31,28,31,30,31,30,31,31,30,31,30,31];\nvar TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d:\\d\\d)?$/i;\nvar HOSTNAME = /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i;\nvar URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nvar URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\n// uri-template: https://tools.ietf.org/html/rfc6570\nvar URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\n// For the source: https://gist.github.com/dperini/729294\n// For test cases: https://mathiasbynens.be/demo/url-regex\n// @todo Delete current URL in favour of the commented out URL rule when this issue is fixed https://github.com/eslint/eslint/issues/7983.\n// var URL = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nvar URL = /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i;\nvar UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nvar JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nvar JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nvar RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\n\n\nmodule.exports = formats;\n\nfunction formats(mode) {\n  mode = mode == 'full' ? 'full' : 'fast';\n  return util.copy(formats[mode]);\n}\n\n\nformats.fast = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date: /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)$/i,\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  uri: /^(?:[a-z][a-z0-9+-.]*:)(?:\\/?\\/)?[^\\s]*$/i,\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  email: /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n  hostname: HOSTNAME,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: UUID,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nformats.full = {\n  date: date,\n  time: time,\n  'date-time': date_time,\n  uri: uri,\n  'uri-reference': URIREF,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&''*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname: hostname,\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  uuid: UUID,\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nfunction isLeapYear(year) {\n  // https://tools.ietf.org/html/rfc3339#appendix-C\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\n\nfunction date(str) {\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n  var matches = str.match(DATE);\n  if (!matches) return false;\n\n  var year = +matches[1];\n  var month = +matches[2];\n  var day = +matches[3];\n\n  return month >= 1 && month <= 12 && day >= 1 &&\n          day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]);\n}\n\n\nfunction time(str, full) {\n  var matches = str.match(TIME);\n  if (!matches) return false;\n\n  var hour = matches[1];\n  var minute = matches[2];\n  var second = matches[3];\n  var timeZone = matches[5];\n  return ((hour <= 23 && minute <= 59 && second <= 59) ||\n          (hour == 23 && minute == 59 && second == 60)) &&\n         (!full || timeZone);\n}\n\n\nvar DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n  // http://tools.ietf.org/html/rfc3339#section-5.6\n  var dateTime = str.split(DATE_TIME_SEPARATOR);\n  return dateTime.length == 2 && date(dateTime[0]) && time(dateTime[1], true);\n}\n\n\nfunction hostname(str) {\n  // https://tools.ietf.org/html/rfc1034#section-3.5\n  // https://tools.ietf.org/html/rfc1123#section-2\n  return str.length <= 255 && HOSTNAME.test(str);\n}\n\n\nvar NOT_URI_FRAGMENT = /\\/|:/;\nfunction uri(str) {\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str);\n}\n\n\nvar Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n  if (Z_ANCHOR.test(str)) return false;\n  try {\n    new RegExp(str);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n","'use strict';\n\n\nvar Cache = module.exports = function Cache() {\n  this._cache = {};\n};\n\n\nCache.prototype.put = function Cache_put(key, value) {\n  this._cache[key] = value;\n};\n\n\nCache.prototype.get = function Cache_get(key) {\n  return this._cache[key];\n};\n\n\nCache.prototype.del = function Cache_del(key) {\n  delete this._cache[key];\n};\n\n\nCache.prototype.clear = function Cache_clear() {\n  this._cache = {};\n};\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","'use strict';\n\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nmodule.exports = function ucs2length(str) {\n  var length = 0\n    , len = str.length\n    , pos = 0\n    , value;\n  while (pos < len) {\n    length++;\n    value = str.charCodeAt(pos++);\n    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos);\n      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate\n    }\n  }\n  return length;\n};\n","/** @license URI.js v4.2.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.URI = global.URI || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction merge() {\n    for (var _len = arguments.length, sets = Array(_len), _key = 0; _key < _len; _key++) {\n        sets[_key] = arguments[_key];\n    }\n\n    if (sets.length > 1) {\n        sets[0] = sets[0].slice(0, -1);\n        var xl = sets.length - 1;\n        for (var x = 1; x < xl; ++x) {\n            sets[x] = sets[x].slice(1, -1);\n        }\n        sets[xl] = sets[xl].slice(1);\n        return sets.join('');\n    } else {\n        return sets[0];\n    }\n}\nfunction subexp(str) {\n    return \"(?:\" + str + \")\";\n}\nfunction typeOf(o) {\n    return o === undefined ? \"undefined\" : o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase();\n}\nfunction toUpperCase(str) {\n    return str.toUpperCase();\n}\nfunction toArray(obj) {\n    return obj !== undefined && obj !== null ? obj instanceof Array ? obj : typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj) : [];\n}\nfunction assign(target, source) {\n    var obj = target;\n    if (source) {\n        for (var key in source) {\n            obj[key] = source[key];\n        }\n    }\n    return obj;\n}\n\nfunction buildExps(isIRI) {\n    var ALPHA$$ = \"[A-Za-z]\",\n        CR$ = \"[\\\\x0D]\",\n        DIGIT$$ = \"[0-9]\",\n        DQUOTE$$ = \"[\\\\x22]\",\n        HEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),\n        //case-insensitive\n    LF$$ = \"[\\\\x0A]\",\n        SP$$ = \"[\\\\x20]\",\n        PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),\n        //expanded\n    GEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n        SUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n        RESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n        UCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",\n        //subset, excludes bidi control characters\n    IPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",\n        //subset\n    UNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n        SCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n        USERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n        DEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n        DEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),\n        //relaxed parsing rules\n    IPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n        H16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n        LS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n        IPV6ADDRESS1$ = subexp(subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$),\n        //                           6( h16 \":\" ) ls32\n    IPV6ADDRESS2$ = subexp(\"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$),\n        //                      \"::\" 5( h16 \":\" ) ls32\n    IPV6ADDRESS3$ = subexp(subexp(H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$),\n        //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n    IPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$),\n        //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n    IPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$),\n        //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n    IPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" + H16$ + \"\\\\:\" + LS32$),\n        //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n    IPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\" + LS32$),\n        //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n    IPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\" + H16$),\n        //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n    IPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"),\n        //[ *6( h16 \":\" ) h16 ] \"::\"\n    IPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n        ZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),\n        //RFC 6874\n    IPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),\n        //RFC 6874\n    IPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),\n        //RFC 6874, with relaxed parsing rules\n    IPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n        IP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),\n        //RFC 6874\n    REG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n        HOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n        PORT$ = subexp(DIGIT$$ + \"*\"),\n        AUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n        PCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n        SEGMENT$ = subexp(PCHAR$ + \"*\"),\n        SEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n        SEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n        PATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n        PATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),\n        //simplified\n    PATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),\n        //simplified\n    PATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),\n        //simplified\n    PATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n        PATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n        QUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n        FRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n        HIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n        URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n        RELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n        RELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n        URI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n        ABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n        GENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        RELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        ABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n        SAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        AUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\";\n    return {\n        NOT_SCHEME: new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n        NOT_USERINFO: new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_HOST: new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_PATH: new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_PATH_NOSCHEME: new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_QUERY: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n        NOT_FRAGMENT: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n        ESCAPE: new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        UNRESERVED: new RegExp(UNRESERVED$$, \"g\"),\n        OTHER_CHARS: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n        PCT_ENCODED: new RegExp(PCT_ENCODED$, \"g\"),\n        IPV4ADDRESS: new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n        IPV6ADDRESS: new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\") //RFC 6874, with relaxed parsing rules\n    };\n}\nvar URI_PROTOCOL = buildExps(false);\n\nvar IRI_PROTOCOL = buildExps(true);\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/** Highest positive signed 32-bit float value */\n\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nvar regexPunycode = /^xn--/;\nvar regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error$1(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tvar result = [];\n\tvar length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tvar parts = string.split('@');\n\tvar result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tvar labels = string.split('.');\n\tvar encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t// Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nvar ucs2encode = function ucs2encode(array) {\n\treturn String.fromCodePoint.apply(String, toConsumableArray(array));\n};\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nvar basicToDigit = function basicToDigit(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nvar digitToBasic = function digitToBasic(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nvar adapt = function adapt(delta, numPoints, firstTime) {\n\tvar k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (; /* no initialization */delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nvar decode = function decode(input) {\n\t// Don't use UCS-2.\n\tvar output = [];\n\tvar inputLength = input.length;\n\tvar i = 0;\n\tvar n = initialN;\n\tvar bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tvar basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (var j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror$1('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (var index = basic > 0 ? basic + 1 : 0; index < inputLength;) /* no final expression */{\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tvar oldi = i;\n\t\tfor (var w = 1, k = base;; /* no condition */k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror$1('invalid-input');\n\t\t\t}\n\n\t\t\tvar digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror$1('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror$1('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\t\t}\n\n\t\tvar out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror$1('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\t}\n\n\treturn String.fromCodePoint.apply(String, output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nvar encode = function encode(input) {\n\tvar output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tvar inputLength = input.length;\n\n\t// Initialize the state.\n\tvar n = initialN;\n\tvar delta = 0;\n\tvar bias = initialBias;\n\n\t// Handle the basic code points.\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar _currentValue2 = _step.value;\n\n\t\t\tif (_currentValue2 < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(_currentValue2));\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar basicLength = output.length;\n\tvar handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tvar m = maxInt;\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = input[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar currentValue = _step2.value;\n\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow.\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror$1('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tvar _iteratorNormalCompletion3 = true;\n\t\tvar _didIteratorError3 = false;\n\t\tvar _iteratorError3 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator3 = input[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\tvar _currentValue = _step3.value;\n\n\t\t\t\tif (_currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror$1('overflow');\n\t\t\t\t}\n\t\t\t\tif (_currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\t\tvar q = delta;\n\t\t\t\t\tfor (var k = base;; /* no condition */k += base) {\n\t\t\t\t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar qMinusT = q - t;\n\t\t\t\t\t\tvar baseMinusT = base - t;\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError3 = true;\n\t\t\t_iteratorError3 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t_iterator3.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nvar toUnicode = function toUnicode(input) {\n\treturn mapDomain(input, function (string) {\n\t\treturn regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nvar toASCII = function toASCII(input) {\n\treturn mapDomain(input, function (string) {\n\t\treturn regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nvar punycode = {\n\t/**\n  * A string representing the current Punycode.js version number.\n  * @memberOf punycode\n  * @type String\n  */\n\t'version': '2.1.0',\n\t/**\n  * An object of methods to convert from JavaScript's internal character\n  * representation (UCS-2) to Unicode code points, and back.\n  * @see <https://mathiasbynens.be/notes/javascript-encoding>\n  * @memberOf punycode\n  * @type Object\n  */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\n/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\nvar SCHEMES = {};\nfunction pctEncChar(chr) {\n    var c = chr.charCodeAt(0);\n    var e = void 0;\n    if (c < 16) e = \"%0\" + c.toString(16).toUpperCase();else if (c < 128) e = \"%\" + c.toString(16).toUpperCase();else if (c < 2048) e = \"%\" + (c >> 6 | 192).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();else e = \"%\" + (c >> 12 | 224).toString(16).toUpperCase() + \"%\" + (c >> 6 & 63 | 128).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();\n    return e;\n}\nfunction pctDecChars(str) {\n    var newStr = \"\";\n    var i = 0;\n    var il = str.length;\n    while (i < il) {\n        var c = parseInt(str.substr(i + 1, 2), 16);\n        if (c < 128) {\n            newStr += String.fromCharCode(c);\n            i += 3;\n        } else if (c >= 194 && c < 224) {\n            if (il - i >= 6) {\n                var c2 = parseInt(str.substr(i + 4, 2), 16);\n                newStr += String.fromCharCode((c & 31) << 6 | c2 & 63);\n            } else {\n                newStr += str.substr(i, 6);\n            }\n            i += 6;\n        } else if (c >= 224) {\n            if (il - i >= 9) {\n                var _c = parseInt(str.substr(i + 4, 2), 16);\n                var c3 = parseInt(str.substr(i + 7, 2), 16);\n                newStr += String.fromCharCode((c & 15) << 12 | (_c & 63) << 6 | c3 & 63);\n            } else {\n                newStr += str.substr(i, 9);\n            }\n            i += 9;\n        } else {\n            newStr += str.substr(i, 3);\n            i += 3;\n        }\n    }\n    return newStr;\n}\nfunction _normalizeComponentEncoding(components, protocol) {\n    function decodeUnreserved(str) {\n        var decStr = pctDecChars(str);\n        return !decStr.match(protocol.UNRESERVED) ? str : decStr;\n    }\n    if (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n    if (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    return components;\n}\n\nfunction _stripLeadingZeros(str) {\n    return str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\nfunction _normalizeIPv4(host, protocol) {\n    var matches = host.match(protocol.IPV4ADDRESS) || [];\n\n    var _matches = slicedToArray(matches, 2),\n        address = _matches[1];\n\n    if (address) {\n        return address.split(\".\").map(_stripLeadingZeros).join(\".\");\n    } else {\n        return host;\n    }\n}\nfunction _normalizeIPv6(host, protocol) {\n    var matches = host.match(protocol.IPV6ADDRESS) || [];\n\n    var _matches2 = slicedToArray(matches, 3),\n        address = _matches2[1],\n        zone = _matches2[2];\n\n    if (address) {\n        var _address$toLowerCase$ = address.toLowerCase().split('::').reverse(),\n            _address$toLowerCase$2 = slicedToArray(_address$toLowerCase$, 2),\n            last = _address$toLowerCase$2[0],\n            first = _address$toLowerCase$2[1];\n\n        var firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n        var lastFields = last.split(\":\").map(_stripLeadingZeros);\n        var isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n        var fieldCount = isLastFieldIPv4Address ? 7 : 8;\n        var lastFieldsStart = lastFields.length - fieldCount;\n        var fields = Array(fieldCount);\n        for (var x = 0; x < fieldCount; ++x) {\n            fields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n        }\n        if (isLastFieldIPv4Address) {\n            fields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n        }\n        var allZeroFields = fields.reduce(function (acc, field, index) {\n            if (!field || field === \"0\") {\n                var lastLongest = acc[acc.length - 1];\n                if (lastLongest && lastLongest.index + lastLongest.length === index) {\n                    lastLongest.length++;\n                } else {\n                    acc.push({ index: index, length: 1 });\n                }\n            }\n            return acc;\n        }, []);\n        var longestZeroFields = allZeroFields.sort(function (a, b) {\n            return b.length - a.length;\n        })[0];\n        var newHost = void 0;\n        if (longestZeroFields && longestZeroFields.length > 1) {\n            var newFirst = fields.slice(0, longestZeroFields.index);\n            var newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n            newHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n        } else {\n            newHost = fields.join(\":\");\n        }\n        if (zone) {\n            newHost += \"%\" + zone;\n        }\n        return newHost;\n    } else {\n        return host;\n    }\n}\nvar URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nvar NO_MATCH_IS_UNDEFINED = \"\".match(/(){0}/)[1] === undefined;\nfunction parse(uriString) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var components = {};\n    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n    if (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n    var matches = uriString.match(URI_PARSE);\n    if (matches) {\n        if (NO_MATCH_IS_UNDEFINED) {\n            //store each component\n            components.scheme = matches[1];\n            components.userinfo = matches[3];\n            components.host = matches[4];\n            components.port = parseInt(matches[5], 10);\n            components.path = matches[6] || \"\";\n            components.query = matches[7];\n            components.fragment = matches[8];\n            //fix port number\n            if (isNaN(components.port)) {\n                components.port = matches[5];\n            }\n        } else {\n            //IE FIX for improper RegExp matching\n            //store each component\n            components.scheme = matches[1] || undefined;\n            components.userinfo = uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined;\n            components.host = uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined;\n            components.port = parseInt(matches[5], 10);\n            components.path = matches[6] || \"\";\n            components.query = uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined;\n            components.fragment = uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined;\n            //fix port number\n            if (isNaN(components.port)) {\n                components.port = uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined;\n            }\n        }\n        if (components.host) {\n            //normalize IP hosts\n            components.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n        }\n        //determine reference type\n        if (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n            components.reference = \"same-document\";\n        } else if (components.scheme === undefined) {\n            components.reference = \"relative\";\n        } else if (components.fragment === undefined) {\n            components.reference = \"absolute\";\n        } else {\n            components.reference = \"uri\";\n        }\n        //check for reference errors\n        if (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n            components.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n        }\n        //find scheme handler\n        var schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n        //check if scheme can't handle IRIs\n        if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n            //if host component is a domain name\n            if (components.host && (options.domainHost || schemeHandler && schemeHandler.domainHost)) {\n                //convert Unicode IDN -> ASCII IDN\n                try {\n                    components.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n                } catch (e) {\n                    components.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n                }\n            }\n            //convert IRI -> URI\n            _normalizeComponentEncoding(components, URI_PROTOCOL);\n        } else {\n            //normalize encodings\n            _normalizeComponentEncoding(components, protocol);\n        }\n        //perform scheme specific parsing\n        if (schemeHandler && schemeHandler.parse) {\n            schemeHandler.parse(components, options);\n        }\n    } else {\n        components.error = components.error || \"URI can not be parsed.\";\n    }\n    return components;\n}\n\nfunction _recomposeAuthority(components, options) {\n    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n    var uriTokens = [];\n    if (components.userinfo !== undefined) {\n        uriTokens.push(components.userinfo);\n        uriTokens.push(\"@\");\n    }\n    if (components.host !== undefined) {\n        //normalize IP hosts, add brackets and escape zone separator for IPv6\n        uriTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, function (_, $1, $2) {\n            return \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\";\n        }));\n    }\n    if (typeof components.port === \"number\") {\n        uriTokens.push(\":\");\n        uriTokens.push(components.port.toString(10));\n    }\n    return uriTokens.length ? uriTokens.join(\"\") : undefined;\n}\n\nvar RDS1 = /^\\.\\.?\\//;\nvar RDS2 = /^\\/\\.(\\/|$)/;\nvar RDS3 = /^\\/\\.\\.(\\/|$)/;\nvar RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\nfunction removeDotSegments(input) {\n    var output = [];\n    while (input.length) {\n        if (input.match(RDS1)) {\n            input = input.replace(RDS1, \"\");\n        } else if (input.match(RDS2)) {\n            input = input.replace(RDS2, \"/\");\n        } else if (input.match(RDS3)) {\n            input = input.replace(RDS3, \"/\");\n            output.pop();\n        } else if (input === \".\" || input === \"..\") {\n            input = \"\";\n        } else {\n            var im = input.match(RDS5);\n            if (im) {\n                var s = im[0];\n                input = input.slice(s.length);\n                output.push(s);\n            } else {\n                throw new Error(\"Unexpected dot segment condition\");\n            }\n        }\n    }\n    return output.join(\"\");\n}\n\nfunction serialize(components) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var protocol = options.iri ? IRI_PROTOCOL : URI_PROTOCOL;\n    var uriTokens = [];\n    //find scheme handler\n    var schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n    //perform scheme specific serialization\n    if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n    if (components.host) {\n        //if host component is an IPv6 address\n        if (protocol.IPV6ADDRESS.test(components.host)) {}\n        //TODO: normalize IPv6 address as per RFC 5952\n\n        //if host component is a domain name\n        else if (options.domainHost || schemeHandler && schemeHandler.domainHost) {\n                //convert IDN via punycode\n                try {\n                    components.host = !options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host);\n                } catch (e) {\n                    components.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n                }\n            }\n    }\n    //normalize encoding\n    _normalizeComponentEncoding(components, protocol);\n    if (options.reference !== \"suffix\" && components.scheme) {\n        uriTokens.push(components.scheme);\n        uriTokens.push(\":\");\n    }\n    var authority = _recomposeAuthority(components, options);\n    if (authority !== undefined) {\n        if (options.reference !== \"suffix\") {\n            uriTokens.push(\"//\");\n        }\n        uriTokens.push(authority);\n        if (components.path && components.path.charAt(0) !== \"/\") {\n            uriTokens.push(\"/\");\n        }\n    }\n    if (components.path !== undefined) {\n        var s = components.path;\n        if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n            s = removeDotSegments(s);\n        }\n        if (authority === undefined) {\n            s = s.replace(/^\\/\\//, \"/%2F\"); //don't allow the path to start with \"//\"\n        }\n        uriTokens.push(s);\n    }\n    if (components.query !== undefined) {\n        uriTokens.push(\"?\");\n        uriTokens.push(components.query);\n    }\n    if (components.fragment !== undefined) {\n        uriTokens.push(\"#\");\n        uriTokens.push(components.fragment);\n    }\n    return uriTokens.join(\"\"); //merge tokens into a string\n}\n\nfunction resolveComponents(base, relative) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var skipNormalization = arguments[3];\n\n    var target = {};\n    if (!skipNormalization) {\n        base = parse(serialize(base, options), options); //normalize base components\n        relative = parse(serialize(relative, options), options); //normalize relative components\n    }\n    options = options || {};\n    if (!options.tolerant && relative.scheme) {\n        target.scheme = relative.scheme;\n        //target.authority = relative.authority;\n        target.userinfo = relative.userinfo;\n        target.host = relative.host;\n        target.port = relative.port;\n        target.path = removeDotSegments(relative.path || \"\");\n        target.query = relative.query;\n    } else {\n        if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n            //target.authority = relative.authority;\n            target.userinfo = relative.userinfo;\n            target.host = relative.host;\n            target.port = relative.port;\n            target.path = removeDotSegments(relative.path || \"\");\n            target.query = relative.query;\n        } else {\n            if (!relative.path) {\n                target.path = base.path;\n                if (relative.query !== undefined) {\n                    target.query = relative.query;\n                } else {\n                    target.query = base.query;\n                }\n            } else {\n                if (relative.path.charAt(0) === \"/\") {\n                    target.path = removeDotSegments(relative.path);\n                } else {\n                    if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n                        target.path = \"/\" + relative.path;\n                    } else if (!base.path) {\n                        target.path = relative.path;\n                    } else {\n                        target.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n                    }\n                    target.path = removeDotSegments(target.path);\n                }\n                target.query = relative.query;\n            }\n            //target.authority = base.authority;\n            target.userinfo = base.userinfo;\n            target.host = base.host;\n            target.port = base.port;\n        }\n        target.scheme = base.scheme;\n    }\n    target.fragment = relative.fragment;\n    return target;\n}\n\nfunction resolve(baseURI, relativeURI, options) {\n    var schemelessOptions = assign({ scheme: 'null' }, options);\n    return serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n}\n\nfunction normalize(uri, options) {\n    if (typeof uri === \"string\") {\n        uri = serialize(parse(uri, options), options);\n    } else if (typeOf(uri) === \"object\") {\n        uri = parse(serialize(uri, options), options);\n    }\n    return uri;\n}\n\nfunction equal(uriA, uriB, options) {\n    if (typeof uriA === \"string\") {\n        uriA = serialize(parse(uriA, options), options);\n    } else if (typeOf(uriA) === \"object\") {\n        uriA = serialize(uriA, options);\n    }\n    if (typeof uriB === \"string\") {\n        uriB = serialize(parse(uriB, options), options);\n    } else if (typeOf(uriB) === \"object\") {\n        uriB = serialize(uriB, options);\n    }\n    return uriA === uriB;\n}\n\nfunction escapeComponent(str, options) {\n    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE, pctEncChar);\n}\n\nfunction unescapeComponent(str, options) {\n    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED, pctDecChars);\n}\n\nvar handler = {\n    scheme: \"http\",\n    domainHost: true,\n    parse: function parse(components, options) {\n        //report missing host\n        if (!components.host) {\n            components.error = components.error || \"HTTP URIs must have a host.\";\n        }\n        return components;\n    },\n    serialize: function serialize(components, options) {\n        //normalize the default port\n        if (components.port === (String(components.scheme).toLowerCase() !== \"https\" ? 80 : 443) || components.port === \"\") {\n            components.port = undefined;\n        }\n        //normalize the empty path\n        if (!components.path) {\n            components.path = \"/\";\n        }\n        //NOTE: We do not parse query strings for HTTP URIs\n        //as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n        //and not the HTTP spec.\n        return components;\n    }\n};\n\nvar handler$1 = {\n    scheme: \"https\",\n    domainHost: handler.domainHost,\n    parse: handler.parse,\n    serialize: handler.serialize\n};\n\nvar O = {};\nvar isIRI = true;\n//RFC 3986\nvar UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nvar HEXDIG$$ = \"[0-9A-Fa-f]\"; //case-insensitive\nvar PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)); //expanded\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nvar ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nvar QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nvar VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nvar SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nvar UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nvar PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nvar NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nvar NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nvar NOT_HFVALUE = NOT_HFNAME;\nfunction decodeUnreserved(str) {\n    var decStr = pctDecChars(str);\n    return !decStr.match(UNRESERVED) ? str : decStr;\n}\nvar handler$2 = {\n    scheme: \"mailto\",\n    parse: function parse$$1(components, options) {\n        var mailtoComponents = components;\n        var to = mailtoComponents.to = mailtoComponents.path ? mailtoComponents.path.split(\",\") : [];\n        mailtoComponents.path = undefined;\n        if (mailtoComponents.query) {\n            var unknownHeaders = false;\n            var headers = {};\n            var hfields = mailtoComponents.query.split(\"&\");\n            for (var x = 0, xl = hfields.length; x < xl; ++x) {\n                var hfield = hfields[x].split(\"=\");\n                switch (hfield[0]) {\n                    case \"to\":\n                        var toAddrs = hfield[1].split(\",\");\n                        for (var _x = 0, _xl = toAddrs.length; _x < _xl; ++_x) {\n                            to.push(toAddrs[_x]);\n                        }\n                        break;\n                    case \"subject\":\n                        mailtoComponents.subject = unescapeComponent(hfield[1], options);\n                        break;\n                    case \"body\":\n                        mailtoComponents.body = unescapeComponent(hfield[1], options);\n                        break;\n                    default:\n                        unknownHeaders = true;\n                        headers[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n                        break;\n                }\n            }\n            if (unknownHeaders) mailtoComponents.headers = headers;\n        }\n        mailtoComponents.query = undefined;\n        for (var _x2 = 0, _xl2 = to.length; _x2 < _xl2; ++_x2) {\n            var addr = to[_x2].split(\"@\");\n            addr[0] = unescapeComponent(addr[0]);\n            if (!options.unicodeSupport) {\n                //convert Unicode IDN -> ASCII IDN\n                try {\n                    addr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n                } catch (e) {\n                    mailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n                }\n            } else {\n                addr[1] = unescapeComponent(addr[1], options).toLowerCase();\n            }\n            to[_x2] = addr.join(\"@\");\n        }\n        return mailtoComponents;\n    },\n    serialize: function serialize$$1(mailtoComponents, options) {\n        var components = mailtoComponents;\n        var to = toArray(mailtoComponents.to);\n        if (to) {\n            for (var x = 0, xl = to.length; x < xl; ++x) {\n                var toAddr = String(to[x]);\n                var atIdx = toAddr.lastIndexOf(\"@\");\n                var localPart = toAddr.slice(0, atIdx).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n                var domain = toAddr.slice(atIdx + 1);\n                //convert IDN via punycode\n                try {\n                    domain = !options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain);\n                } catch (e) {\n                    components.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n                }\n                to[x] = localPart + \"@\" + domain;\n            }\n            components.path = to.join(\",\");\n        }\n        var headers = mailtoComponents.headers = mailtoComponents.headers || {};\n        if (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n        if (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n        var fields = [];\n        for (var name in headers) {\n            if (headers[name] !== O[name]) {\n                fields.push(name.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) + \"=\" + headers[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar));\n            }\n        }\n        if (fields.length) {\n            components.query = fields.join(\"&\");\n        }\n        return components;\n    }\n};\n\nvar URN_PARSE = /^([^\\:]+)\\:(.*)/;\n//RFC 2141\nvar handler$3 = {\n    scheme: \"urn\",\n    parse: function parse$$1(components, options) {\n        var matches = components.path && components.path.match(URN_PARSE);\n        var urnComponents = components;\n        if (matches) {\n            var scheme = options.scheme || urnComponents.scheme || \"urn\";\n            var nid = matches[1].toLowerCase();\n            var nss = matches[2];\n            var urnScheme = scheme + \":\" + (options.nid || nid);\n            var schemeHandler = SCHEMES[urnScheme];\n            urnComponents.nid = nid;\n            urnComponents.nss = nss;\n            urnComponents.path = undefined;\n            if (schemeHandler) {\n                urnComponents = schemeHandler.parse(urnComponents, options);\n            }\n        } else {\n            urnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n        }\n        return urnComponents;\n    },\n    serialize: function serialize$$1(urnComponents, options) {\n        var scheme = options.scheme || urnComponents.scheme || \"urn\";\n        var nid = urnComponents.nid;\n        var urnScheme = scheme + \":\" + (options.nid || nid);\n        var schemeHandler = SCHEMES[urnScheme];\n        if (schemeHandler) {\n            urnComponents = schemeHandler.serialize(urnComponents, options);\n        }\n        var uriComponents = urnComponents;\n        var nss = urnComponents.nss;\n        uriComponents.path = (nid || options.nid) + \":\" + nss;\n        return uriComponents;\n    }\n};\n\nvar UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\n//RFC 4122\nvar handler$4 = {\n    scheme: \"urn:uuid\",\n    parse: function parse(urnComponents, options) {\n        var uuidComponents = urnComponents;\n        uuidComponents.uuid = uuidComponents.nss;\n        uuidComponents.nss = undefined;\n        if (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n            uuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n        }\n        return uuidComponents;\n    },\n    serialize: function serialize(uuidComponents, options) {\n        var urnComponents = uuidComponents;\n        //normalize UUID\n        urnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n        return urnComponents;\n    }\n};\n\nSCHEMES[handler.scheme] = handler;\nSCHEMES[handler$1.scheme] = handler$1;\nSCHEMES[handler$2.scheme] = handler$2;\nSCHEMES[handler$3.scheme] = handler$3;\nSCHEMES[handler$4.scheme] = handler$4;\n\nexports.SCHEMES = SCHEMES;\nexports.pctEncChar = pctEncChar;\nexports.pctDecChars = pctDecChars;\nexports.parse = parse;\nexports.removeDotSegments = removeDotSegments;\nexports.serialize = serialize;\nexports.resolveComponents = resolveComponents;\nexports.resolve = resolve;\nexports.normalize = normalize;\nexports.equal = equal;\nexports.escapeComponent = escapeComponent;\nexports.unescapeComponent = unescapeComponent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=uri.all.js.map\n","'use strict';\n\nvar resolve = require('./resolve')\n  , util = require('./util')\n  , errorClasses = require('./error_classes')\n  , stableStringify = require('fast-json-stable-stringify');\n\nvar validateGenerator = require('../dotjs/validate');\n\n/**\n * Functions below are used inside compiled validations function\n */\n\nvar ucs2length = util.ucs2length;\nvar equal = require('fast-deep-equal');\n\n// this error is thrown by async schemas to return validation errors via exception\nvar ValidationError = errorClasses.Validation;\n\nmodule.exports = compile;\n\n\n/**\n * Compiles schema to validation function\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Object} root object with information about the root schema for this schema\n * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution\n * @param  {String} baseId base ID for IDs in the schema\n * @return {Function} validation function\n */\nfunction compile(schema, root, localRefs, baseId) {\n  /* jshint validthis: true, evil: true */\n  /* eslint no-shadow: 0 */\n  var self = this\n    , opts = this._opts\n    , refVal = [ undefined ]\n    , refs = {}\n    , patterns = []\n    , patternsHash = {}\n    , defaults = []\n    , defaultsHash = {}\n    , customRules = [];\n\n  root = root || { schema: schema, refVal: refVal, refs: refs };\n\n  var c = checkCompiling.call(this, schema, root, baseId);\n  var compilation = this._compilations[c.index];\n  if (c.compiling) return (compilation.callValidate = callValidate);\n\n  var formats = this._formats;\n  var RULES = this.RULES;\n\n  try {\n    var v = localCompile(schema, root, localRefs, baseId);\n    compilation.validate = v;\n    var cv = compilation.callValidate;\n    if (cv) {\n      cv.schema = v.schema;\n      cv.errors = null;\n      cv.refs = v.refs;\n      cv.refVal = v.refVal;\n      cv.root = v.root;\n      cv.$async = v.$async;\n      if (opts.sourceCode) cv.source = v.source;\n    }\n    return v;\n  } finally {\n    endCompiling.call(this, schema, root, baseId);\n  }\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var validate = compilation.validate;\n    var result = validate.apply(this, arguments);\n    callValidate.errors = validate.errors;\n    return result;\n  }\n\n  function localCompile(_schema, _root, localRefs, baseId) {\n    var isRoot = !_root || (_root && _root.schema == _schema);\n    if (_root.schema != root.schema)\n      return compile.call(self, _schema, _root, localRefs, baseId);\n\n    var $async = _schema.$async === true;\n\n    var sourceCode = validateGenerator({\n      isTop: true,\n      schema: _schema,\n      isRoot: isRoot,\n      baseId: baseId,\n      root: _root,\n      schemaPath: '',\n      errSchemaPath: '#',\n      errorPath: '\"\"',\n      MissingRefError: errorClasses.MissingRef,\n      RULES: RULES,\n      validate: validateGenerator,\n      util: util,\n      resolve: resolve,\n      resolveRef: resolveRef,\n      usePattern: usePattern,\n      useDefault: useDefault,\n      useCustomRule: useCustomRule,\n      opts: opts,\n      formats: formats,\n      logger: self.logger,\n      self: self\n    });\n\n    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)\n                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)\n                   + sourceCode;\n\n    if (opts.processCode) sourceCode = opts.processCode(sourceCode);\n    // console.log('\\n\\n\\n *** \\n', JSON.stringify(sourceCode));\n    var validate;\n    try {\n      var makeValidate = new Function(\n        'self',\n        'RULES',\n        'formats',\n        'root',\n        'refVal',\n        'defaults',\n        'customRules',\n        'equal',\n        'ucs2length',\n        'ValidationError',\n        sourceCode\n      );\n\n      validate = makeValidate(\n        self,\n        RULES,\n        formats,\n        root,\n        refVal,\n        defaults,\n        customRules,\n        equal,\n        ucs2length,\n        ValidationError\n      );\n\n      refVal[0] = validate;\n    } catch(e) {\n      self.logger.error('Error compiling schema, function code:', sourceCode);\n      throw e;\n    }\n\n    validate.schema = _schema;\n    validate.errors = null;\n    validate.refs = refs;\n    validate.refVal = refVal;\n    validate.root = isRoot ? validate : _root;\n    if ($async) validate.$async = true;\n    if (opts.sourceCode === true) {\n      validate.source = {\n        code: sourceCode,\n        patterns: patterns,\n        defaults: defaults\n      };\n    }\n\n    return validate;\n  }\n\n  function resolveRef(baseId, ref, isRoot) {\n    ref = resolve.url(baseId, ref);\n    var refIndex = refs[ref];\n    var _refVal, refCode;\n    if (refIndex !== undefined) {\n      _refVal = refVal[refIndex];\n      refCode = 'refVal[' + refIndex + ']';\n      return resolvedRef(_refVal, refCode);\n    }\n    if (!isRoot && root.refs) {\n      var rootRefId = root.refs[ref];\n      if (rootRefId !== undefined) {\n        _refVal = root.refVal[rootRefId];\n        refCode = addLocalRef(ref, _refVal);\n        return resolvedRef(_refVal, refCode);\n      }\n    }\n\n    refCode = addLocalRef(ref);\n    var v = resolve.call(self, localCompile, root, ref);\n    if (v === undefined) {\n      var localSchema = localRefs && localRefs[ref];\n      if (localSchema) {\n        v = resolve.inlineRef(localSchema, opts.inlineRefs)\n            ? localSchema\n            : compile.call(self, localSchema, root, localRefs, baseId);\n      }\n    }\n\n    if (v === undefined) {\n      removeLocalRef(ref);\n    } else {\n      replaceLocalRef(ref, v);\n      return resolvedRef(v, refCode);\n    }\n  }\n\n  function addLocalRef(ref, v) {\n    var refId = refVal.length;\n    refVal[refId] = v;\n    refs[ref] = refId;\n    return 'refVal' + refId;\n  }\n\n  function removeLocalRef(ref) {\n    delete refs[ref];\n  }\n\n  function replaceLocalRef(ref, v) {\n    var refId = refs[ref];\n    refVal[refId] = v;\n  }\n\n  function resolvedRef(refVal, code) {\n    return typeof refVal == 'object' || typeof refVal == 'boolean'\n            ? { code: code, schema: refVal, inline: true }\n            : { code: code, $async: refVal && !!refVal.$async };\n  }\n\n  function usePattern(regexStr) {\n    var index = patternsHash[regexStr];\n    if (index === undefined) {\n      index = patternsHash[regexStr] = patterns.length;\n      patterns[index] = regexStr;\n    }\n    return 'pattern' + index;\n  }\n\n  function useDefault(value) {\n    switch (typeof value) {\n      case 'boolean':\n      case 'number':\n        return '' + value;\n      case 'string':\n        return util.toQuotedString(value);\n      case 'object':\n        if (value === null) return 'null';\n        var valueStr = stableStringify(value);\n        var index = defaultsHash[valueStr];\n        if (index === undefined) {\n          index = defaultsHash[valueStr] = defaults.length;\n          defaults[index] = value;\n        }\n        return 'default' + index;\n    }\n  }\n\n  function useCustomRule(rule, schema, parentSchema, it) {\n    var validateSchema = rule.definition.validateSchema;\n    if (validateSchema && self._opts.validateSchema !== false) {\n      var valid = validateSchema(schema);\n      if (!valid) {\n        var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);\n        if (self._opts.validateSchema == 'log') self.logger.error(message);\n        else throw new Error(message);\n      }\n    }\n\n    var compile = rule.definition.compile\n      , inline = rule.definition.inline\n      , macro = rule.definition.macro;\n\n    var validate;\n    if (compile) {\n      validate = compile.call(self, schema, parentSchema, it);\n    } else if (macro) {\n      validate = macro.call(self, schema, parentSchema, it);\n      if (opts.validateSchema !== false) self.validateSchema(validate, true);\n    } else if (inline) {\n      validate = inline.call(self, it, rule.keyword, schema, parentSchema);\n    } else {\n      validate = rule.definition.validate;\n      if (!validate) return;\n    }\n\n    if (validate === undefined)\n      throw new Error('custom keyword \"' + rule.keyword + '\"failed to compile');\n\n    var index = customRules.length;\n    customRules[index] = validate;\n\n    return {\n      code: 'customRule' + index,\n      validate: validate\n    };\n  }\n}\n\n\n/**\n * Checks if the schema is currently compiled\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Object} object with properties \"index\" (compilation index) and \"compiling\" (boolean)\n */\nfunction checkCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var index = compIndex.call(this, schema, root, baseId);\n  if (index >= 0) return { index: index, compiling: true };\n  index = this._compilations.length;\n  this._compilations[index] = {\n    schema: schema,\n    root: root,\n    baseId: baseId\n  };\n  return { index: index, compiling: false };\n}\n\n\n/**\n * Removes the schema from the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n */\nfunction endCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var i = compIndex.call(this, schema, root, baseId);\n  if (i >= 0) this._compilations.splice(i, 1);\n}\n\n\n/**\n * Index of schema compilation in the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Integer} compilation index\n */\nfunction compIndex(schema, root, baseId) {\n  /* jshint validthis: true */\n  for (var i=0; i<this._compilations.length; i++) {\n    var c = this._compilations[i];\n    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;\n  }\n  return -1;\n}\n\n\nfunction patternCode(i, patterns) {\n  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';\n}\n\n\nfunction defaultCode(i) {\n  return 'var default' + i + ' = defaults[' + i + '];';\n}\n\n\nfunction refValCode(i, refVal) {\n  return refVal[i] === undefined ? '' : 'var refVal' + i + ' = refVal[' + i + '];';\n}\n\n\nfunction customRuleCode(i) {\n  return 'var customRule' + i + ' = customRules[' + i + '];';\n}\n\n\nfunction vars(arr, statement) {\n  if (!arr.length) return '';\n  var code = '';\n  for (var i=0; i<arr.length; i++)\n    code += statement(i, arr);\n  return code;\n}\n","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"@charset \\\"utf-8\\\";\\r\\n\\r\\n/*\\r\\n *  Search UI.\\r\\n */\\r\\n.pdfanno-search-result {\\r\\n    position: absolute;\\r\\n    background-color: rgba(0, 255, 0, 0.7)\\r\\n}\\r\\n.pdfanno-search-result--highlight {\\r\\n    background-color: rgba(255, 0, 0, 0.7)\\r\\n}\\r\\n\\r\\n/*\\r\\n * Text Layer.\\r\\n */\\r\\n.pdfanno-text-layer {\\r\\n    position: absolute;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Annotation Layer.\\r\\n */\\r\\n.annoLayer > * {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n.annoLayer > *.\\\\--hover,\\r\\n.annoLayer > *.\\\\--selected {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n/**\\r\\n    Annotation Knob for control.\\r\\n*/\\r\\n.anno-knob {\\r\\n    position: absolute;\\r\\n    background-color: blue;\\r\\n    border-radius: 50%;\\r\\n    transition: 0.2s;\\r\\n    transform-origin: center center;\\r\\n}\\r\\n.\\\\--hover .anno-knob,\\r\\n.\\\\--selected .anno-knob {\\r\\n  box-shadow: rgba(113,135,164,.2) 1px 1px 1px;\\r\\n  transform: scale(2);\\r\\n}\\r\\n.anno-knob.is-readonly {\\r\\n    border-radius: 0;\\r\\n    transform: rotate(45deg) scale(0.7);\\r\\n}\\r\\n.\\\\--hover .anno-knob.is-readonly,\\r\\n.\\\\--selected .anno-knob.is-readonly {\\r\\n  transform: rotate(45deg) scale(1.4);\\r\\n}\\r\\n\\r\\n/*\\r\\n * Span Annotation.\\r\\n */\\r\\n.anno-span {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    visibility: visible;\\r\\n}\\r\\n.anno-span__area {\\r\\n    position: absolute;\\r\\n    border: 1px solid black;\\r\\n}\\r\\n.\\\\--hover .anno-span__area,\\r\\n.\\\\--selected .anno-span__area {\\r\\n  border: 1px dashed black !important;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n.anno-span__area.no-border,\\r\\n.\\\\--hover .anno-span__area.no-border,\\r\\n.\\\\--selected .anno-span__area.no-border {\\r\\n  border-width: 0 !important;\\r\\n}\\r\\n.anno-span__border {\\r\\n  position: absolute;\\r\\n  /*\\r\\n  #135 Change the style of Reference Anno\\r\\n  border-bottom-width: 1px;\\r\\n  border-bottom-style: solid;\\r\\n  */\\r\\n  border: 1px solid black;\\r\\n}\\r\\n\\r\\n/*TODO Relationを描画した直後は、位置が少しずれる。その後にフォーカスが外れると正しい位置へ移動する。*/\\r\\n\\r\\n/**\\r\\n  Relation Annotation.\\r\\n*/\\r\\n.\\\\--hover .anno-relation,\\r\\n.\\\\--selected .anno-relation {\\r\\n  stroke-width: 2px;\\r\\n}\\r\\n.anno-relation-outline {\\r\\n  fill: none;\\r\\n  visibility: hidden;\\r\\n}\\r\\n.\\\\--selected .anno-relation-outline {\\r\\n  visibility: visible;\\r\\n  stroke: black;\\r\\n  stroke-width: 3px;\\r\\n  pointer-events: stroke;\\r\\n  stroke-dasharray: 5;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Span Annotation.\\r\\n */\\r\\n.anno-span rect {\\r\\n    /* Enable the hover event on circles and text even if they are overwraped other spans. */\\r\\n    pointer-events: none;\\r\\n}\\r\\n\\r\\n/**\\r\\n  Rect Annotation.\\r\\n*/\\r\\n.anno-rect-base {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    visibility: visible;\\r\\n}\\r\\n.anno-rect {\\r\\n    position: absolute;\\r\\n}\\r\\n.\\\\--hover .anno-rect {\\r\\n  box-shadow: 0 0 0 1px #ccc inset;\\r\\n  stroke: #ccc;\\r\\n  stroke-width: 0.75px;\\r\\n}\\r\\n.\\\\--selected .anno-rect {\\r\\n  stroke: black;\\r\\n  stroke-width: 0.5px;\\r\\n  stroke-dasharray: 3;\\r\\n}\\r\\n\\r\\n/**\\r\\n Disable text layers.\\r\\n*/\\r\\nbody.disable-text-layer .textLayer {\\r\\n    display: none;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./index.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./index.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./index.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}